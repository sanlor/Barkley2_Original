<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(mWheat, 100, 0);

mouCou = 0;
mouDid = 0;
event_user(0); //Mouth data

with (oWheatHoopz) visible = 0;

tim = 0;
for (i = 0; i &lt; 100; i += 1) camHop[i] = "";
i = 0;
camTim[i] = 0;
camDur[i] = 2.5;
camPntA[i] = "shot0a"; 
camPntB[i] = "shot0b";

i += 1;
camTim[i] = 2.5;
camDur[i] = 2;
camPntA[i] = "shot1a"; 
camPntB[i] = "shot1b";

i += 1;
camTim[i] = 4.5;
camDur[i] = 3;
camPntA[i] = "shot2a"; 
camPntB[i] = "shot2b";

i += 1;
camTim[i] = 7.5;
camDur[i] = 2.5;
camPntA[i] = "shot3a"; 
camPntB[i] = "shot3b";

i += 1;
camTim[i] = 10;
camDur[i] = 3;
camPntA[i] = "tree0a"; 
camPntB[i] = "tree0b";

i += 1;
camTim[i] = 13;
camDur[i] = 3;
camPntA[i] = "pondZoomA"; 
camPntB[i] = "pondZoomB";

i += 1;
camTim[i] = 16;
camDur[i] = 3;
camPntA[i] = "pondPanA"; 
camPntB[i] = "pondPanB";

i += 1;
camTim[i] = 19;
camDur[i] = 4;
camPntA[i] = "pondScanA"; 
camPntB[i] = "pondScanB";

i += 1;
camTim[i] = 23;
camDur[i] = 4;
camPntA[i] = "pondSingA"; 
camPntB[i] = "pondSingA";

i += 1;
camTim[i] = 27;
camDur[i] = 4;
camPntA[i] = "pondTrembleA"; 
camPntB[i] = "pondTrembleB";

i += 1;
camTim[i] = 31;
camDur[i] = 4;
camPntA[i] = "wheatPan1a"; 
camPntB[i] = "wheatPan1b";

i += 1;
camTim[i] = 35;
camDur[i] = 2;
camPntA[i] = "pondScanB"; 
camPntB[i] = "pondScanB";

i += 1;
camTim[i] = 37;
camDur[i] = 2;
camPntA[i] = "pondSingA"; 
camPntB[i] = "pondSingA";

i += 1;
camTim[i] = 38;
camDur[i] = 5;
camPntA[i] = "sunLook0a"; 
camPntB[i] = "sunLook0b";

i += 1;
camTim[i] = 43;
camDur[i] = 3;
camPntA[i] = "wheatSpeed0a"; 
camPntB[i] = "wheatSpeed0b";

i += 1;
camTim[i] = 46;
camDur[i] = 2;
camPntA[i] = "swallow0a"; 
camPntB[i] = "swallow0b";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 48;
camDur[i] = 2;
camPntA[i] = "swallow0b"; 
camPntB[i] = "swallow0c";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 50;
camDur[i] = 2;
camPntA[i] = "swallow0c"; 
camPntB[i] = "swallow0d";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 52;
camDur[i] = 2;
camPntA[i] = "swallow0d"; 
camPntB[i] = "swallow0e";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 54;
camDur[i] = 3;
camPntA[i] = "pondOut0A"; 
camPntB[i] = "pondOut0B";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 57;
camDur[i] = 3;
camPntA[i] = "wheatSpeed0b"; 
camPntB[i] = "wheatSpeed0a";

i += 1;
camTim[i] = 60;
camDur[i] = 2;
camPntA[i] = "pondSingA"; 
camPntB[i] = "pondSingA";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 62;
camDur[i] = 3;
camPntA[i] = "pondPanB"; 
camPntB[i] = "pondPanA";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 65;
camDur[i] = 1;
camPntA[i] = "so"; 
camPntB[i] = "so";
camHop[i] = "pondStare";

h = 0;
repeat (8)
{
    i += 1;
    camTim[i] = 66 + h;
    camDur[i] = 1;
    camPntA[i] = "swoop" + Str(h); h += 1;
    camPntB[i] = "swoop" + Str(h);
    camHop[i] = "pondStare";
}

i += 1;
camTim[i] = 74;
camDur[i] = 2;
camPntA[i] = "so"; 
camPntB[i] = "so";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 76;
camDur[i] = 3;
camPntA[i] = "pondBack"; 
camPntB[i] = "pondBack";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 79;
camDur[i] = 3;
camPntA[i] = "pondScanB"; 
camPntB[i] = "pondScanB";
camHop[i] = "pondStare";

i += 1;
camTim[i] = 82;
camDur[i] = 5;
camPntA[i] = "shot0b"; 
camPntB[i] = "shot0a";
camHop[i] = "pondStare";

camCou = i + 1;
for (i = 0; i &lt; camCou; i += 1) camOne[i] = 1;
camInd = -1;

for (i = 0; i &lt; 16; i += 1) { linTim[i] = 0; linDur[i] = 0; }

lin[0] = "Be still the wind,"; linTim[0] = 10; linDur[0] = 2;
lin[1] = "stay your breath for a while."; linTim[1] = 12; linDur[1] = 3.5;

lin[2] = "Do I bear the face of a man or a child?"; linTim[2] = 19; linDur[2] = 5.5;

lin[3] = "These waters they tremble"; linTim[3] = 27; linDur[3] = 3;
lin[4] = "with fragility."; linTim[4] = 30; linDur[4] = 2.5;

lin[5] = "Is this my reflection"; linTim[5] = 37; linDur[5] = 2.5;
lin[6] = "or what you want me to see?"; linTim[6] = 39.5; linDur[6] = 3.5;

lin[7] = "I swallow my pride,"; linTim[7] = 46; linDur[7] = 4;
lin[8] = "I'm just a boy, reflected inside."; linTim[8] = 50; linDur[8] = 5;

lin[9] = "But theres no calm to the wind,"; linTim[9] = 55.5; linDur[9] = 4.5;
lin[10] = "my inner light shines not from within."; linTim[10] = 60; linDur[10] = 5;

lin[11] = "So!"; linTim[11] = 65; linDur[11] = 1.5;
lin[12] = "Is this what I should be?"; linTim[12] = 66.5; linDur[12] = 4;
lin[13] = "Is this my own... identity?"; linTim[13] = 70.5; linDur[13] = 5.5;

lin[14] = "Or will the blustering cease,"; linTim[14] = 76; linDur[14] = 5;
lin[15] = "and my reflection find its peace?"; linTim[15] = 81; linDur[15] = 5;

linCou = 16;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera
oSun.z -= 6 * global.timSec;
camInd = -1;

with (oWheatHoopz) mou = 0;
for (i = 0; i &lt; mouCou; i += 1)
{
    if (tim &gt;= mouTim[i] &amp;&amp; tim &lt; mouTim[i] + mouDur[i]) 
    {
        with (oWheatHoopz) mou = 1;
    }
}

for (i = 0; i &lt; camCou; i += 1)
{
    if (tim &gt;= camTim[i] &amp;&amp; tim &lt; camTim[i] + camDur[i]) 
    { 
        pct = (tim - camTim[i]) / camDur[i];
        CameraPoint(camPntA[i]);
        oCamera3D.x = camX;
        oCamera3D.y = camY;
        oCamera3D.z = camZ;
        oCamera3D.dir = camDir;
        oCamera3D.pit = camPit;
        xPre = oCamera3D.x;
        yPre = oCamera3D.y;
        CameraPoint(camPntB[i]);
        oCamera3D.x += (camX - oCamera3D.x) * pct;
        oCamera3D.y += (camY - oCamera3D.y) * pct;
        oCamera3D.z += (camZ - oCamera3D.z) * pct;
        oCamera3D.dir += (camDir - oCamera3D.dir) * pct;
        oCamera3D.pit += (camPit - oCamera3D.pit) * pct;
        xDel = oCamera3D.x - xPre;
        yDel = oCamera3D.y - yPre;
        camInd = i;
        break;
    }
}


var obj = id;
with (oWheatHoopz) visible = 0;
if (camInd == 3)
{
    with (oWheatHoopz)
    {
        if (nam == "wheatWalk")
        {
            x = xstart + obj.xDel;
            y = ystart + obj.yDel;
            visible = 1;
        }
    }
    camOne[3] = 0;
}
if (camInd == 4)
{
    with (oWheatHoopz)
    {
        if (nam == "treeWalk")
        {
            x = xstart + obj.xDel;
            y = ystart + obj.yDel;
            visible = 1;
        }
    }
    camOne[4] = 0;
}
if (camInd == 6)
{
    with (oWheatHoopz)
    {
        if (nam == "pondStare") visible = 1;
    }
}
if (camInd == 7)
{
    oPond.reflect = 1;
}
if (camInd == 8)
{
    with (oWheatHoopz)
    {
        if (nam == "pondStare") visible = 1;
    }
}
if (camInd == 9)
{
    oPond.ani = 1;
}
if (camInd == 12 || camInd == 13)
{
    with (oWheatHoopz)
    {
        if (nam == "pondStare") visible = 1;
    }
}
if (camInd != -1)
{
    var cmn = camHop[camInd];
    with (oWheatHoopz)
    {
        if (nam == cmn) visible = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouth capture
exit;
oWheatHoopz.mou = 0;
if (keyboard_check(ord('Z')))
{
    if (mouDid == 0)
    {
        mouTim[mouCou] = tim;
    }
    oWheatHoopz.mou = 1;
    mouDid = 1;
}
else
{
    if (mouDid == 1)
    {
        mouDur[mouCou] = tim - mouTim[mouCou];
        mouCou += 1;
        mouDid = 0;
    }
}


if (keyboard_check_pressed(vk_control))
{
    str = "mouCou = " + Str(mouCou) + "; ";
    for (i = 0; i &lt; mouCou; i += 1)
    {
        str += "mouTim[" + Str(i) + "] = " + Str(mouTim[i]) + "; ";
        str += "mouDur[" + Str(i) + "] = " + Str(mouDur[i]) + "; ";
    }
    get_string("String", str);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouth data
mouCou = 103; mouTim[0] = 10.30; mouDur[0] = 0.32; mouTim[1] = 10.82; mouDur[1] = 0.19; mouTim[2] = 11.29; mouDur[2] = 0.25; mouTim[3] = 11.75; mouDur[3] = 0.52; mouTim[4] = 12.37; mouDur[4] = 0.11; mouTim[5] = 12.55; mouDur[5] = 0.23; mouTim[6] = 12.99; mouDur[6] = 0.51; mouTim[7] = 13.68; mouDur[7] = 0.11; mouTim[8] = 13.85; mouDur[8] = 0.23; mouTim[9] = 14.38; mouDur[9] = 0.89; mouTim[10] = 19.31; mouDur[10] = 0.18; mouTim[11] = 19.63; mouDur[11] = 0.30; mouTim[12] = 20.20; mouDur[12] = 0.13; mouTim[13] = 20.41; mouDur[13] = 0.18; mouTim[14] = 20.81; mouDur[14] = 0.34; mouTim[15] = 21.35; mouDur[15] = 0.10; mouTim[16] = 21.54; mouDur[16] = 0.14; mouTim[17] = 21.92; mouDur[17] = 0.47; mouTim[18] = 22.53; mouDur[18] = 0.12; mouTim[19] = 22.74; mouDur[19] = 0.18; mouTim[20] = 23.28; mouDur[20] = 1.5; mouTim[21] = 27.61; mouDur[21] = 0.17; mouTim[22] = 28.06; mouDur[22] = 0.76; mouTim[23] = 28.93; mouDur[23] = 0.11; mouTim[24] = 29.13; mouDur[24] = 0.20; mouTim[25] = 29.61; mouDur[25] = 0.37; mouTim[26] = 30.05; mouDur[26] = 0.31; mouTim[27] = 30.50; mouDur[27] = 0.20; mouTim[28] = 30.93; mouDur[28] = 0.58; mouTim[29] = 31.59; mouDur[29] = 0.09; mouTim[30] = 31.74; mouDur[30] = 0.10; mouTim[31] = 32.18; mouDur[31] = 1.13; mouTim[32] = 37.18; mouDur[32] = 0.19; mouTim[33] = 37.52; mouDur[33] = 0.37; mouTim[34] = 38.02; mouDur[34] = 0.18; mouTim[35] = 38.34; mouDur[35] = 0.17; mouTim[36] = 38.73; mouDur[36] = 0.17; mouTim[37] = 39.14; mouDur[37] = 0.18; mouTim[38] = 39.57; mouDur[38] = 0.14; mouTim[39] = 40.02; mouDur[39] = 0.16; mouTim[40] = 40.40; mouDur[40] = 0.16; mouTim[41] = 40.78; mouDur[41] = 0.20; mouTim[42] = 41.20; mouDur[42] = 1.21; mouTim[43] = 46.25; mouDur[43] = 0.94; mouTim[44] = 47.55; mouDur[44] = 0.20; mouTim[45] = 48.04; mouDur[45] = 0.18; mouTim[46] = 48.46; mouDur[46] = 0.18; mouTim[47] = 48.89; mouDur[47] = 0.74; mouTim[48] = 50.11; mouDur[48] = 0.19; mouTim[49] = 50.53; mouDur[49] = 0.18; mouTim[50] = 50.99; mouDur[50] = 0.18; mouTim[51] = 51.48; mouDur[51] = 0.83; mouTim[52] = 52.44; mouDur[52] = 0.13; mouTim[53] = 52.78; mouDur[53] = 0.10; mouTim[54] = 53.18; mouDur[54] = 0.11; mouTim[55] = 53.57; mouDur[55] = 0.16; mouTim[56] = 53.93; mouDur[56] = 1.35; mouTim[57] = 55.72; mouDur[57] = 0.16; mouTim[58] = 56.06; mouDur[58] = 0.18; mouTim[59] = 56.53; mouDur[59] = 0.81; mouTim[60] = 57.72; mouDur[60] = 0.18; mouTim[61] = 58.08; mouDur[61] = 0.18; mouTim[62] = 58.64; mouDur[62] = 0.14; mouTim[63] = 59.01; mouDur[63] = 0.78; mouTim[64] = 60.27; mouDur[64] = 0.28; mouTim[65] = 60.73; mouDur[65] = 0.19; mouTim[66] = 61.14; mouDur[66] = 0.20; mouTim[67] = 61.59; mouDur[67] = 0.93; mouTim[68] = 62.71; mouDur[68] = 0.17; mouTim[69] = 63.03; mouDur[69] = 0.35; mouTim[70] = 63.75; mouDur[70] = 0.09; mouTim[71] = 63.94; mouDur[71] = 0.13; mouTim[72] = 64.37; mouDur[72] = 1.00; mouTim[73] = 65.49; mouDur[73] = 1.04; mouTim[74] = 66.91; mouDur[74] = 0.74; mouTim[75] = 67.84; mouDur[75] = 0.16; mouTim[76] = 68.20; mouDur[76] = 0.17; mouTim[77] = 68.60; mouDur[77] = 0.19; mouTim[78] = 68.99; mouDur[78] = 0.18; mouTim[79] = 69.43; mouDur[79] = 0.82; mouTim[80] = 70.75; mouDur[80] = 0.19; mouTim[81] = 71.12; mouDur[81] = 0.19; mouTim[82] = 71.51; mouDur[82] = 0.20; mouTim[83] = 72.01; mouDur[83] = 0.76; mouTim[84] = 73.31; mouDur[84] = 0.23; mouTim[85] = 73.78; mouDur[85] = 0.20; mouTim[86] = 74.19; mouDur[86] = 0.20; mouTim[87] = 74.70; mouDur[87] = 0.73; mouTim[88] = 76.48; mouDur[88] = 0.19; mouTim[89] = 76.86; mouDur[89] = 0.29; mouTim[90] = 77.27; mouDur[90] = 0.64; mouTim[91] = 78.17; mouDur[91] = 0.17; mouTim[92] = 78.55; mouDur[92] = 0.19; mouTim[93] = 79.20; mouDur[93] = 0.27; mouTim[94] = 79.79; mouDur[94] = 0.86; mouTim[95] = 81.21; mouDur[95] = 0.31; mouTim[96] = 81.60; mouDur[96] = 0.23; mouTim[97] = 81.98; mouDur[97] = 0.21; mouTim[98] = 82.43; mouDur[98] = 0.65; mouTim[99] = 83.19; mouDur[99] = 0.21; mouTim[100] = 83.59; mouDur[100] = 0.66; mouTim[101] = 84.36; mouDur[101] = 0.24; mouTim[102] = 84.89; mouDur[102] = 1.36; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
if (camInd == 2)
{
    draw_sprite_ext(sWheatHand, 0, 1280, 0, 64, 64, 0, c_white, 1);
}

tim += global.timSec;
txt = "";
for (i = 0; i &lt; linCou; i += 1)
{
    if (tim &gt;= linTim[i] &amp;&amp; tim &lt; linTim[i] + linDur[i]) 
    { 
        txt = lin[i];
        break;
    }
}
if (txt != "")
{
    draw_set_font(Arial36i);
    draw_set_halign(1);
    draw_set_valign(1);
    linX = 1280 / 2;
    linY = floor(720 * 0.9);
    draw_set_color(c_dkgray);
    for (dir = 0; dir &lt; 360; dir += 45)
    {
        ldx = lengthdir_x(2, dir);
        ldy = lengthdir_y(2, dir);
        draw_text(linX + ldx, linY + ldy, txt);
    }
    draw_set_color(merge_color(c_yellow, c_dkgray, 0.2));
    draw_text(linX, linY, txt);
}
draw_set_color(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tim += 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

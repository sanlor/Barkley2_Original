<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
for (i=0; i&lt;4; i+=1;) button_hover[i] = false;

// Pointer //
instance_create(x, y, o_pointer);
active = true;

global.fn_2 = font_add_sprite(s_fn2, ord(" "), 1, 0);
global.fn_1 = font_add_sprite(s_fn1, ord(" "), 1, -1);
global.fn_small = font_add_sprite(s_fn2, ord('!'), 1, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Select shite //
if active = true then
    {
    for (i=0; i&lt;4; i+=1;) button_hover[i] = scr_cc_button_xy(32, 160, 32 + i * 16, 42 + i * 16);
    
    // Click //
    if mouse_check_button_pressed(mb_left) then  // BONG if scr_input_check_pressed(KEYID_ACTION, PLAYER1) then
        {
        // Debug //
        instance_create(x, y, o_cc_wizard);
        active = false;
        instance_destroy();
        
        // New character //
        if button_hover[0] = true then
            {
            instance_create(x, y, o_cc_wizard);
            active = false;
            instance_destroy();
            }
            
        // Enter a passcode //
        if button_hover[1] = true then
            {
            //active = false;
            }
            
        // Assemble the party //
        if button_hover[2] = true then
            {
            instance_create(x, y, o_cc_party);
            active = false;
            instance_destroy();
            }
            
        // Begin the game //
        if button_hover[3] = true then
            {
            //active = false;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Menu //
draw_set_font(global.fn_2);
draw_set_halign(fa_left);
draw_set_color(c_white);
draw_set_alpha(1);

// Options //
if button_hover[0] = true then draw_set_color(c_red);
else draw_set_color(c_white);
draw_text(32, 32, "Create a new character");

if button_hover[1] = true then draw_set_color(c_red);
else draw_set_color(c_white);
draw_text(32, 48, "Enter a passcode");

if button_hover[2] = true then draw_set_color(c_red);
else draw_set_color(c_white);
draw_text(32, 64, "Assemble your party");

if button_hover[3] = true then draw_set_color(c_red);
else draw_set_color(c_white);
draw_text(32, 80, "Begin Barkley 2");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

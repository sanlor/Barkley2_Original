<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Phase setup //
phase[0] = 80;
phase[1] = 1;
phase[2] = 0;
phase[3] = 0;

// Textbox setup //
textbox_written = "";
textbox_goal = "";
textbox_pause = 0;
textbox_position = 0;
textbox_skip = false;  

// Alpha setup //
alpha_textbox = 0;
alpha_textbox_goal = 0;
alpha_textbox_timer = 0;
alpha_event = 0;
alpha_event_goal = 0;

// Other shite //
o_cc_wizard.alpha_goal = 0;

for (i=0; i&lt;27; i+=1;) option_hover[i] = false;

button_up = false;
button_down = false;

option_exit = false;

scroll = 0;

pax_intro = false;
active = false;
scroll = 0;
card_selected = 0;
info = false;
gumball = -1;

// Cards //
card_name[0] = "Werthers";
card_name[1] = "Old gumball";
card_name[2] = "- - Destroy old gumball";
card_name[3] = "- - Keep old gumball";
card_name[4] = "Transparent";
card_name[5] = "Winner";
card_name[6] = "Steel";
card_name[7] = "Red gumball";
card_name[8] = "- - Strawberry";
card_name[9] = "- - Cherry";
card_name[10] = "Yellow gumball";
card_name[11] = "- - Banana";
card_name[12] = "- - Lemon";
card_name[13] = "Blue gumball";
card_name[14] = "- - Blueberry";
card_name[15] = "- - Blue raspberry";
card_name[16] = "White gumball";
card_name[17] = "- - No flavor";
card_name[18] = "- - Some flavor";
card_name[19] = "Green gumball";
card_name[20] = "- - Sour apple";
card_name[21] = "- - Watermelon";
card_name[22] = "Orange gumball";
card_name[23] = "- - Orange the color";
card_name[24] = "- - Orange the flavor";
card_name[25] = "Black gumball";
card_name[26] = "- - Licorice";
card_name[27] = "- - Coffee";
card_name[28] = "Purple gumball";

text_card[0] = "How fortunate you are! This butterscotch gumball has a delectable caramel flavor.##It also shares a color with a fabled candy: Werther's Original. Imagine, a Werther's Original gumball... if only we could be so blessed!"
text_card[1] = "Disgusting... an ancient, weathered gumball, wearing scars earned from millenia of erosion and decay. This antediluvian gumball is surely a cursed relic which will bring you nothing but misfortune. Shall I destroy it?"
text_card[2] = "Good. Such a foul gumball should not be permitted to exist!"
text_card[3] = "You fool! No good can come from that ball...";
text_card[4] = "How curious, a fully transparent gumball. What magic or natural processes created this gumball may never be known, but we've been given a rare window into an heretofore unseen microcosm. A truly priceless artifact for any gumball hobbyist or scholar."
text_card[5] = "Congratulations, child! The recipient's ownership and then subsequent forfeiture of this WINNER gumball to a contest organizer entitles the recipient to one prize. Let it be known, you're in a very enviable position while you possess this gumball."
text_card[6] = "How did that get there?... a solid steel gumball! I don't envy your pockets, youngster! Let's hope they're double-stitched if they're going to be laden with this weighty gumball."
text_card[7] = "Nothing makes you feel young again quite like a red gumball. This sanguine gumb arouses slumbering memories with its bold looks and classic fruit flavor. What gumball from your past do you wish to remember?"
text_card[8] = "Delicious choice. But keep in mind, the delicate skin of a strawberry gumball can bruise easily from the slightest impact. I think you need to chew it, pronto.";
text_card[9] = "So, you prefer the complex, dusky taste of a cherry gumball, do you? I can tell you made that choice after much deliberation, my child. Your wrinkled brow betrays your consternation. Thankfully, the act of making any decision at all usually lightens the burden.";
text_card[10] = "A gleaming gumball, the color of the sun. It would be prudent to expect a bright, perhaps illuminating flavor from a yellow gumball. It is nearing dawn. Take it in your hand. You should feel your hopes rising with the sun. What flavor are your hopes set on?";
text_card[11] = "Then I trust that's what you'll find, youngster. Banana is a common flavor in the gumball canon. It's banana, undoubtedly.";
text_card[12] = "Interesting. Even... quite interesting. A lemon gumball... by Clispaeth...";
text_card[13] = "What a splendid find! Your new blue gumball glitters on the horizon like the Ishtar Gate, a timeless monument of flavor. What fruit is depicted in the bas-relief adorning this mighty gumball?";
text_card[14] = "Right you are. The chaotic war scenes on the south side of the gumball transition through detailed scenes of manufacturing and eventually tranquil depictions of domestic life in antiquity. That each of these scenes revolves around blueberries is a testament to their vast economic clout, and this sculpture's hidden truth.";
text_card[15] = "Indeed, indeed. The pastoral scenes that grace this indigo treat clearly depict blue raspberries. In particular, the sculptures of villagers casting lots demonstrates the ritual and legal importance of the blue raspberry to early civilization.";
text_card[16] = "A white gumball, nature's pearl. Some say this shimmering husk is all that remains of a gumball when its flavor has been fully drained. They're commonly derided as 'dead gumbs.' But what say you, my child? Examine the gumball. How much flavor still remains?";
text_card[17] = "Your supposition is almost certainly correct, youngster. It's doubtful there's even a single flavor to be found in this, the palest gumball.";
text_card[18] = "I trust your keen senses. If you suspect the presence of a flavor locked within this alabastrine gumball, I'll take your word for it.";
text_card[19] = "Ah, look what we have here! A deep green gumball. The color of vegetation and nature... this gumball must be a fruit! But I shall let you tell me what the flavor is. So youngster, which fruit flavor lies inside this ball?";
text_card[20] = "Yes, chomping into this sour apple gumball will deliver an extremely satisfying noise and an equally satisfying crunch, but its tartness will surely pucker your lips. Be wary, little one.";
text_card[21] = "Yes, yes of course! The green carapace of this gumball belies a juicy red interior. Perhaps there are even seeds in a watermelon gumball. You could be the first one to find out."
text_card[22] = "An orange gumball... tasty, but rather predictable. What else could an orange gumball be but an orange gumball? You have both a refined palate and a refined palette, youngster. Tell me, how do you suspect this gumball tastes? Like the fruit or like the color?"
text_card[23] = "Bergamot, blood, Valencia! mandarin, navel, satsuma!... unfortunately none of these fruits carry the smoky bouquet or fresh herbal notes of orange, the color. All in all, a poor choice."
text_card[24] = "You're quite right, this gumball burns with radiant orange color! The flavor in this gumball is unmistakeable. Its the crisp bite and inimitable vibrancy of the color orange.##I'm extremely pleased with this outcome."
text_card[25] = "A magnificent black gumball. These gumballs are known to plumb the depths of flavor, finally returning to the surface with impossible bounties. What bounty do you suspect lurks inside this gumball?";
text_card[26] = "Hmm, you've picked a very heady flavor, licorice. Few in the world have the intelligence and will to fully 'grok' its intricacies.##I hope you know what you're getting yourself into, youngster.";
text_card[27] = "I could tell you were a coffee lover, just like myself. I surmise this jack'd gumball is just the pick-me-up you'll need for the travails that await you.";
text_card[28] = "Oh Lord, do I ever want that grape gumball. How I long for that grape gumball! Looks like you know my weakness now, youngster.##Please... let's move on.";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Phases //
if phase[0] &gt; 0 then
    {
    // Tick down //
    phase[0] -= 1;
    
    // Event //
    if phase[0] = 0 then
        {
        // Introduction to hand scanner //
        if phase[1] = 1 then pax_intro = true;
        }
    } 

// Pax intro //
if pax_intro = true then
    {
    if keyboard_check_pressed(vk_enter) or mouse_check_button_pressed(mb_left) then 
        {
        pax_intro = false;
        alpha_event_goal = 1;
        }
    }
    
// Activate with alpha //
if alpha_event = 1 then active = true;
    
// Active //
if active = true then
    {
    for (i=0; i&lt;29; i+=1;) option_hover[i] = scr_cc_button_xy(12, 128, 14 + i * 16 - scroll, 26 + i * 16 - scroll);
    option_exit = scr_cc_button_xy(280, 384, 216, 226);
    
    button_up = scr_cc_button_xy(220, 270, 204, 214);
    button_down = scr_cc_button_xy(220, 270, 216, 226);
    
    // SCroll //
    if mouse_wheel_up() and scroll &gt; 0 then scroll -= 16;
    if mouse_wheel_down() and scroll &lt; 260 then scroll += 16;
    
    // Select //
    if mouse_check_button_pressed(mb_left) then
        {
        // Scroll //
        if button_up = true and scroll &gt; 0 then scroll -= 16;
        if button_down = true and scroll &lt; 260 then scroll += 16;
        
        // Exit //
        if option_exit = true then
            {
            if gumball = -1 then gumball = 0;
            o_cc_data.pax[30] = scr_cc_paxcode_convert(gumball);
            active = false;
            alpha_event_goal = 0;
            phase[2] = 30;
            }
        
        // Get card info //
        for (i=0; i&lt;29; i+=1;)
            {
            if option_hover[i] = true and info = false then 
                {
                card_selected = i;
                info = true;
                }
            }
        }
        
    // De-select //
    if mouse_check_button_pressed(mb_right) then
        {
        for (i=0; i&lt;29; i+=1;)
            {
            if option_hover[i] = true and info = false then 
                {
                gumball = i;
                o_cc_data.pax[30] = scr_cc_paxcode_convert(gumball);
                }
            }
        info = false;
        }
    }
    
// End of this event //
if phase[2] &gt; 0 then
    {
    // Tick down //
    phase[2] -= 1;
    
    // Transition //
    if phase[2] = 10 then instance_create(x, y, o_cc_transition);
    
    // End //
    if phase[2] = 0 then
        {
        //instance_create(x, y, o_cc_placenta);
        // PAX TEMP //
        instance_create(x, y, o_cc_pax_end);
        instance_destroy();
        }
    }

// Skip text with button //
scr_cc_textbox_skip();

// Type it //
scr_cc_textbox_type();
    
// Alpha goals //
if alpha_textbox_timer &gt; 0 then alpha_textbox_timer -= 1;
else
    {
    if alpha_textbox &lt; alpha_textbox_goal then alpha_textbox += 0.1;
    if alpha_textbox &gt; alpha_textbox_goal then alpha_textbox -= 0.1;
    }

if alpha_event &lt; alpha_event_goal then alpha_event += 0.05;
if alpha_event &gt; alpha_event_goal then alpha_event -= 0.05;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dra pax intro //
if pax_intro = true then
    {
    draw_set_font(global.fn_1);
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_text(192, 100, "Mystical greetings! The next event will#be done live by your pax hosts. Hand#over this eldtrich cyber tome to them so#you may begin.");
    }
    
// Active //
if active = true then
    {
    // Selection //
    if info = false then
        {
        draw_set_font(global.fn_2);
        draw_set_halign(fa_left);
        draw_set_alpha(alpha_event);
        
        // Scroll up down //
        if button_up = true then draw_set_color(c_teal);
        else draw_set_color(c_white);
        draw_text(220, 204, "UP");
        
        if button_down = true then draw_set_color(c_teal);
        else draw_set_color(c_white);
        draw_text(220, 220, "DOWN");
        
        // Row 01 //
        for (i=0; i&lt;29; i+=1;)
            {
            // Numbers //
            if gumball = i then draw_set_color(c_red);
            else draw_set_color(c_green);
            draw_text(16, 16 + i * 16 - scroll, string(i) + " - ");
            
            // Hovers //
            if option_hover[i] = true then draw_set_color(c_orange);
            else draw_set_color(c_white);
            
            // Draw titles //
            draw_text(48, 16 + i * 16 - scroll, string(card_name[i]));
            }
            
        // Draw exit button //
        if option_exit = true then draw_set_color(c_orange);
        else draw_set_color(c_white);
        draw_text(285, 220, "Go to placenta");
        }
    else
        {
        draw_set_color(c_white);
        draw_set_font(global.fn_2);
        draw_set_halign(fa_left);
        draw_set_alpha(alpha_event);
        draw_text_ext(16, 16, text_card[card_selected], -1, 352);
        draw_set_color(c_yellow);
        draw_text(16, 220, "Right click to return to the list");
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

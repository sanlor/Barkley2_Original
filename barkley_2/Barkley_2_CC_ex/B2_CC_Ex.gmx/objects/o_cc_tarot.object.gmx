<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cc_tarot_cards</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dont run the event after this for this character //
o_cc_data.event_finished_tarot = true;

// Phase setup //
phase[0] = 18;
phase[1] = 1;
phase[2] = 0;
phase[3] = 0;

// Phase skipping //
phase_skip_time = 0;
phase_skip_to = 0;
phase_skip = 0;

// Textbox setup //
textbox_written = "";
textbox_goal = "";
textbox_pause = 0;
textbox_position = 0;
textbox_skip = false;  

// Alpha setup //
alpha_textbox = 0;
alpha_textbox_goal = 0;
alpha_textbox_timer = 0;
alpha_event = 0;
alpha_event_goal = 1;
alpha_cards = -1;
alpha_cards_goal = 1;
alpha_candles = 0;
alpha_candles_goal = 1;

// Card spin //
for (i=0; i&lt;16; i+=1;)
    {
    card_x[i] = 192;
    card_y[i] = 120;
    card_direction[i] = 360/16 * i;
    }
     
card_orbit_length = 0;
card_orbit_length_goal = 80;    
card_orbit_visible = true;
card_scale = 0;
card_scale_goal = 0.5;
card_flip = 1;
card_flip_goal = 1;
cards_drawn = 0;
card_fortune = 0;

pick_a_card = false;
cards_checked = false;
last_drawn_card = 0;

instance_create(x, y, o_cc_effect_tarot_candles);

card_sequence = 0;
card_drawn_visible = false;
for (i=0; i&lt;4; i+=1;)
    {
    card_drawn_x[i] = 192;
    card_drawn_y[i] = 100;
    button_card[i] = false;
    card_spin[i] = 0;
    card_flip[i] = 1;
    card_flip_goal[i] = 1;
    card_turned[i] = false;
    card_flip_test[i] = 0;
    }
image_speed = 0;

question = false;
option_yes = "New card";
option_no = "Keep it";
timer_transition = 0;
timer_card_fortune = 0;
timer_card_fortune_remove = 0;
timer_card_fortune_new = 0;
timer_card_pick_sequence = 0;
timer_card_scale = 0;
timer_card_move = 0;
timer_sync_sound = 20;

// Pick the cards //
card_list = ds_list_create();
card_list_2 = ds_list_create();
for (i=0; i&lt;22; i+=1;) ds_list_add(card_list, i);
for (i=0; i&lt;3; i+=1;) ds_list_add(card_list_2, i);
ds_list_shuffle(card_list);
ds_list_shuffle(card_list_2);

// Make the cards //
card_index[0] = 2 + ds_list_find_value(card_list, 0);
card_index[1] = 2 + ds_list_find_value(card_list, 1);
card_index[2] = 2 + ds_list_find_value(card_list, 2);
card_index[3] = 2 + ds_list_find_value(card_list, 3);

// Change fortune card if it isn't the firts draw //
if card_index[0] != 11 then
    {
    if card_index[1] = 11 then card_index[1] = 25;
    else if card_index[2] = 11 then card_index[2] = 25;
    else if card_index[3] = 11 then card_index[3] = 25; 
    }

// Maybe there was a special card... // Reroll cards for a sepcial card. If it happens, it happens //
card_special = irandom(100);
if card_special &lt;= 4 then card_index[0] = 26 + ds_list_find_value(card_list_2, 1);
else if card_special &lt;= 8 then card_index[1] = 26 + ds_list_find_value(card_list_2, 2);
else if card_special &lt;= 12 then card_index[2] = 26 + ds_list_find_value(card_list_2, 3);

text[0] = "Gaze upon these cards I hold in my hand, my child.#More than mere playing cards, the tarot are#indescribably powerful divinatory tools, a product#of ancient Hermetic wizards who sought the true, -";
text[1] = "- forbidden knowledge of humanity and the greater#universe through the invokation of their god Thoth.";
text[2] = "The eternal figures that emblazon these card faces#are but notes singing the ancient refrain that has#endlessly reverberated in the minds of mankind#since our descent from the stars.";
text[3] = "They provide a conduit between the earthly domain#we inhabit and the oceanic depths of our collective#unconscious, and the drawing of these cards#forges an inviolable covenant between the -";
text[4] = "- endless past, your boundless destiny, and the#divine energies which shape our untold future.";
text[5] = "With this warning, I ask that you choose one card#at a time from the four that I will place in front of#you."; 
text[6] = "The first card drawn is very important. Take its#image into your mind, and hold it close to your#heart.";
text[7] = "This is the Significator, and will serve as your#representation, or avatar, within this mystic#tableau.";

text[8] = "This is the card after significator.#Time to draw it.";

text[9] = "This is the second card after#significator. Time to draw it.";

text[10] = "This is the third card after#significator. The final card. Time#to draw it.";

text_card[0, 0] = 5;
text_card[0, 1] = "A great current of wind sends you hurtling through#the air. Your helpless body swings this way and#that, without reason. You are a leaf on a blustering#wind."; 
text_card[0, 2] = "You cease motion on a branch on a tree on a hilltop,#for a moment, then you're off."; 
text_card[0, 3] = "... " + string(o_cc_data.character_name) + "... " + string(o_cc_data.character_name) + "!"; 
text_card[0, 4] = "Did you fall asleep on me? It is important you#concentrate on the reading! The fool in the#Present."; 
text_card[0, 5] = "The fool lives in and savors an ever-changing#present, with no thought of the past, the forces of#Air propelling him into the future."; 

text_card[1, 0] = 2;
text_card[1, 1] = "Our story begins at twilight, when the Moon rises#in the sky to begin reflecting, and the Popess'#visions are strongest. She beckons you towards#her, to inhabit the spot between two pillars."
text_card[1, 2] = "You are safe here, for the present. When you find#yourself in sanctuary, direct your learning#inwards, like the Popess. Solitude and self-#awareness are the path to her conduit with God.";

text_card[2, 0] = 2;
text_card[2, 1] = "Ah, the lovely Empress smiles! The most fecund of#cards. Mother Earth offers forth her bounty. Figs,#dates, and satsumas abound.";
text_card[2, 2] = "The numeral III indicates the stability and hardiness#of nature, as well as its dynamism. The Vines are#heavy-laden with grapes, and the Empress squashes#them to wine with her mighty gams."; 

text_card[3, 0] = 3;
text_card[3, 1] = "On this day, the Emperor rules. Your journey will#take you through the jurisdictions of powerful#authorities and dynasties."; 
text_card[3, 2] = "The scepter in the elder dwarf's right hand#indicates the Emperor's strict orthodoxy, and his#left-hand globus is his reserved, spontaneous#might. Befriend these powers or beware them."; 
text_card[3, 3] = "Do neither, and bemoan your pitiful end.";

text_card[4, 0] = 3;
text_card[4, 1] = "The hierophant has devoted his life to Clispaeth. He#subjects his body and soul to extreme trials, and#renews himself with his unwavering piety."; 
text_card[4, 2] = "His disquieting presence is an indication of how far#he has passed outside of this world and into a#divine one."; 
text_card[4, 3] = "Imitating his spiritual ardor and legendary humility#will be fruitful if you face like ordeals.";

text_card[5, 0] = 2;
text_card[5, 1] = "Lovers. Two beings in constant interaction, whose#whole reality is dependent on that of the other.#The arena you step into is shifting and dynamic.#There is another side to everything." 
text_card[5, 2] = "Causality will be hard to pin down, so claim the#advantage by anticipating this. Banana trees#indicate pride and its other half, shame."

text_card[6, 0] = 1;
text_card[6, 1] = "The nature of the world is that of the Chariot.#Wheels within wheels, constantly turning. Make#each of your moments count. That's all this card#says."; 

text_card[7, 0] = 1;
text_card[7, 1] = "Equilibrium… set the scales off balance?"; 

text_card[8, 0] = 3;
text_card[8, 1] = "The hermit! We are in an era of solitude, but under#His watchful eye in the Valley of the Hermit. Want#something more exciting?" 
text_card[8, 2] = "The Hermit is the patron card of all loners, exiles,#bad boys, rebels and outcasts of yesterday and#today.";
text_card[8, 3] = "All bōsōzoku, raggare, and greasers receive a#passive initiative bonus, extending to the end of#their next recovery phase."; 

text_card[9, 0] = 1;
text_card[9, 1] = "This card doesn't tell us much with nothing else on#the table. May I draw another?"; 

text_card[10, 0] = 2;
text_card[10, 1] = "Barbarians, brigands, and brasters rejoice! Might#flexes his muscle before us. Lifting, carrying, and#toting. Pushing, pulling, and shoving. Tossing,#throwing, and hurling." 
text_card[10, 2] = "These actions and more fall under dominion of#Might. What will you tote?"

text_card[11, 0] = 2;
text_card[11, 1] = "A falling motion, inversion, hanging, waiting,#'hanging out'. The environment is out of balance,#in fact, the opposite of way things could be. I#wouldn't worry about it, " +string(o_cc_data.character_name) + "."; 
text_card[11, 2] = "It could be that the world is waiting for you to#right it, but try seeing if you can get along well#within it, even if it's not something you're used#to. The letter M and water elementals."; 

text_card[12, 0] = 3;
text_card[12, 1] = "Low-intoned speech whispered between covens#suggests that every time you turn over a Death#card, someone, somewhere, perishes at the exact#moment.";
text_card[12, 2] = "Does the drawing of the card force the actual#death to occur, or vice versa? Is it just a#statistically-ensured probability, given the#enormous size of the universe?"; 
text_card[12, 3] = "That's all I can think about when this card arrives#here."; 

text_card[13, 0] = 3;
text_card[13, 1] = "Temperance, as a member of the Tarot, strikes a#balance. Immediately a let down when you see it#dealt, but it makes up for this with a few perks.";
text_card[13, 2] = "Along with boredom is volatility... perfect blandness#cannot be achieved without its constituent#elements constantly reacting in perfect synthesis.";
text_card[13, 3] = "The dwarf on the card slowly churns butter. A#deliberate, measured churn returns the highest#creamy yield, Remember this, my child."; 

text_card[14, 0] = 2;
text_card[14, 1] = "Please, speak in hushed tones about the era of the#Devil! The dark lord's sigil has aligned itself over#the cosmic torus. Saturn's ring ignites in white#flame."; 
text_card[14, 2] = "Ambition, wickedness, and sulphurous vapours are#the hallmark of this dismal time."; 

text_card[15, 0] = 4;
text_card[15, 1] = "An ominous sign. The Crack'd Dome. Something is#fractured and edges closer to complete#obliteration."; 
text_card[15, 2] = "I can't tell what it is - an open seam, metaphysical#glitch, or foreign entity - but it is terribly wrong,#and only getting worse."; 
text_card[15, 3] = "You must find this problem and stop it, purge it#from the stream of existence, " +string(o_cc_data.character_name) +"."; 
text_card[15, 4] = "You have no more time to waste here. I'm putting#the cards away now."; 

text_card[16, 0] = 4;
text_card[16, 1] = "Polaris, the Lodestar guided the ancient Pilgrims#across the seas to their their home in the New#World, at Yerusharim." 
text_card[16, 2] = "Their crude sextants were fashioned out of animal#furs, chewed sinew, and sod."; 
text_card[16, 3] = "Hundreds of technological revolutions later,#modern Cyberpilgrims can be gravitationally guided#by any of trillions of stars."; 
text_card[16, 4] = "Still, the star’s role remains the same - to watch#over and silently judge us, cruel voyeurs of#history. This uneasy give-and-take between man#and star has persisted for eons. Is change coming?"; 

text_card[17, 0] = 4;
text_card[17, 1] = "The moon card is the most potent symbol of wisdom#in the tarot, and also a symbol of madness.";
text_card[17, 2] = "Much like how moonlight is originally the sun's,#and not its own, so is the wisdom we find in the#moon just a mirror of our own intuition."; 
text_card[17, 3] = "In the river, we can see the reflection repeated,#and of course, distorted. Mirroring of mirrors#continually confuses and separates the vision#of the original source.";
text_card[17, 4] = "Similarly, we must keep in mind that subjectivity#can ruin the truth in reflection. If you're#looking for answers, be a still surface, and let#the moon look into you, not the other way around.";

text_card[18, 0] = 3;
text_card[18, 1] = "Yes! What a great omen the sun card is! The look#on the sun's satisfied visage suggests he can do#no wrong. What a beneficent face! The sun makes#the flowers and plants grow.";
text_card[18, 2] = "Thanks to the sun, it's warm enough to go to the#beach. By harnessing renewable solar energy,#anything made possible by fossil fuels could one#day be run entirely on the sun's clean energy."; 
text_card[18, 3] = "There's nothing in this world that the sun doesn't#have a hand in. This is a really great draw,#youngster. I mean it.";

text_card[19, 0] = 3;
text_card[19, 1] = "Karma is the ethereal force of judgment and#harmony that pervades existence. It represents#justice on an eternal scale and with a focus that#is individual and universal at once.";
text_card[19, 2] = "Maybe drawing this card doesn't mean much to you,#but I believe what it is trying to tell you is that#everything that occurs is known to occur.";
text_card[19, 3] = "The world is not meaningless! Everything that#comes to pass today will come to pass again. What#you do on your journey will be remembered, child."; 

text_card[20, 0] = 3;
text_card[20, 1] = "The universe card is the final card in the tarot#deck. It represents finality and totality. The end,#and everything at the end.";
text_card[20, 2] = "Your journey has not yet begun, and yet I can tell#you are destined for many great adventures. Who#knows where they will take you? Wherever you go,#I would hesitate to think of an 'end,' youngster.";
text_card[20, 3] = "You have so far to go and infinite potential.#Wherever your journey concludes, I don't think it#will be the 'end' for you."; 

text_card[21, 0] = 1;
text_card[21, 1] = "Babe in the woods"; 

text_card[22, 0] = 1;
text_card[22, 1] = "Official rules"; 

text_card[23, 0] = 1;
text_card[23, 1] = "Treasure card 2"; 

text_card[24, 0] = 4;
text_card[24, 1] = "Ah, the card of the juggler. It seems that nearly#every culture has its own juggling legends, and#this archetypical figure is usually depicted as a#crafty rogue who dazzles god and man alike with - ";
text_card[24, 2] = " - a fusion of dynamic sporting moves and#entertainment sensibility. His accompanying form is#the dark juggler, a malevolent acrobat who tosses#its bowling-pins and kerchiefs with ill-intent.";
text_card[24, 3] = "Notice the juggler's workshop spans a river. The#river's mists imply Maya, the fog of illusion that#hangs over the sporting world.";
text_card[24, 4] = "Both jugglers and dark jugglers alike profess that#they are looking for the truth. It will be up to you#to decide who you believe.";; 

text_card[25, 0] = 5;
text_card[25, 1] = "Shown here is the mountebank, a fiend in the guise#of a knave. The mountebank is talented at knowing,#and tirelessly schemes to gain advantages through#control of the forces of knowledge and ignorance."; 
text_card[25, 2] = "Notice that his worktable spans a river, suggesting#Lethe. It forms a bridge between the world of#memory and amnesia. With his deck, the mountebank#can divine truths with the tarot, or deceive -";
text_card[25, 3] = " - others in his treasured game, Monte. See the#candle with which he can selectively illumine truths,#and the three magic mirrors that grant him#perspective. He is also armed with a cup of -";
text_card[25, 4] = " - intoxicating tinctures. The mountebank is a#cheater, of course. His red scarf of guilt clings to#his neck like an albatross.";
text_card[25, 5] = "It would be wise to advance prudently in your#pursuit of knowledge, youngster.";

text_card[26, 0] = 4;
text_card[26, 1] = "Shown here is the magician, a figure of arcane#power. The magician, through study and sacrifice,#has conquered the divide between the world of#thoughts and that of physical existence."; 
text_card[26, 2] = "His alchemical rites use the power of word and#ideal to twist and shape the universe. Notice that#his worktable spans a river. The magician's sorcery#creates a bridge between the phenomenal and -";
text_card[26, 3] = " - noumenal worlds. With his magic wand, the#magician levitates three azure zaubers. All are#glowing with the divine spark.";
text_card[26, 4] = "The clear absence of jugglers in this picture#precludes juggling as an explanation. An#admittedly shallow read suggests zaubermancy in#your future... could it be?";

// Zodiac changes some lines //
switch (o_cc_data.character_zodiac_index)
    {
    // Aries //
    case 0: 
         text_card[3, 0] = 4; 
         text_card[3, 4] = "Like you, the Emperor card looks skyward to the#Aries constellation. Take note of this. Perhaps the#power they wield is there for your usurpation?";
    break;
    
    // Taurus //
    case 1: 
        text_card[4, 3] = "Imitating his spiritual ardor and legendary humility#will be fruitful if you face like ordeals. Taurus#grounds, lends bull energy.";
    break;
    
    // Gemini //
    case 2: 
        text_card[5, 2] = "Causality will be hard to pin down, so claim the#advantage by anticipating this. Gemini, your#traditional duality is now quadrality. Banana#trees indicate pride and its other half, shame."
    break;
    
    // Cancer //
    case 3: 
        text_card[6, 0] = 3;
        text_card[6, 1] = "The nature of the world is that of the Chariot.#Wheels within wheels, constantly turning."; 
        text_card[6, 2] = "Earths and galaxies spin through space and time,#and we witness the cycles of nature, life and death,#death and rebirth… as represented by Chariot’s twin steeds,#Dimensionality and Metempsychosis."; 
        text_card[6, 3] = "Make each of your moments count. That's all this#card says.";
    break;
    
    // Leo //
    case 4: 
        text_card[10, 0] = 5;
        text_card[10, 1] = "Barbarians, brigands, and brasters rejoice! Might#flexes his muscle before us. Lifting, carrying, and#toting. Pushing, pulling, and shoving. Tossing,#throwing, and hurling." 
        text_card[10, 2] = "These actions and more fall under dominion of#Might. And it seems Might has left indelible imprint#on your past."; 
        text_card[10, 3] = "The dim, throbbing light in your eye tells of a#mighty event not long ago, an eruption of might#whose effects wracked the cosmos and stretch#to the present."; 
        text_card[10, 4] = "Such pure might... pursuit of this might is the game,#"+string(o_cc_data.character_name)+", and the pieces are set.";
        text_card[10, 5] = "Which will you tote?";
    break;
    
    // Virgo //
    case 5: 
        text_card[8, 0] = 4; 
        text_card[8, 4] = "Virgins, monks, and hikkikomori earn the same and#get a unique trophy.";
        //text_card[2, 0] = 3;
        //text_card[2, 3] = "See you at the vineyard."; 
    break;
    
    // Libra //
    case 6: 
        
    break;
    
    // Scorpio //
    case 7: 
        text_card[12, 3] = "That's all I can think about when this card arrives#here. I don’t think the Death card would hurt you,#though."; 
    break;
    
    // Ouphicius //
    case 8: 
        
    break;
    
     // Sagittarius //
    case 9: 
        text_card[13, 0] = 4;
        text_card[13, 4] = "Hold... I see butter reflected in your wan#complexion. Interesting..."
    break;
    
     // Capricorn //
    case 10: 
        text_card[14, 2] = "Ambition, wickedness, and sulphurous vapours are#the hallmark of this dismal time. Those aligned to#Capricorn - bearers of great sins - feel the loads#of guilt they carry lightening."; 
    break;
     
     // Aquarius //
    case 11: 
        text_card[16, 0] = 5;
        text_card[16, 5] = "Is… is it you?";
    break;
    
     // Pisces //
    case 12: 
        
    break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Phases //
if phase[0] &gt; 0 then
    {
    // Tick down //
    phase[0] -= dt();
    
    // Event //
    if phase[0] &lt;= 0 then
        {
        // Introduction to Inkblots //
        if phase[1] &gt;= 1 and phase[1] &lt;= 8 then scr_cc_textbox(text[phase[1] - 1]);

        // Card draws //
        if phase[1] = 9 then
            {
            // Draw #1 Significator //
            if cards_drawn = 0 then
                {
                if card_orbit_length &gt; 0 then
                    {
                    timer_card_scale = 30;
                    timer_card_pick_sequence = 40;
                    card_orbit_length_goal = 0;
                    //audio_play_sound_at_xy(sn_cc_tarot_gather, false, 10, 0, 0);
                    }
                }
            else pick_a_card = true;
            }
            
        // Significator reading //
        if phase[1] &gt;= 10 and phase[1] &lt;= 15 then
            {
            if text_card[card_index[last_drawn_card] - 2, 0] &gt;= phase[1] - 9 then scr_cc_textbox(text_card[card_index[last_drawn_card] - 2, phase[1] - 9]);
            else scr_cc_phase_skip(5, 34);
            }
            
        // First after seq reading //
        else if phase[1] &gt;= 16 and phase[1] &lt;= 21 then
            {
            if text_card[card_index[last_drawn_card] - 2, 0] &gt;= phase[1] - 15 then scr_cc_textbox(text_card[card_index[last_drawn_card] - 2, phase[1] - 15]);
            else scr_cc_phase_skip(5, 35);
            }
    
        // Second after seq reading //
        else if phase[1] &gt;= 22 and phase[1] &lt;= 27 then
            {
            if text_card[card_index[last_drawn_card] - 2, 0] &gt;= phase[1] - 21 then scr_cc_textbox(text_card[card_index[last_drawn_card] - 2, phase[1] - 21]);
            else scr_cc_phase_skip(5, 36);
            }
    
        // Third after seq reading, and then, ending //
        else if phase[1] &gt;= 28 and phase[1] &lt;= 33 then
            {
            if text_card[card_index[last_drawn_card] - 2, 0] &gt;= phase[1] - 27 then scr_cc_textbox(text_card[card_index[last_drawn_card] - 2, phase[1] - 27]);
            else 
                {
                timer_transition = 15;
                phase[2] = 25;
                }
            }
            
        // Text before picking second card //
        else if phase[1] = 34 then 
            {
            scr_cc_textbox(text[8]);
            phase[1] = 36;
            }
            
        // Text before picking third card //
        else if phase[1] = 35 then 
            {
            scr_cc_textbox(text[9]);
            phase[1] = 36;
            }

        // Text before picking fourth card //
        else if phase[1] = 36 then 
            {
            scr_cc_textbox(text[10]);
            phase[1] = 36;
            }
 
        // Move back //
        else if phase[1] = 37 then scr_cc_phase_skip(5, 9);
        
        // The Crack'd dome //
        if phase[1] &gt;= 38 and phase[1] &lt;= 43 then
            {
            if text_card[15, 0] &gt;= phase[1] - 37 then scr_cc_textbox(text_card[15, phase[1] - 37]);
            else 
                {
                timer_transition = 15;
                phase[2] = 25;
                }
            }
            
        // Fortune card on first draw //
        if phase[1] = 44 then 
            {
            scr_cc_textbox(text_card[9, 1]);
            textbox_skip = false;
            question = true;
            }
        }
    } 

// Prompt for which tech to use //
if phase[1] = 44 and string_length(textbox_written) = string_length(textbox_goal) and textbox_goal = text_card[9, 1] then question = true;
else question = false;
    
// Question //
if question = true then
    {
    // Hovers //
    option_hover[0] = scr_cc_button_xy(26, 358, 200, 210);
    option_hover[1] = scr_cc_button_xy(26, 358, 211, 220);
    
    // Click //
    if mouse_check_button_pressed(mb_left) then // BONG if scr_input_check_pressed(KEYID_ACTION, PLAYER1) then
        {
        // Draw a new card //
        if option_hover[0] = true then
            {
            timer_card_fortune = 40;
            timer_card_fortune_remove = 20;
            alpha_textbox_goal = 0;
            question = false;
            }
        
        // No, just keep it //
        if option_hover[1] = true then 
            {
            scr_cc_phase_skip(10, 34);
            alpha_textbox_goal = 0;
            question = false;
            }
        }
    }
    
// Fortune card //
if timer_card_fortune &gt; 0 then
    {
    // Tick down //
    timer_card_fortune -= dt();
    
    // Done //
    if timer_card_fortune &lt;= 0 then pick_a_card = true;
    }
    
// Fortune card , go away //
if timer_card_fortune_remove &gt; 0 then
    {
    // Tick down //
    timer_card_fortune_remove -= dt();
    
    // Away it goes //
    card_drawn_y[0] -= 5;
    
    // Event //
    if timer_card_fortune_remove &lt;= 0 then
        {
        card_flip[last_drawn_card] = 1;
        cards_drawn = 0;
        card_turned[last_drawn_card] = false;
        card_drawn_y[last_drawn_card] = -80;
        card_index[last_drawn_card] = 2 + ds_list_find_value(card_list, 4);
        timer_card_fortune_new = 20;
        }
    }
        
// New card //
if timer_card_fortune_new &gt; 0 then
    {
    // Tick down //
    timer_card_fortune_new -= dt();
    
    // Slide new card down //
    if card_drawn_y[last_drawn_card] &lt; 80 then card_drawn_y[last_drawn_card] += 5;
    
    // Event //
    if timer_card_fortune_new = 0 then card_drawn_y[last_drawn_card] = 80; 
    }
    
// Lay down the cards //
if timer_card_pick_sequence &gt; 0 then
    {
    // Tick down //
    timer_card_pick_sequence -= 1;
    
    // What card was that //
    if timer_card_pick_sequence = 0 then pick_a_card = true;
    }
   
// Card effects //
if timer_card_scale &gt; 0 then
    {
    // Tick down //
    timer_card_scale -= dt();
    
    // Event //
    if timer_card_scale &lt;= 0 then
        {
        // Scale it up //
        card_scale_goal = 1;
        timer_card_move = 20;
        //audio_play_sound_at_xy(sn_cc_tarot_spread, false, 10, 0, 0);   
        }
    }
    
// Card move //
if timer_card_move &gt; 0 then
    {
    // Tick down //
    timer_card_move -= dt();
    
    // Move the cards //
    if card_drawn_x[0] &gt; 86 then card_drawn_x[0] -= 1;
    if card_drawn_x[1] &gt; 156 then card_drawn_x[1] -= 0.5;
    if card_drawn_x[2] &lt; 228 then card_drawn_x[2] += 0.5;
    if card_drawn_x[3] &lt; 298 then card_drawn_x[3] += 1;
    
    if card_drawn_y[0] &gt; 80 then card_drawn_y[0] -= 0.2;
    if card_drawn_y[1] &gt; 80 then card_drawn_y[1] -= 0.2;
    if card_drawn_y[2] &gt; 80 then card_drawn_y[2] -= 0.2;
    if card_drawn_y[3] &gt; 80 then card_drawn_y[3] -= 0.2;
    
    // Set the cards //
    if timer_card_move &lt;= 0 then
        {
        card_drawn_x[0] = 86;
        card_drawn_x[1] = 156;
        card_drawn_x[2] = 228;
        card_drawn_x[3] = 298;
        card_drawn_y[0] = 80;
        card_drawn_y[1] = 80;
        card_drawn_y[2] = 80;
        card_drawn_y[3] = 80;
        }
    }
    
// Spinning cards //
for (i=0; i&lt;4; i+=1;)
    {
    if card_spin[i] &gt; 0 then
        {
        // Tick down //
        card_spin[i] -= 1;
        
        // Flippin //
        if card_flip[i] &gt; card_flip_goal[i] then card_flip[i] -= 0.2;
        else if card_flip[i] &lt; card_flip_goal[i] then card_flip[i] += 0.2;
        
        // Change goal //
        if card_flip[i] = card_flip_goal[i] then
            {
            if card_flip_goal[i] = -1 then card_flip_goal[i] = +1;
            else card_flip_goal[i] = -1;
            }
        
        // Over //
        if card_spin[i] = 0 then 
            {
            card_flip_test[i] = card_flip[i];
            card_flip[i] = 1;
            }
        }
    }
     
// Pick a card //
if pick_a_card = true then
    {
    button_card[0] = scr_cc_button_xy(54, 118, 32, 128);
    button_card[1] = scr_cc_button_xy(124, 188, 32, 128);
    button_card[2] = scr_cc_button_xy(196, 260, 32, 128);
    button_card[3] = scr_cc_button_xy(266, 330, 32, 128);
    
    // Hover //
    if mouse_check_button_pressed(mb_left) then // BONG if scr_input_check_pressed(KEYID_ACTION, PLAYER1) then
        {
        for (i=0; i&lt;4; i+=1;)
            {
            if button_card[i] = true and card_turned[i] = false then
                {
                pick_a_card = false;
                card_turned[i] = true;
                card_spin[i] = 42;
                //audio_play_sound_at_xy(sn_cc_tarot_flip, false, 10, 0, 0);
                
                // Fortune card on first draw //
                if cards_drawn = 0 and card_index[i] = 11 then scr_cc_phase_skip(14, 44);
                else
                    {
                    // Crack'd dome //
                    if card_index[i] = 17 then scr_cc_phase_skip(14, 38);
                    else
                        {
                        // Otherwise, continue ///
                        if cards_drawn = 0 then scr_cc_phase_skip(14, 10);
                        else if cards_drawn = 1 then scr_cc_phase_skip(14, 16);
                        else if cards_drawn = 2 then scr_cc_phase_skip(14, 22);
                        else if cards_drawn = 3 then scr_cc_phase_skip(14, 28);
                        }
                    }
                
                // Move on //
                cards_drawn += 1;
                last_drawn_card = i;
                i = 4;
                
                // Light a candle //
                /*if cards_drawn = 1 then o_cc_effect_tarot_candles.candle_lit[0] = true;
                if cards_drawn = 2 then o_cc_effect_tarot_candles.candle_lit[1] = true;
                if cards_drawn = 3 then o_cc_effect_tarot_candles.candle_lit[2] = true;
                if cards_drawn = 4 then o_cc_effect_tarot_candles.candle_lit[3] = true;
                
                // Sound //
                audio_play_sound(sn_cc_candlelit, 0, false); */
                }
            }
        }
    }
else
    {
    for (i=0; i&lt;4; i+=1;) button_card[i] = false;
    }
    
// Sync sound delay //
if timer_sync_sound &gt; 0 then
    {
    // Tick down //
    timer_sync_sound -= dt();
    }
    
// Card orbit //
if card_orbit_visible = true then
    {
    //if !audio_is_playing(sn_cc_tarot_sync) and timer_sync_sound &lt;= 0 then audio_play_sound_at_xy(sn_cc_tarot_sync, true, 10, 0, 0);
    for (i=0; i&lt;16; i+=1;)
        {
        card_x[i] = 192 + lengthdir_x(card_orbit_length, card_direction[i]);
        card_y[i] = 100 + lengthdir_y(card_orbit_length, card_direction[i]);
        card_direction[i] += 0.5;
        }
      
    // Orbit radius //  
    if card_orbit_length &gt; card_orbit_length_goal then card_orbit_length -= 1;
    if card_orbit_length &lt; card_orbit_length_goal then card_orbit_length += 0.5;
    if card_orbit_length &lt;= 0 then 
        {
        card_drawn_visible = true;
        card_orbit_visible = false;
        audio_stop_sound(sn_cc_tarot_sync);
        }
    }
    
// Card scale //
if card_scale &lt; card_scale_goal then card_scale += 0.01;
if card_scale &gt; card_scale_goal then card_scale -= 0.01;

// Transition //
if timer_transition &gt; 0 then
    {
    // Tick down //
    timer_transition -= dt();
    
     // Event //
     if timer_transition &lt;= 0 then instance_create(0, 0, o_cc_transition);
     }

// End of this event //
if phase[2] &gt; 0 then
    {
    // Tick down //
    phase[2] -= dt();

    // Check the cards for character_data //
    if cards_checked = false then
        {
        for (i=0; i&lt;4; i+=1;) 
            {
            o_cc_data.character_tarot[i] = card_index[i];
            o_cc_data.pax[31 + i] = scr_cc_paxcode_convert(card_index[i]);
            }
        }
    cards_checked = true;
    
    // End //
    if phase[2] &lt;= 0 then
        {
        instance_create(x, y, o_cc_placenta);
        instance_destroy();
        }
    }

// Skip text with button //
scr_cc_textbox_skip();

// Type it //
scr_cc_textbox_type();

// Move to a next phase //
scr_cc_phase_skip_process();

// Alpha for Textboxes //
if alpha_textbox_timer &gt; 0 then alpha_textbox_timer -= dt();
else
    {
    if alpha_textbox &lt; alpha_textbox_goal then alpha_textbox += 0.1;
    if alpha_textbox &gt; alpha_textbox_goal then alpha_textbox -= 0.1;
    }

// Alpha for Events //
if alpha_event &lt; alpha_event_goal then alpha_event += 0.1;
if alpha_event &gt; alpha_event_goal then alpha_event -= 0.1;

if alpha_cards &lt; alpha_cards_goal then alpha_cards += 0.01;
if alpha_cards &gt; alpha_cards_goal then alpha_cards -= 0.025;

if alpha_candles &lt; alpha_candles_goal then alpha_candles += 0.05;
if alpha_candles &gt; alpha_candles_goal then alpha_candles -= 0.05;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Table backdrop //
draw_sprite_ext(s_cc_tarot_table, 0, 192, 120, 1, 1, 0, c_white, alpha_event);

// Draw the candles in the back //
draw_sprite_ext(s_cc_tarot_candle, 2, 60, 105, 0.75, 0.75, 0, c_white, alpha_candles);
draw_sprite_ext(s_cc_tarot_candle, 3, 324, 105, 0.75, 0.75, 0, c_white, alpha_candles);

// Draw cards spinning //
if card_orbit_visible = true then
    {
    for (i=0; i&lt;16; i+=1;)
        {
        draw_sprite_ext(s_cc_tarot_cards, 0, card_x[i], card_y[i], card_scale, card_scale, 0, c_white, alpha_cards);
        }
    }
    
// Drawn cards //
if card_drawn_visible = true then 
    {
    for (i=0; i&lt;4; i+=1;)
        {
        if pick_a_card = true then
            {
            if card_turned[i] = true then draw_sprite_ext(s_cc_tarot_cards, card_index[i], card_drawn_x[i], card_drawn_y[i], card_scale * card_flip[i], card_scale, 0, c_white, alpha_cards);
            else
                {
                if button_card[i] = true then draw_sprite_ext(s_cc_tarot_cards, 1, card_drawn_x[i], card_drawn_y[i], card_scale, card_scale, 0, c_white, alpha_cards);
                else draw_sprite_ext(s_cc_tarot_cards, 0, card_drawn_x[i], card_drawn_y[i], card_scale, card_scale, 0, c_white, alpha_cards);
                }
            }
        else
            {
            if card_turned[i] = true then
                {
                if card_flip[i] &gt;= 0 then draw_sprite_ext(s_cc_tarot_cards, card_index[i], card_drawn_x[i], card_drawn_y[i], card_scale * card_flip[i], card_scale, 0, c_white, alpha_cards);
                else draw_sprite_ext(s_cc_tarot_cards, 0, card_drawn_x[i], card_drawn_y[i], card_scale * card_flip[i], card_scale, 0, c_white, alpha_cards);
                }
            else
                {
                draw_sprite_ext(s_cc_tarot_cards, 0, card_drawn_x[i], card_drawn_y[i], card_scale * card_flip[i], card_scale, 0, c_white, alpha_cards);
                }
            }
        }
    }

// Draw candles in the front //
draw_sprite_ext(s_cc_tarot_candle, 0, 40, 120, 1, 1, 0, c_white, alpha_candles);
draw_sprite_ext(s_cc_tarot_candle, 1, 344, 120, 1, 1, 0, c_white, alpha_candles);
        
// Draw textboxes //
scr_cc_draw_textbox();

// Draw popup //
if question = true then
    {
    // YES //
    if option_hover[0] = true then 
        {
        draw_set_color(c_white);
        draw_set_alpha(alpha_textbox * 0.2);
        draw_rectangle(24, 200, 360, 210, false);
        draw_set_color(o_cc_data.color_question_hover);
        }
    else draw_set_color(o_cc_data.color_question_nohover);
    draw_set_alpha(alpha_textbox * 2);
    draw_text(29, 201, option_yes);
    
    // NO //
    if option_hover[1] = true then 
        {
        draw_set_color(c_white);
        draw_set_alpha(alpha_textbox * 0.2);
        draw_rectangle(24, 212, 360, 222, false);
        draw_set_color(o_cc_data.color_question_hover);
        }
    else draw_set_color(o_cc_data.color_question_nohover);
    draw_set_alpha(alpha_textbox * 2);
    draw_text(29, 213, option_no);
    }





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>

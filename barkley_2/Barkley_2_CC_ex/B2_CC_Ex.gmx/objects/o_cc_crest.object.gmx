<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dont run the event after this for this character //
o_cc_data.event_finished_crest = true;

// Phase setup //
phase[0] = 18;
phase[1] = 1;
phase[2] = 0;

// Phase skipping //
phase_skip_time = 0;
phase_skip_to = 0;
phase_skip = 0;

// Textbox setup //
textbox_written = "";
textbox_goal = "";
textbox_pause = 0;
textbox_position = 0;
textbox_skip = false;  

// Alpha setup //
alpha_textbox = 0;
alpha_textbox_goal = 0;
alpha_textbox_timer = 0;
alpha_event = 0;
alpha_event_goal = 0;

// Button setup //
button_accept_clickable = true;
button_accept_hover = false;
button_accept_x = 192;
button_accept_y = 220;
button_accept_click_effect = 0;
button_accept_text = "Accept";

// Other //
o_cc_wizard.alpha_goal = 1;
timer_transition = 0;
timer_active = 0;
active = false;

for (i=0; i&lt;6; i+=1;) button_paint[i] = false;
color_chosen = 0;
color = c_red;

instance_create(x, y, o_cc_crest_frames);

// Defaults //
text[0] = "Your family crest represents where you've come#from and who you are. Draw your family's#heraldry on this shield.";
text[1] = "Yes, yes... interesting. There is an understated#dignity to your family crest, hints of a noble and#glorious past. Yes, your heraldry truly depicts the#greatness of your line."
text[2] = "And perhaps... it portends an even greater future."
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Phases //
if phase[0] &gt; 0 then
    {
    // Tick down //
    phase[0] -= dt();
    
    // Event //
    if phase[0] &lt;= 0 then
        {
        // Introduction to hand scanner //
        if phase[1] = 1 then scr_cc_textbox(text[phase[1] - 1]);
        
        // Start painting //
        if phase[1] = 2 then timer_active = 5;
            
        // Closing notes //
        if phase[1] &gt;= 3 and phase[1] &lt;= 4 then scr_cc_textbox(text[phase[1] - 2]);
        
        // End //
        if phase[1] = 5 then 
            {
            timer_transition = 15;
            phase[2] = 25;
            }
        }
    } 
    
// Active timer //
if timer_active &gt; 0 then   
    {
    // Tick down //
    timer_active -= dt();
    
    // Event //
    if timer_active &lt;= 0 then 
        {
        alpha_event_goal = 1;
        active = true;
        }
    }
 
// Paint //
if active = true then
    {
    // Buttons paint //
    for (i=0; i&lt;6; i+=1;)
        {
        button_paint[i] = scr_cc_button_xy(124 + i * 24, 140 + i * 24, 182, 198);
        }
        
    // Pick color //
    // BONG //if scr_input_check_pressed(KEYID_ACTION, PLAYER1) then
    if mouse_check_button_pressed(mb_left) then    
        {     
        for (i=0; i&lt;6; i+=1;)
            {
            if button_paint[i] = true then 
                {
                // BONG // audio_play_sound_at_xy(sn_cc_generic_button1, false, 10, 0, 0);
                audio_play_sound(sn_cc_generic_button1, 10, 0);
                color_chosen = i;
                switch (color_chosen)
                    {
                    case 0: color = make_color_rgb(255, 0, 0); break;
                    case 1: color = make_color_rgb(255, 255, 0); break;
                    case 2: color = make_color_rgb(0, 0, 255); break;
                    case 3: color = make_color_rgb(0, 255, 0); break;
                    case 4: color = make_color_rgb(255, 0, 255); break;
                    case 5: color = make_color_rgb(150, 150, 150); break;
                    }
                }
            }
        }
        
    // Paint //
    // BONG //
    //if scr_input_check_held(KEYID_ACTION, PLAYER1) then
    if mouse_check_button(mb_left) then     
        {        
        if o_pointer.x &gt;= 88 and o_pointer.x &lt;= 296 and o_pointer.y &gt;= 22 and o_pointer.y &lt;= 166 then 
            {
            instance_create(o_pointer.x, o_pointer.y, o_cc_crest_paint);
            // BONG //if !audio_is_playing(sn_cc_crest_spray) then audio_play_sound_at_xy(sn_cc_crest_spray, false, 10, 0, 0);
            if !audio_is_playing(sn_cc_crest_spray) then audio_play_sound(sn_cc_crest_spray, 10, 0);
            }
        }
    else if audio_is_playing(sn_cc_crest_spray) then audio_stop_sound(sn_cc_crest_spray);
        
    // Remove paint //
    //if scr_input_check_held(KEYID_HOLSTER, PLAYER1) then
    if mouse_check_button(mb_right) then
        {
        if o_pointer.x &gt;= 88 and o_pointer.x &lt;= 296 and o_pointer.y &gt;= 22 and o_pointer.y &lt;= 166 then 
            {
            if instance_exists(o_cc_crest_paint) then
                {
                with o_cc_crest_paint if distance_to_point(o_pointer.x, o_pointer.y) &lt;= 4 then instance_destroy();
                }
            // if !audio_is_playing(sn_cc_crest_wipe) then audio_play_sound_at_xy(sn_cc_crest_wipe, false, 10, 0, 0);
            if !audio_is_playing(sn_cc_crest_wipe) then audio_play_sound(sn_cc_crest_wipe, 10, 0);
            }
        }
    else if audio_is_playing(sn_cc_crest_wipe) then audio_stop_sound(sn_cc_crest_wipe);

    // End //
    scr_cc_button_accept();
    }  
         
// Transition //
if timer_transition &gt; 0 then
    {
    // Tick down //
    timer_transition -= dt();
    
     // Event //
     if timer_transition &lt;= 0 then instance_create(0, 0, o_cc_transition);
     } 
    
// End of this event //
if phase[2] &gt; 0 then
    {
    // Tick down //
    phase[2] -= dt();
    
    // End //
    if phase[2] &lt;= 0 then
        {
        instance_create(x, y, o_cc_placenta);
        instance_destroy();
        }
    }
        
// Skip text with button //
scr_cc_textbox_skip();

// Type it //
scr_cc_textbox_type();

// Move to a next phase //
scr_cc_phase_skip_process();
    
// Alpha for Textboxes //
if alpha_textbox_timer &gt; 0 then alpha_textbox_timer -= dt();
else
    {
    if alpha_textbox &lt; alpha_textbox_goal then alpha_textbox += 0.1;
    if alpha_textbox &gt; alpha_textbox_goal then alpha_textbox -= 0.1;
    }

// Alpha for Events //
if alpha_event &lt; alpha_event_goal then alpha_event += 0.05;
if alpha_event &gt; alpha_event_goal then alpha_event -= 0.05;

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// End //
active = false;
scr_cc_phase_skip(15, 3);
alpha_event_goal = 0;

// Crest made character data //
o_cc_data.character_crest = true;

// Sound //
audio_play_sound(sn_cc_button_accept, 0, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dim backfround //
draw_set_alpha(alpha_event * 0.75);
draw_set_color(c_black);
draw_rectangle(view_xview - 2, view_yview - 2, view_xview + 386, view_yview + 242, false);

// Draw backdrop //
draw_sprite_ext(s_cc_crest_backdrop, 0, 192, 96, 1, 1, 0, c_white, alpha_event);

// Draw textboxes //
scr_cc_draw_textbox();

// Draw paint buttons //
for (i=0; i&lt;6; i+=1;)
    {
    if color_chosen = i then draw_sprite_ext(s_cc_crest_paint_button, i * 3 + 2, 132 + i * 24, 190, 1, 1, 0, c_white, alpha_event);
    else
        {
        if button_paint[i] = true then draw_sprite_ext(s_cc_crest_paint_button, i * 3 + 1, 132 + i * 24, 190, 1, 1, 0, c_white, alpha_event);
        else draw_sprite_ext(s_cc_crest_paint_button, i * 3, 132 + i * 24, 190, 1, 1, 0, c_white, alpha_event);
        }  
    }

// Draw button //
scr_cc_draw_button_accept();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

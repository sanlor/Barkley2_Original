<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
sprite_index_head = s_cc_wizard_talk;
image_index_emote = irandom(3);
image_index_intro = 0;
image_index_head = 0;

wizard_talk = false;
wizard_talk_interval = 8;

// Alphas //
alpha = 1;
alpha_goal = 1;
alpha_2 = 1;
alpha_2_goal = 1;
alpha_3 = 1;
alpha_3_goal = 1;

ready_to_proceed = 0;
emote = false;

// Timers //
timer_alpha_in = 10;
timer_prepare_hands = 25;
timer_show_hands = 0;
timer_sound = 25;
timer_ready_to_proceed = 35;

// Music //
//audio_set_bgm(mus_charcreate);
if audio_is_playing(mus_charcreate) then audio_stop_sound(mus_charcreate);
audio_play_sound(mus_charcreate, 10, true);

global.fn_2 = font_add_sprite(s_fn2, ord(" "), 1, 0);
global.fn_1 = font_add_sprite(s_fn1, ord(" "), 1, -1);
global.fn_small = font_add_sprite(s_fn2, ord('!'), 1, 1);

// Instances to create //
if !instance_exists(o_cc_data) then instance_create(0, 0, o_cc_data);
instance_create(0, 0, o_cc_effect_crystal);
instance_create(0, 0, o_cc_effect_backdrop);
instance_create(x, y, o_pointer);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Intro sequence //
if timer_alpha_in &gt; 0 then
    {
    // Tick down //
    timer_alpha_in -= dt();
    
    // Sound //
    if timer_alpha_in &lt;= 0 then alpha_2_goal = 0;
    }
    
// Prepare to show hands //
if timer_prepare_hands &gt; 0 then
    {
    // Tick down //
    timer_prepare_hands -= dt();
    
    // Sound //
    if timer_prepare_hands &lt;= 0 then timer_show_hands = 20;
    }
    
// SHow hands //
if timer_show_hands &gt; 0 then
    {
    // Tick down //
    timer_show_hands -= dt();
    
    // Image //
    if image_index_intro &lt; 6.2 then image_index_intro += 0.15;
    
    // Sound //
    if timer_show_hands &lt;= 0 then image_index_intro = 6.2;
    }
    
// Sound //
if timer_sound &gt; 0 then
    {
    // Tick down //
    timer_sound -= dt();
    
    // Sound //
    if timer_sound &lt;= 0 then audio_play_sound(sn_cc_wizard_arms, 0, false);
    }
    
// Ready to proceed timer //
if timer_ready_to_proceed &gt; 0 then
    {
    // Tick down //
    timer_ready_to_proceed -= dt();
    
    // Ready //
    if timer_ready_to_proceed &lt;= 0 then 
        {
        //instance_create(0, 0, o_cc_name);
        instance_create(0, 0, o_cc_stats);
        ready_to_proceed = 1;
        }
    }
          
// Alpha goals //
if alpha &lt; alpha_goal then alpha += 0.02;
if alpha &gt; alpha_goal then alpha -= 0.02;

// Alpha goals //
if alpha_2 &lt; alpha_2_goal then alpha_2 += 0.025;
if alpha_2 &gt; alpha_2_goal then alpha_2 -= 0.025;

// Alpha goals //
if alpha_3 &lt; alpha_3_goal then alpha_3 += 0.005;
if alpha_3 &gt; alpha_3_goal then alpha_3 -= 0.005;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw a screen for charcreation intro to cover the space background briefly //
draw_set_alpha(alpha);
draw_set_color(c_black);
draw_rectangle(-2, -2, 386, 242, false);

// Draw wizard //
if timer_ready_to_proceed &lt;= 0 then 
    {
    draw_sprite_ext(s_cc_wizard_base, 6, 192, 120, 1, 1, 0, c_white, alpha);
    if alpha = 1 then draw_sprite_ext(s_cc_wizard_talk, image_index_head, 195, 75, 1, 1, 0, c_white, 1);
    if emote = true then draw_sprite_ext(s_cc_wizard_emote, image_index_emote, 195, 75, 1, 1, 0, c_white, 1);
    }
else draw_sprite_ext(s_cc_wizard_base, image_index_intro, 192, 120, 1, 1, 0, c_white, alpha);

// Draw a screen for charcreation intro //
if alpha_2 &gt; 0 then
    {
    draw_set_alpha(alpha_2);
    draw_set_color(c_black);
    draw_rectangle(-2, -2, 386, 242, false);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

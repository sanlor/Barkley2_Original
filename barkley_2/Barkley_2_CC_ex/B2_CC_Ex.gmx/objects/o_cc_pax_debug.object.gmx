<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
option[0] = "Fullscreen";
option[1] = "Reset";
option[2] = "Quit";
option[3] = 0;

option_hover[0] = false;
option_hover[1] = false;
option_hover[2] = false;

debug_menu = false;
debug_menu_points = 0;
button_print = false;
button_skip = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Fulscreen with mouse //
if mouse_x &lt; 80 and mouse_y &lt; 10 then
    {
    debug_menu_points += 1;
    if debug_menu_points &gt;= 20 then debug_menu = true;
    }
if mouse_y &gt;= 78 then 
    {
    debug_menu_points = 0;
    debug_menu = false;
    }

// Hovers //
if debug_menu = true then
    {
    for (i=0; i&lt;4; i+=1;)
        {
        option_hover[i] = scr_cc_button_xy(0 + i * 96, 97 + i * 96, 0, 26);
        }
        
    // Print button //
    button_print = scr_cc_button_xy(0, 384, 27, 52);
       
    // Skip button //
    button_skip = scr_cc_button_xy(0, 384, 53, 78);
     
    // Buttons //
    if mouse_check_button_pressed(mb_left) then
        {
        if option_hover[0] = true then
            {
            if window_get_fullscreen() = false then window_set_fullscreen(true);
            else window_set_fullscreen(false);
            }
        if option_hover[1] = true then game_restart();
        if option_hover[2] = true then game_end();
        if option_hover[3] = true and instance_exists(o_cc_data) then o_cc_data.pax_number += 1;
           
        // Button skip //
        if button_skip = true then 
           {
           if instance_exists(o_cc_data) then with o_cc_data event_user(1);
           }
        
        // Print the code to a file //
        if button_print = true and instance_exists(o_cc_data) then
           {
           if !file_exists(working_directory + 'pax_code_' +string(o_cc_data.pax_number)+ '.txt') then
              {
              // Make file //
              file = file_text_open_write(working_directory + 'pax_code_' +string(o_cc_data.pax_number)+ '.txt');
              
              // LINES //
              file_text_write_string(file, "============================");
              
              // CODE //
              file_text_writeln(file);
              file_text_writeln(file);
              file_text_write_string(file, "   " + string(o_cc_data.character_name));
              file_text_writeln(file);
              file_text_writeln(file);
              file_text_write_string(file, "   " + string(o_cc_data.pax_code));
              file_text_writeln(file);
              file_text_write_string(file, "   " + string(o_cc_data.pax_code2));
              file_text_writeln(file);
              file_text_writeln(file);
              
              // LINES //
              file_text_write_string(file, "============================");
              
              // Close //
              file_text_close(file);
              o_cc_data.pax_number += 1;
              }
           else o_cc_data.pax_number += 1;
           }
        }
        
    if mouse_check_button_pressed(mb_right) then
        {
        if option_hover[3] = true and instance_exists(o_cc_data) then o_cc_data.pax_number -= 1;
        }
    }
    
if instance_exists(o_cc_data) then option[3] = o_cc_data.pax_number;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Debug meny //
if debug_menu = true then
    {
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(-2, -2, 386, 78, false);
    draw_set_font(global.fn_1);
    draw_set_halign(fa_left);
    draw_set_alpha(1);
    for (i=0; i&lt;4; i+=1;) 
        {
        if option_hover[i] = true then 
            {
            draw_set_color(c_yellow);
            draw_rectangle(-2 + i * 96, -2, 96 + i * 96, 26, false);
            draw_set_color(c_red);
            }
        else draw_set_color(c_white);
        draw_text(8 + i * 96, 4, option[i]);
        }
        
    if button_print = true then 
       {
       draw_set_color(c_teal);
       draw_rectangle(0, 27, 384, 52, false);
       }
    draw_set_color(c_white);
    if instance_exists(o_cc_data) then draw_text(8, 32, "Print PAX code into file " + string(o_cc_data.pax_number));
    else draw_text(8, 32, "Can't print yet");
    
    if button_skip = true then 
       {
       draw_set_color(c_teal);
       draw_rectangle(0, 53, 384, 78, false);
       }
    draw_set_color(c_white);
    draw_text(8, 56, "Skip to next event");
    
    // DRAW PAX CODE SHT //
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_font(global.fn_2);
    draw_set_halign(fa_left);
    draw_text(4, 88, "PXC1: " + string(o_cc_data.pax_code));
    draw_text(4, 104, "PXC2: " + string(o_cc_data.pax_code2));
    draw_text(4, 120, "CHKSM: " + string(o_cc_data.checksum));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

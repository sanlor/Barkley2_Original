<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mg_diving_eel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>500</depth>
  <persistent>0</persistent>
  <parentName>o_mg_diving_danger</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
sub = 0;
attack = 5;
strike = 0;
x_origin = x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Attack //
if attack &gt; 0 then  
    {
    // Tick down //
    attack -= dt();
    
    // Attack //
    if attack &lt;= 0 then
        {
        if distance_to_object(o_mg_diving_player) &lt;= 60 then 
            {
            attack = 167;
            strike = 13.5;
            }
        else attack = 4;
        }
    }
    
// Strike //
if strike &gt; 0 then
    {
    // Tick down //
    strike -= dt();
    
    // Move //
    if strike &gt;= 11 then 
        {
        sub += 0.2 * 10 * dt();
        x += 2.2 * 60 * dt_sec();
        }
    else if strike&gt;=10 then
    {
        sub += 0.2 * 10 * dt();
    }
    else
        {
        sub += 0.1 * 10 * dt();
        x -= 0.6 * 60 * dt_sec();
        x = max(x_origin, x);
        }
    
    // Go back //
    if strike &lt;= 0 then
        {
        x = x_origin;
        attack = 13;
        }
    }
else
    sub += 4 * dt_sec();
    
// Killed by torpedo //
if place_meeting(x, y, o_mg_diving_danger_torpedo) then with instance_nearest(x, y, o_mg_diving_danger_torpedo) instance_destroy();
if place_meeting(x, y, o_mg_diving_danger_explosion) then instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
draw_sprite(sprite_index, floor(sub), x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>

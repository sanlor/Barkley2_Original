<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLeafSpin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
wid = 4;
z = 0;
tx = sLeafSpin;
fr = irandom(4);
tex = sprite_get_texture(tx, fr);

flapSpd = 1+random(6);
mvDr = 160 + random(40);
mvSpd = 0.10+random(0.25);

lifetime = 0;
fallSpd = 0.5;

bounces = 4+irandom(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//was 16x64
dir = oCamera3D.dir;//point_direction(oCamera3D.x, oCamera3D.y, x, y); //oCamera3D.dir - 90;
x0 = x + lengthdir_x(wid, dir - 270);
y0 = y + lengthdir_y(wid, dir - 270);
x1 = x + lengthdir_x(wid, dir + 270);
y1 = y + lengthdir_y(wid, dir + 270);

fr += global.timSec * flapSpd;
if (fr &gt;= 6) fr -= 6;
tex = sprite_get_texture(tx, fr);
z-= fallSpd;

if(fallSpd&lt;0.5){fallSpd+=0.005;}

x += lengthdir_x(mvSpd,mvDr);
y += lengthdir_x(mvSpd,mvDr);

d3d_draw_wall(x0, y0, z+wid*2, x1, y1, z, tex, 1, 1);

if(z&lt;=-2 &amp;&amp; fallSpd&gt;0)
{
    if(bounces&gt;0)
    {
        bounces -=1;
        fallSpd = -fallSpd*choose(0.9,0.8,1,0.4,1.2);
        flapSpd = 1+random(6);
    }
}
if(z&lt;-12){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

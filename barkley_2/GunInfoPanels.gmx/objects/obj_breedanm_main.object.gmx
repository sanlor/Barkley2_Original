<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_breedanm_gunpangrid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gun = noone;
setup = false;

gunsprite = spr_samplegunsprites;
gunimg = 0;

firstScanAmount = 0;
delayscan = 20;
scanAmount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!setup)
{
    gunType = gun[? "pType"];
    switch(gunType)
    {
        case "Pistol": gunimg = 0; break;
        case "Flintlock": gunimg = 1; break;
        case "Machine Pistol": gunimg = 2; break;
        case "Revolver": gunimg = 3; break;
        case "Magnum": gunimg = 4; break;
        case "Flare Gun": gunimg = 5; break;
        
        case "Rifle": gunimg = 6; break;
        case "Musket": gunimg = 7; break;
        case "Hunting Rifle": gunimg = 8; break;
        case "Tranq Rifle": gunimg = 9; break;
        case "Sniper Rifle": gunimg = 10; break;
        case "Assault Rifle": gunimg = 11; break;
        
        case "Submachine Gun": gunimg = 12; break;
        case "Heavy Machine Gun": gunimg = 13; break;
        case "Gatling Gun": gunimg = 14; break;
        case "Minigun": gunimg = 15; break;
        case "Mitrailleuse": gunimg = 16; break;
        
        
        case "Shotgun": gunimg = 17; break;
        case "Double-Barreled Shotgun": gunimg = 18; break;
        case "Revolver Shotgun": gunimg = 19; break;
        case "Elephant Gun": gunimg = 20; break;
        
        case "Flamethrower": gunimg = 21; break;
        case "Crossbow": gunimg = 22; break;
        case "Rocket": gunimg = 23; break;
        case "Bio-Force Gun": gunimg = 24; break;
    }
    gunimg = Gunsmap("type to index", gunType);
    setup = true;
}

if(scanAmount&lt;15)
{
    if(delayscan&gt;0){delayscan-=0.2*dt();}
    else
    {
        if(firstScanAmount&lt;15)
        {
            firstScanAmount += 1;
        }
        else
        {
            scanAmount += 1;
        }
        delayscan += 1;
    }
}
//if(barsfrm&lt;bulletsFrmMax){barsfrm+=0.02*dt();}
//if(textfrm&lt;9){textfrm+=0.02*dt();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(make_color_rgb(20,0,35));
scr_drawRect(x+1,y+1,x+66,y+38,false);

if(scanAmount&lt;15)
{
    var col;
    if(firstScanAmount&lt;5){col = make_color_rgb(0,65,0);}
    else if(firstScanAmount&lt;10){col = make_color_rgb(56,100,35);}
    else if(firstScanAmount&lt;5){col = make_color_rgb(65,127,71);}
    else if(scanAmount&lt;5){col = make_color_rgb(0,158,30);}
    else if(scanAmount&lt;10){col = make_color_rgb(0,197,37);}
    else{col = make_color_rgb(0,240,60);}
    
    d3d_set_fog(true,col,0,1000);
    draw_sprite_part(gunsprite,gunimg,median(0,49,4*(14-firstScanAmount)-4),0,median(0,49,4*firstScanAmount-4),24,x+9+median(0,49,4*(14-firstScanAmount)-4),y+8);
    d3d_set_fog(false,col,0,1000);
}   

draw_sprite(spr_breedanm_gunpangrid,0,x,y);

if(firstScanAmount!=0 &amp;&amp; firstScanAmount &lt; 14)
{
    draw_sprite(spr_breedanm_gunpanscan,0,x+1+8+49-4*firstScanAmount,y+5);
}

draw_sprite_part(gunsprite,gunimg,0,0,median(0,49,4*scanAmount-4),24,x+9,y+8);

if(scanAmount != 0 &amp;&amp; scanAmount != 15)
{draw_sprite(spr_breedanm_gunpanscan,0,x+1+4*scanAmount,y+5);}

///draw_sprite(spr_breedanm_bulletbars,barsfrm,x+2,y+2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

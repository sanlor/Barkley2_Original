<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-290000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//len = 0;
active = 0;
released = 0;
hover = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active
    o_imenu.delay = 1;

if active {
    if mouse_wheel_up()
        len += .1;
    if mouse_wheel_down()
        len -= .1;
   if mouse_check_button(mb_left) and released {
        if o_curs.x != o_curs.xprevious or o_curs.y != o_curs.yprevious
            len = ((o_curs.x+view_xview)-(x+5))/36;
        o_curs.sprite_index = s_winhand;
    }
}

if hover {
    o_curs.sprite_index = s_winhand;
    if !active {
        if mouse_check_button_pressed(mb_left) {
            active = 1;
            released = 0; }
        }
    if mouse_check_button_released(mb_left) and released = 1 {
        active = 0;
        hover = 0;
        }
    if mouse_check_button_released(mb_left)
        released = 1;
    }
else
    if mouse_check_button_pressed(mb_left) {
        active = 0;
        hover = 0;
        scr_save_config();
        }
    
len = median(0,1,len);
if ind = 7
    global.music = (len*100) div 1;
if ind = 8
    global.sounds = (len*100) div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
  with o_imenu { // hover
    draw_sprite_ext(s_highlight,3,(xo+ar_op_button_x[other.ind]) div 1,(yo+ar_op_button_y[other.ind]) div 1,1,1,0,c_white,0.75);
    draw_set_font(global.fn_2);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    if other.ind = 7
        draw_text((xo+182) div 1,(yo+64) div 1,"Music");
    if other.ind = 8
        draw_text((xo+182) div 1,(yo+82) div 1,"Sounds");
    draw_set_color(c_oyellow);
  }
}
  
if instance_exists(o_dropdown)
    draw_set_color(make_color_rgb(77,79,72));
draw_rectangle((x+3) div 1,(y+1) div 1,(x+2+36*len) div 1,(y+6) div 1,0); // fill
if ceil(len)
    draw_sprite_ext(s_slider,0,(x+1+36*len) div 1,(y-1) div 1,1,1,0,draw_get_color(),1); // cap 1
draw_set_color(c_white);
if instance_exists(o_dropdown)
    draw_set_color(make_color_rgb(77,79,72));
draw_sprite_ext(s_slider_bar,1,x div 1,y div 1,1,1,0,draw_get_color(),1); // frame front
if active
    draw_sprite_ext(s_slider,1,(x+36*len) div 1,(y-1) div 1,1,1,0,c_ltyellow,1); // cap 2
    
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

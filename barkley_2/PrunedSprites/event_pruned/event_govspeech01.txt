// Event for the Governor's Speech.
/*if (argument0 == SCRIPT_START) then
    {
    // Setup the speech //
    scr_quest_set_state("govSpeechInitiate", 3);
    
    // Set the initial facing for player in this event //
    global.eventFacing = 6;
    
    // Find the main event and continue it after transition //
    var event = scr_event_find_main();
    
    // Execyte event script // Which is this script //
    with (event) scr_event_build_execute_event_script(event_tnn_govSpeech01);
    }
else if (argument0 == SCRIPT_INTERACT) then
    {
    // Create Hoopz (as governor) on the balcony //
    scr_event_set_object(o_hoopz, 368, 192);

    // Events and snippets //
    var event = scr_event_create_main();
    var speech_choice = scr_event_create_child(event);
    var ending = scr_event_create_child(event);

    //--------------------------------------------
    //-------------- SPEECH SNIPPET --------------
    //--------------------------------------------  
    with (speech_choice)
        {
        // Check if you have remaining choices to make //
        if scr_quest_get_state("govChoicesRemaining") > 0 then
            {        
            // Begin the choices //
            var main_choice = scr_event_build_choice("I think I can announce " + (string(scr_quest_get_state("govChoicesRemaining"))) + " more policies...", s_port_governor);
        
            // CHOICE: Allow Marina to leave TNN //
            // Marina is allowed to leave - need to have spoken to Rancher Marina about cows.
            if (scr_quest_get_state("govCow") == 1) then
                {
                with scr_event_build_add_choice(main_choice, "Ranchers can take cows to greener pastures")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "It has come to my attention that ranchers are unable to take their cattle to a more suitable location. As you know, food is an important part of a balanced diet, so I am designating an area outside of Tir na Nog as cattle pasture for our ranchers. Rancher Marina and others will be allowed to come and go as they please in order to provide the good dwarfs of Tir na Nog with the food we need.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govCow", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }

            // CHOICE: Medicine for the elderly (Trap choice, does nothing)
            // Appears always, no requirements //
            if (scr_quest_get_state("govMedicine") == 0) then
                {
                with scr_event_build_add_choice(main_choice, "Medicine for the elderly")
                    {  
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "For too long, the elderly of Tir na Nog have had to endure their gout and goiters, seizures and hemorrhoids in silence. I say no longer! No longer should the elderly of Tir na Nog bleed from open wounds quietly! From now on, our most senior of citizens will recieve the medicine, medical attention and colloidal silver that they need. After all, a living worker is a productive worker.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govMedicine", 1);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
        
            // CHOICE: Wilmer gets his house back //
            // Wilmer needs to be on the streets and you need to be knowledgeable of the absolute misery you have put him in //
            if (scr_quest_get_state("wilmerEvict") == 2) || (scr_quest_get_state("wilmerDoor") == 1) || (scr_quest_get_state("wilmerEvict") == 3) then
                {
                with scr_event_build_add_choice(main_choice, "Wilmer gets his house back")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "A certain /'Mr. Wilmer/' has apparently lost his house due to the negligence of " + P_NAME + " (who is an otherwise very responsible and morally upright youngster) in renewing his mortgage. I wish to correct " + P_NAME + "'s unfortunate mistake by not only giving Mr. Wilmer back his house, but fully renewing his mortgage. Mr. Wilmer, an upstanding citizen and long-time member of the community, deserves nothing less than this small measure of kindness!");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("wilmerEvict", 6);
                    scr_event_build_quest_state("wilmerDoor", 0);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
            
            // CHOICE: Money for the church //
            // Gives money to Giuseppe and his church, which he then wastes on garbage //
            if (scr_quest_get_state("govChurch") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Money for the pious")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Although most all of the needs of our citizens are met by our benevolent overlord Cuchulainn, there is one need that remains conspicuously unmet. That is our spiritual need. For this purpose I hereby order a donation of extraordinary magnitude to Father Giuseppe so that he may improve our house of prayer. The gospel of Clispaeth must be extolled from the highest of mountains to the lowest of bogs!");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govChurch", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
            
            // CHOICE: Car choice ???? //
            // What does this do???????? //
            if (scr_quest_get_state("govCar") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Build a mechanic's workshop")
                    {                
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Why are things always breaking down around here? Air conditioners, dishwashers, generators, cars? I say enough! I say we start fixing the place up, get it functional again! That's why I'm designating the garage near the bar as a mechanic's workshop where you can take your run down machinery to get fixed. Anything, even clunky old cars, can be fixed up there.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state_add("concessionCurrent", -10);
                    scr_event_build_quest_state("govCar", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
            
            // CHOICE: Kalevi to the Mines // 
            //Transfer Kalevi to Mines- need to have spoken to Kalevi
            if (scr_quest_get_state("govKalevi") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Transfer Kalevi to Mines")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "There is a notable absence of skilled blacksmiths in the Duergar Mines of Necron 7. Although the people of Tir na Nog have come to rely on Kalevi's dependable smithery, it is imperative for the future of our youth that he be transferred to the Mines, where he can better serve the greater good by making cool-looking gun's.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govKalevi", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
    
            // CHOICE: Basketball for all //
            //Fix up Basketball Court - need to have spoken to Uschi
            if (scr_quest_get_state("govBball") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Unlock the b-ball court")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "The time for change is now.  For too long, ballers have been persecuted for their beliefs in harmless recreation. Basketball is currently en vogue around Necron 7 and if Tir na Nog is to produce the galaxy's greatest ballers, then we must open our hoops to slams, jams, picks and rolls! The locks on the hoops will be removed so that our ballers can jam in harmony and the streets of Tir na Nog ring with the sound of swishes and dribbling!");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govBball", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
    
            // CHOICE: Candy for the poor //
            //Candy for the Poor - no conditions, trap choice //
            if (scr_quest_get_state("govCandy") == 0) then
                {
                with scr_event_build_add_choice(main_choice, "Free candy for the poor")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Children pandhandle on the corners in hopes of a passerby's gumdrop. The stomachs of Tir na Nog's hungry growl in desperate unison. Our mission is clear: we must feed our poor. From this day forward, Mortimer will be providing the poor with free candy!");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govCandy", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }
    
            // CHOICE: Giutar man exiled
            //Kick Guillaume out of Tir na Nog - need to have spoken to Guillaume
            if (scr_quest_get_state("govGuillaume") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Kick Guillaume out of Tir na Nog")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "It has come to my attention that a wandering musician, a certain... /'Guillaume/' has been causing a racket with his discordant dirges and untuned guitar. From this day forward, Guillaume is banished to wander the wastes of the Necron 7 and leave the good people of Tir na Nog in peace. If Guillaume attempts to return to Tir na Nog, the Duergars will throw him right out! Begone, I say! Begone!");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govKalevi", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                }   
                
            // CHOICE: Execute Kelpster
            // Send Kelpster to the prison to be reformed // Aka killed //
            if (scr_quest_get_state("govKelpster") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Send Kelpster to the hoosgow")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "I have been informed that there is a certain gentledwarf by the name of Kelpster causing trouble all over the community. We cannot have such delinquints among our ranks and that is why I am calling for his arrest. Mister Kelpster is to be detained immediately and thrown to the hoosgow where he can be reformed.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govKelpster", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                } 
                
            // CHOICE: Execute Zhang
            // Send Zhang to the prison to be reformed // Aka killed //
            if (scr_quest_get_state("govZhang") = 1) then
                {
                with scr_event_build_add_choice(main_choice, "Clowns are verboten")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "My new administration will not tolerate clowning of any sort. All clowns and mimes are to be thrown to the hoosgow and must remain there until they have been reformed.");
                    scr_event_build_quest_state("govChoicesRemaining", scr_quest_get_state("govChoicesRemaining") - 1);
                    scr_event_build_quest_state("govZhang", 2);
                    scr_event_build_quest_state("govHandler", 1);
                    scr_event_build_execute_event_script(event_tnn_govSpeech01);
                    }
                } 
                        
            //Reset choices
            with scr_event_build_add_choice(main_choice, "Hold up, I take that stuff back, let me say it again (Reset all choices)")
                {
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Wait up, wait up, wait up, I change my mind about all that stuff. Except the " + P_NAME + " thing, he's leaving. But all that other stuff, I'm taking it back. Lemme do this again.");
                
                // reset Gov Variables    
                scr_event_build_quest_state("govChoicesRemaining", 3);        
                if (scr_quest_get_state("govGuillaume") = 2) then scr_event_build_quest_state("govGuillaume", 1);
                if (scr_quest_get_state("govKalevi") = 2) then scr_event_build_quest_state("govKalevi", 1);
                if (scr_quest_get_state("govCandy") = 1) then scr_event_build_quest_state("govCandy", 0);
                if (scr_quest_get_state("govBball") = 2) then scr_event_build_quest_state("govBball", 1);                        
                if (scr_quest_get_state("govChurch") = 2) then scr_event_build_quest_state("govChurch", 1);                        
                if (scr_quest_get_state("govCar") = 2) then scr_event_build_quest_state("govCar", 1);                        
                if (scr_quest_get_state("govCow") = 2) then scr_event_build_quest_state("govCow", 1);                       
                if (scr_quest_get_state("govMedicine") = 1) then scr_event_build_quest_state("govMedicine", 0);
                if (scr_quest_get_state("govKelpster") = 2) then scr_event_build_quest_state("govKelpster", 1);                        
                if (scr_quest_get_state("govZhang") = 2) then scr_event_build_quest_state("govZhang", 1); 
                if (scr_quest_get_state("wilmerEvict") = 6) 
                    {
                    scr_event_build_quest_state("wilmerEvict", 3);
                    scr_event_build_quest_state("wilmerDoor", 1);
                    }
                
                // Re-run the script with altered variables //
                scr_event_build_quest_state("govHandler", 1);
                scr_event_build_execute_event_script(event_tnn_govSpeech01);
                }
            
            // CHOICE: No more, I am done //
            //Done with this bullflub
            with scr_event_build_add_choice(main_choice, "I guess that wraps my speech up. Hope you liked.")
                {
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Wait a sec, am I really done with the speech? I could probably get away with more stuff...)");
                
                // Are you sure you want to quit? //
                var done_choice = scr_event_build_choice("Am I really done with my speech?", s_port_governor);
                
                //End Speech
                with scr_event_build_add_choice(done_choice, "Yeah, I think I'm done with this.")
                    {
                    Breakout("build", "clear");
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Well, that was my speech. Hope you liked it. I thought real hard about all that stuff I just said and now you've all gotta do it, because I'm the real Governor. Well, I've got some sleep to catch up on, see you in an extremely long time.");
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Hey, that went pretty well. Maybe this whole governor gig isn't so hard after all.)");
                    scr_event_build_wait(2);
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Ah, yes, I sure love to give speeches. Well, look at the clock, it's almost time for my daily dwarf flogging. Have a productive day, subordinates.");
                    scr_event_build_event_snippet(ending);
                    } 
                     
                //Don't end speech
                with scr_event_build_add_choice(done_choice, "Nah, I've got some more stuff to say.")
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Nah, I've got more stuff to say...)");
                    scr_event_build_event_snippet(speech_choice);
                    }
                }
            }
        }
    
    //--------------------------------------------
    //------------ ENDING SNIPPET ----------------
    //--------------------------------------------  
    with (ending)
        {
        scr_event_build_quest_state("govFinishInitiate", 1);
        scr_event_build_teleport(r_tnn_rebelbase02, 376, 216, 3, 3);
        }
        
    //--------------------------------------------
    //------------ MAIN EVENT --------------------
    //--------------------------------------------  
    
    // Build Event
    with (event) 
        {
        //On first time and reset
        if (scr_quest_get_state("govHandler") == 1)
            {
            scr_event_build_quest_state("govHandler", 0);
            scr_event_build_event_snippet(speech_choice);
            } 
            
        //Gov Speech Introduction
        else
            {
            scr_event_build_look(o_cts_hoopz, SOUTHWEST);
            scr_event_build_wait(1);
            scr_event_build_quest_state("govChoicesRemaining", 3);            
            scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "Ahem... ah, hello... good gentlemen.");
            scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "And, ah, hello good people of Tir na Nog. It has, uh, come to my attention, I believe, that I am your new governor. Uhh. And as your new governor, it is my duty to inform you that there are going to be some changes around here. Don't be alarmed, I come uh, highly recommended. The policies that I will hereby enact are for the benefit of all the good dwarfs of Tir na Nog and it is my hope that they will greatly improve the lives of our goodly folk. But before I get to them, there is one thing I'd like to do. I hereby declare that the brave and exceptionally noble youngster " + P_NAME + " has free passage from Tir na Nog. It is a rare privilege that one may leave Tir na Nog, but it must be done for the sake of our security and prosperity. Now, onto my new policies...");
            Breakout("build", "add", "concessionCurrent");
            scr_event_build_quest_state("govHandler", 1);
            scr_event_build_execute_event_script(event_tnn_govSpeech01);
            }
        }
    scr_event_advance(event); //For transition inward
    }

/*
var main_choice = scr_event_build_choice("I think I've got " + (string(scr_quest_get_state("concessionCurrent"))) + " choices left...", s_port_governor);
        Breakout("build", "add", "concessionCurrent");
        
        if (scr_quest_get_state("concessionCurrent") < 10)
                    {
                        scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Uh, I don't think I have the authority to pull this one off. Maybe I should just scrap my whole speech and start over...)");
                        scr_event_build_event_snippet(speech_choice);
                    }
                    
                    
        if (scr_quest_get_state("concessionCurrent") < 15)
                {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Medicine for the elderly? That's a tall order and I don't think the Duergars are gonna be happy with this... maybe I should restructure my proposal to try to fit it in...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                
        if (scr_quest_get_state("concessionCurrent") < 10)
                    {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Try to get Mr. Wilmer's house back? I don't think I've got the cred to pull that one off with all my other reforms...)");
                    scr_event_build_event_snippet(speech_choice);
                }  
                //Have enough concession points
                else
                {
                
                //Breakout("build", "edit", "concessionCurrent", -15);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 15)
                {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Man... a church of Clispaeth could really change things around here, but I don't think I've got the authority to get it built... the Duergars are starting to get suspicious...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                    
                //Have enough concession points
                else
                {
                
                //Breakout("build", "edit", "concessionCurrent", -10);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 10) {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(I'd like to build a workshop but I don't think I've got the authority for it. Maybe I should restructure my proposal... or maybe I should give up while I'm ahead...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                    
                //Have enough concession points
                else
                {
                
                
                //Breakout("build", "edit", "concessionCurrent", -5);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 5)
                {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Hardly anyone is allowed to leave Tir na Nog... I don't think I've got the clout to pull this one off... maybe I could restructure my proposal...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                    
                //Have enough concession points
                else
                {
                
                //Breakout("build", "edit", "concessionCurrent", -15);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 15)
                {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(There's an old saying... /'b-ball is the soul of a city/'... actually I think I just made that up, but I don't think I can get away with giving Tir na Nog any more concessions...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                    
                //Have enough concession points
                else
                {
                
                  //Breakout("build", "edit", "concessionCurrent", -10);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 10) {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(I think the Duergars are starting to think something's up. I don't think I'll be able to get away with this one...)");
                    scr_event_build_event_snippet(speech_choice);
                }
                    
                //Have enough concession points
                else
                {
                    
                
        //Breakout("build", "edit", "concessionCurrent", -5);
                //Don't have enough concession points to do this.
                if (scr_quest_get_state("concessionCurrent") < 5)
                {
                    scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(I can hear the Duergars murmuring down there... I may have a revolt on my hands if I go any further. I'm not gonna push my luck with this one anymore.)");
                    scr_event_build_event_snippet(speech_choice);
                }
                //Have enough concession points
                else {
                
                //Spoken to both Ooze and Slag before.
            if (scr_quest_get_state("oozeTirNaNog") == 1) && (scr_quest_get_state("slagTirNaNog") == 1)
            { 
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Huh? What are Ooze and Slag doing here?)");    
            }
            //Spoken to both Ooze but not Slag.
            if (scr_quest_get_state("oozeTirNaNog") == 1) && (scr_quest_get_state("slagTirNaNog") == 0)
            { 
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Huh? What are Ooze that weird green guy doing here?)");    
            }
            //Spoken to Slag but not Ooze.
            if (scr_quest_get_state("oozeTirNaNog") == 0) && (scr_quest_get_state("slagTirNaNog") == 1)
            { 
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Huh? What are Slag and that other guy doing here?)");    
            }
            //Never spoken to Slag or Ooze.
            if (scr_quest_get_state("oozeTirNaNog") == 0) && (scr_quest_get_state("slagTirNaNog") == 0)
            { 
                scr_event_build_dialogue("Governor Elagabalus", s_port_governor, "(Huh? Who are these guys? And what are they doing here?)");    
            }
            /*
            scr_event_build_move_to_point_ext(o_cts_hoopz, 200, 131, 1);
            scr_event_build_wait_for_actions();
            scr_event_build_move_to_point_ext(o_cts_hoopz, 200, 130, 1);
            scr_event_build_wait_for_actions();
            scr_event_build_wait(1);
            scr_event_build_move_to_point_ext(o_cts_hoopz, 201, 130, 1);
            scr_event_build_wait_for_actions();
            scr_event_build_wait(1);
            scr_event_build_move_to_point_ext(o_cts_hoopz, 199, 130, 1);
            scr_event_build_wait_for_actions();
            scr_event_build_wait(1);
            scr_event_build_move_to_point_ext(o_cts_hoopz, 200, 129, 1);
            scr_event_build_wait_for_actions();
            scr_event_build_wait(1);
            
                        //scr_event_build_move_to_point_ext(o_cts_hoopz, 200, 145, 1);
            //scr_event_build_wait_for_actions();
            //scr_event_build_camera_move(0, 72, 3);
            //scr_event_build_wait(5);
            //scr_event_build_camera_move(0, -72, 3);
            //scr_event_build_wait(2);
            //scr_event_hoopz_switch_control();
            */

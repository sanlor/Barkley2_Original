<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEffectDraw</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
//scr_deltatime_init();
EffectCloud("init");
sprAmt = 4;
spr[0] = sCybergremlinTest;
spr[1] = sCatfishSmall;
spr[2] = sKoboldLarge;
spr[3] = sKoboldMedium;

len = 14;
lines = 4;
for (i = 0; i &lt; lines; i += 1)
{
    dir = random(360);
    lineX0[i] = x + lengthdir_x(len, dir);
    lineY0[i] = y + lengthdir_y(len, dir);
    lineX1[i] = x + lengthdir_x(len, dir);
    lineY1[i] = y + lengthdir_y(len, dir);
}
for (i = 0; i &lt; lines; i += 1)
{
    dir = random(360);
    lineX0[i] = lineX1[i];
    lineY0[i] = lineY1[i];
    lineX1[i] = x + lengthdir_x(len, dir);
    lineY1[i] = y + lengthdir_y(len, dir);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_deltatime_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

sprAmt = 4;
spr[0] = sCybergremlinTest;
spr[1] = sCatfishSmall;
spr[2] = sKoboldLarge;
spr[3] = sKoboldMedium;
sprCur = spr[0];
alp = mouse_x / room_width;
for (q = 0; q &lt; 4; q += 1)
{
    sprCur = spr[q];
    spx = x + (q * 60);
    spy = y;
    spx += -(alp * 3) + (alp * random(6));
    spy += -(alp * 2) + (alp * random(4));
    
    draw_sprite_ext(sprCur, 0, spx, spy, 1, 1, 0, c_white, 1);
    
    if (alp &lt;= 0) exit;
    
    drx = spx - sprite_get_xoffset(sprCur) + (sprite_get_width(sprCur) / 2);
    dry = spy - sprite_get_yoffset(sprCur) + (sprite_get_height(sprCur) / 2);
    
    vrw = sprite_get_width(sprCur) / 2;
    vrh = sprite_get_height(sprCur) / 2;
    vrw *= 0.8;
    vrh *= 0.9;
    
    draw_set_blend_mode(bm_add);
    for (i = 0; i &lt; (vrw * vrh) / 60; i += 1)
    {
        dr = random(360);
        pww = random(1);
        dx = drx + lengthdir_x(vrw * pww, dr);
        dy = dry + lengthdir_y(vrh * pww, dr);
        slw = 0.1 + random(0.2);
        slh = 0.1 + random(0.2);
        col = merge_color(c_aqua, c_white, random(1));
        col = make_color_rgb(col, c_black, 0.9);
        app = (0.3 + random(0.1)) * alp;
        draw_sprite_ext(sLight256, 0, dx, dy, slw / 4, slh / 4, random(360), col, app);
    }
    for (i = 0; i &lt; lines; i += 1)
    {
        dir = random(360); pww = random(1);
        lx0 = drx + lengthdir_x(vrw, dir);
        ly0 = dry + lengthdir_y(vrh, dir);
        dir = random(360); pww = random(1);
        lx1 = drx + lengthdir_x(vrw * pww, dir);
        ly1 = dry + lengthdir_y(vrh * pww, dir);
        col = merge_color(c_aqua, c_white, 0.5 - random(0.5));
        col = make_color_rgb(col, c_black, 0.9);
        dis = point_distance(lx0, ly0, lx1, ly1);
        dir = point_direction(lx0, ly0, lx1, ly1);
        app = (0.5 + random(0.1)) * alp;
        draw_sprite_ext(s1x1, 0, lx0, ly0, dis, 1, dir, col, app);
    }
    draw_set_blend_mode(bm_normal);
}

exit;

for (i = 0; i &lt; lines; i += 1)
    {
        draw_line_width(lineX0[i], lineY0[i], lineX1[i], lineY1[i], 1);
        dir = random(360);
        lineX0[i] = lineX1[i];
        lineY0[i] = lineY1[i];
        lineX1[i] = drx + lengthdir_x(len, dir);
        lineY1[i] = dry + lengthdir_y(len, dir);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprAmt = 4;
spr[0] = sCybergremlinTest;
spr[1] = sCatfishSmall;
spr[2] = sKoboldLarge;
spr[3] = sKoboldMedium;
sprCur = spr[0];
alp = mouse_x / room_width;
for (q = 0; q &lt; 4; q += 1)
{
    sprCur = spr[q];
    spx = x + (q * 60);
    spy = y;
    //spx += -(alp * 3) + (alp * random(6));
    //spy += -(alp * 2) + (alp * random(4));
    
    draw_sprite_ext(sprCur, 0, spx, spy, 1, 1, 0, c_white, 1);
    
    if (alp &lt;= 0) exit;
    
    drx = spx - sprite_get_xoffset(sprCur) + (sprite_get_width(sprCur) / 2);
    dry = spy - sprite_get_yoffset(sprCur) + (sprite_get_height(sprCur) / 2);
    
    vrw = sprite_get_width(sprCur) / 2;
    vrh = sprite_get_height(sprCur) / 2;
    //vrw *= 0.8;
    //vrh *= 0.9;
    
    EffectCloud("draw", drx, dry, vrw, vrh, alp);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

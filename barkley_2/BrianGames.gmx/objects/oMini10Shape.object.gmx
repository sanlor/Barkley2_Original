<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TEXT
textTitle = choose("PICK A SHAPE", "SELECT A GEOMETRY", "CHOOSE THE CULPRIT");
textRight = choose("GREAT SLEUTHING!", "NICE DETECTIVE WORK!", "YOU'RE A GOOD GUMSHOE!");
textWrong = choose("THE SHAPE GOT AWAY!", "YOU NABBED THE WRONG GEOMETRY!", "YOU BLEW IT!");
textTop = textTitle;

cRed = make_color_rgb(255 - 16, 16, 16);
cYellow = make_color_rgb(255 - 16, 255 - 16, 16);
cBlue = make_color_rgb(16, 16, 255 - 16);

select = 0;
selectMax = 8;
confirm = 0;
lightSpc = (global.miniWidth / 2) + 32 + 2; //+1 for light bigger
shape = floor(random(8));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a shape
if (MiniKeyPress("cancel")) { Minigame("stop"); instance_destroy(); }

if (confirm == 0)
{
    if (MiniKeyPress("left"))
    {
        if (select == 4) select = selectMax - 1;
        else if (select == 0) select = 3;
        else select -= 1;
    }
    if (MiniKeyPress("right"))
    {
        if (select == 3) select = 0;
        else if (select == selectMax - 1) select = 4;
        else select += 1;
    }
    if (MiniKeyPress("up"))
    {
        select -= 4;
        if (select &lt; 0) select += 8;
    }
    if (MiniKeyPress("down"))
    {
        select += 4;
        if (select &gt;= selectMax) select -= 8;
    }
    if (MiniKeyPress("action"))
    {
        confirm = 1;
    }
}

if (confirm == 1)
{
    lightSpc -= ((6 * 30) / 10) * dt();
    if (lightSpc &lt; 0) 
    {
        lightSpc = 0;
        if (shape == select) { audio_play_sound(mMiniRight, 10, 0); textTop = textRight; }
        else { audio_play_sound(mMiniWrong, 10, 0); textTop = textWrong; }
        confirm = 2;
    }
}

if (confirm == 2)
{
    if (MiniKeyPress("action"))
    {
        //room_goto(rMiniSelect);
        instance_destroy();
        instance_create(0, 0, oMini10Select);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
draw_set_color(cBlue);
draw_rectangle(global.miniX, global.miniY, global.miniX + global.miniWidthS, global.miniY + (17 * global.miniScale), 0);

draw_set_color(c_white);
draw_set_font(CourierNew12);
draw_set_halign(1);
if (confirm != 1) draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY + (0 * global.miniScale), textTop, global.miniScale, global.miniScale, 0);
draw_set_halign(0);

//Shapes
dx = global.miniX + (global.miniWidthS / 2); 
dy = global.miniY + (global.miniHeightS / 2);
ds = global.miniScale;
spc = 24 * global.miniScale;
dx -= (spc * 1.5) + ((48 * 1.5) * global.miniScale);
dxo = dx;
dy -= (spc * 0.5) + (24 * global.miniScale);
dy -= (32 * global.miniScale);
for (i = 0; i &lt; 8; i += 1)
{
    if (confirm != 0) col = c_dkgray; else col = c_white;
    if (select == i) col = cRed;
    draw_sprite_ext(sMiniShape, i, dx, dy, ds, ds, 0, col, 1);
    dx += spc + (48 * global.miniScale);
    if (i == 3) { dy += spc + (48 * global.miniScale); dx = dxo; }
}

//Lights up
dx = global.miniX + (global.miniWidthS / 2);
dy = global.miniY + (global.miniHeightS * .8);
draw_sprite_ext(sMiniShapeLight, 0, dx - (lightSpc * global.miniScale), dy, ds, ds, 0, cYellow, .5);
draw_sprite_ext(sMiniShapeLight, 0, dx + (lightSpc * global.miniScale), dy, ds, ds, 0, cYellow, .5);

draw_sprite_ext(sMiniShape, shape, dx, dy, ds, ds, 0, c_black, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

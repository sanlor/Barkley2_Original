<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEffectDraw</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
mx = (384 / 2);
my = (240 / 2);

hue = random(255);
col = make_color_hsv(hue, 255, 255);

state = 0;
push = 0;
//speed = -2;
direction = 0;
txt = "Mission Complete";
scl = 8;

x = 384 + ((string_width(txt) * scl) / 2);
x += 200;
y = my;

charHeight = string_height("H") * scl;
glow = 0;

for (i = 0; i &lt; string_length(txt); i += 1)
{
    soundPlayed[i] = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
if (state == 0)
{
    //Do side scroll
    h = string_width(txt) * scl;
    x -= 8 * dt_60();
    if (x &lt; - ((h / 2) + 200)) { state = 1; scl = 4; } //instance_destroy();
}
else if (state == 1)
{
    //Do top down scroll
    push += 6 * dt_60();
    
    pm = 240 + (charHeight * (string_length(txt) / 1));
    if (push &gt; pm) { state = 2; scl = 2; }
}
else if (state == 2)
{
    //Do mission complete bangs with final glower
    cap = 100 * string_length(txt);
    glow += 30 * dt();
    glow = clamp(glow, 0, cap);
    for (i = 0; i &lt; string_length(txt); i += 1)
    {
        if (glow &gt; i * 50) 
        {
            if (soundPlayed[i] == 0)
            {
                soundPlayed[i] = 1;
                audio_play_sound(mMissionBlip, 10, 0);
            }
        }
    }

    if (glow == cap)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
vx = view_xview[0];
vy = view_yview[0];

hue += 3 * dt();
col = make_color_hsv(hue, 255, 255);
if (hue &gt; 255) hue = 0;
scr_font(global.fn_2o, col, 1, 1);
draw_set_blend_mode(bm_add);

if (state == 0)
{
    draw_set_alpha(0.1 + random(0.1));
    for (i = 0; i &lt; 10; i += 1)
    {
        len = random(2); dir = random(360);
        dx = x + lengthdir_x(len, dir); dy = y + lengthdir_y(len, dir);
        draw_set_alpha(0.1 + random(0.1));
        draw_text_ext_transformed(vx + dx, vy + dy, txt, -1, -1, scl, scl, 0);
    }
    
    draw_set_alpha(0.5 + random(0.1));
    draw_text_ext_transformed(vx + x, vy + y, txt, -1, -1, scl, scl, 0);
}
else if (state == 1)
{
    dx = mx;
    dy = 240 - push + (charHeight / 2);// + (h * (string_length(txt) / 1)) + push;
    for (q = 0; q &lt; string_length(txt); q += 1)
    {
        ltr = string_copy(txt, q + 1, 1);
        for (i = 0; i &lt; 10; i += 1)
        {
            len = random(2); dir = random(360);
            dxx = dx + lengthdir_x(len, dir); dyy = dy + lengthdir_y(len, dir);
            draw_set_alpha(0.1 + random(0.1));
            draw_text_ext_transformed(vx + dxx, vy + dyy, ltr, -1, -1, scl, scl, 0);
        }
        draw_set_alpha(0.5 + random(0.1));
        draw_text_ext_transformed(vx + dx, vy + dy, ltr, -1, -1, scl, scl, 0);
        dy += charHeight;
    }
}
else if (state == 2)
{
    cw = (string_width("H") * scl)
    dx = mx - (cw * (string_length(txt) / 2));
    dy = my;
    pts = glow;
    for (q = 0; q &lt; string_length(txt); q += 1)
    {
        ltr = string_copy(txt, q + 1, 1);
        
        //Whole part
        scr_font(global.fn_2f);
        alp = clamp(pts / 200, 0, 1);
        draw_set_alpha((0.2 + random(0.1)) * alp);
        draw_text_ext_transformed(vx + dx, vy + dy, ltr, -1, -1, scl, scl, 0);
        
        //Outline blur
        scr_font(global.fn_2o);
        alp = clamp(pts / 100, 0, 1);
        for (i = 0; i &lt; 10; i += 1)
        {
            len = random(2); dir = random(360);
            dxx = dx + lengthdir_x(len, dir); dyy = dy + lengthdir_y(len, dir);
            draw_set_alpha((0.1 + random(0.1)) * alp);
            draw_text_ext_transformed(vx + dxx, vy + dyy, ltr, -1, -1, scl, scl, 0);
        }
        
        //Outline
        alp = clamp(pts / 50, 0, 1);
        draw_set_alpha((0.5 + random(0.1)) * alp);
        draw_text_ext_transformed(vx + dx, vy + dy, ltr, -1, -1, scl, scl, 0);
        dx += cw;
        
        pts -= 50;//100;
        if (pts &lt;= 0) break;
    }
}

draw_set_blend_mode(bm_normal);
draw_set_alpha(1);
scr_font(global.fn_2o, c_white, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

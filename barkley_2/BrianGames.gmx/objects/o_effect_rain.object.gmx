<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup stuff //
interval = 2;

///PROPERTIES TO ADD TO CREATION CODE:
rainamount = 20;
raindrops_narrow = true;
fastrain = true;
//timestart = -1;
//timeend = 1;

rainspdmin = 3;
rainspdmax = 8;
rainsetup = false;

currently_raining = true;

system = part_system_create();
part_system_depth(system, -1000);

emitter = part_emitter_create(system);
part_emitter_region(system, emitter, 64, room_width-64, 64, room_height-64, ps_shape_rectangle, ps_distr_linear);

particle = part_type_create();
part_type_alpha3(particle, 0.025, 0.05, 0.02);
part_type_color1(particle, make_color_rgb(160, 220, 160)); //make_color_rgb(200, 200, 210));
part_type_life(particle, 150, 250);
part_type_speed(particle, 0.25, 0.5, 0, 0);
part_type_direction(particle, 0, 360, 0, 0);
part_type_size(particle, 0.75, 1.5, 0, 0);
part_type_shape(particle, pt_shape_smoke);


speed_x = 2;
speed_y = 6;

rain_x = 0;
rain_y = 0;

// THunder, disabled for now, but it does function BEAUTIFUILLY //
thunder = 1; //0;
thunder_effect = 0;
alpha = 0;
alpha2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_destroy(system,emitter);
part_system_destroy(system);
part_type_destroy(particle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//currently_raining = true;

/*
if(scr_time_get()&lt; timestart)
{
    currently_raining = false;
}
else if(scr_time_get()&gt;timeend)
{
    currently_raining = false;
}
*/

//if(!rainsetup)
if(currently_raining &amp;&amp; rainamount&gt;0 &amp;&amp; !instance_exists(o_effect_raindrop_splash))
{
    repeat(rainamount)
    {
        obj = instance_create(-600,-600,o_effect_raindrop_splash);
        obj.spdmax = rainspdmax;
        obj.spdmin = rainspdmin;
        obj.fastrain = fastrain;
        obj.raindrops_narrow = raindrops_narrow;
        obj.timernext = irandom(400);
    }
    
    rainsetup = true;
}

if(currently_raining)
{
    // Interval //
    if interval &gt; 0 then
    {
        interval -= 1;
        
        // Rain area //
        part_emitter_region(system, emitter, view_xview - 128, view_xview + 384 + 128, view_yview - 128, view_yview + 240 + 128, ps_shape_rectangle, ps_distr_linear);
        
        // Event //
        if interval = 0 then
        {
            part_emitter_burst(system, emitter, particle, irandom(12) + 12);
            interval = irandom(4) + 4;
        }
            
    }
}
    
// Move the rain //
rain_x -= speed_x;
rain_y += speed_y;

if rain_x = -384 then rain_x = 0;
if rain_y = 240 then rain_y = 0;

if(currently_raining)
{
    // Thunder //
    if thunder &gt; 0 then
        {
        // Tick down //
        thunder -= 1;
        
        // Event //
        if thunder = 0 then
            {
            thunder_effect = 10;
            thunder = 200 + irandom(300);
            }
        }
        
    // Thunder effect //
    if thunder_effect &gt; 0 then thunder_effect -= 1;
}

// Alhpa //
if alpha &gt; 0 then alpha -= 0.1;
if alpha2 &gt; 0 then alpha2 -= 0.025;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw rain //
if(currently_raining)
{
    draw_sprite_tiled_ext(s_effect_rainfall, 1, view_xview + rain_x, view_yview + rain_y, 1, 1, c_white, 0.6);
}

//draw_sprite_tiled_ext(s_effect_rainfall, 1, view_xview + (rain_x * 2), view_yview + rain_y + 32, 1, 1, c_white, 0.5);

// Thunder //
draw_set_color(merge_color(c_green, c_white, 0.5)); //was c_white
switch (thunder_effect)
    {
    case 8: alpha = 0.4 + random(0.2); alpha2 = 0.4; break;
    case 6: alpha = 0.4 + random(0.2); alpha2 = 0.4; break;
    case 1: alpha = 0.2 + random(0.1); alpha2 = 0.2; break;
    }
draw_sprite_ext(s_effect_thunderstrike, 0, view_xview + 192, view_yview + 120, 1, 1, 0, merge_color(c_green, c_white, 0.5), alpha2); //was c_white
draw_set_alpha(alpha);
draw_rectangle(view_xview - 2, view_yview - 2, view_xview + 386, view_yview + 242, false);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bg_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
global.fn_2 = font_add_sprite(s_fn2, ord(" "), 1, 0); //was 0 spacing
global.fn_3 = font_add_sprite(s_fn3, ord("!"), 0, 1);

fullscreen = 0;
event_user(0);

distortionAlt = 0;
soulburnDid = 0;
suckIndex = 0;
ghost = 1;
global.cosmicColor = c_white;
global.cosmicAlternate = 0;
global.cosmicColorEnable = 0;

surfaceBlend = bm_subtract;

scr_deltatime_init();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surfaces
if (surface_exists(surDisplay)) surface_free(surDisplay);
if (surface_exists(surMorph)) surface_free(surMorph);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (keyboard_check(ord('Q'))) surfaceBlend = bm_normal;
if (keyboard_check(ord('W'))) surfaceBlend = bm_add;
if (keyboard_check(ord('E'))) surfaceBlend = bm_subtract;
if (keyboard_check(ord('R'))) { keyboard_clear(ord('R')); global.cosmicColorEnable = !global.cosmicColorEnable; }

//if (global.cosmicAlternate == 0)
{
cl = make_color_rgb(random(255), random(255), random(255));
global.cosmicColor = merge_color(cl, c_white, 0.75);
if (ghost)
{
global.cosmicColor = merge_color(cl, c_black, 0.9);
}
}
global.cosmicAlternate = !global.cosmicAlternate;

//Directional Smear
if (mouse_check_button(mb_left))
{
    //mouse_clear(mb_left); instance_create(mouse_x, mouse_y, oEffectMorph);
    repeat (4) 
    {
        obj = instance_create(mouse_x, mouse_y, oEffectMorph);
        //new
        obj.speed = obj.speed * 2;
        obj.life = 100;
        obj.lifeSpd = -(4 + random(1));
        //new
        if (ghost) //keyboard_check(vk_shift)) 
        {
            obj.col = make_color_rgb(random(255), random(255), random(255));
            obj.blend = bm_add;
            obj.col = merge_color(obj.col, c_black, 0.9);
        }
    }
    
}

//Cosmic Crunch
if (keyboard_check(ord('2')))
{
    //mouse_clear(mb_left); instance_create(mouse_x, mouse_y, oEffectMorph);
    soulburnDid = 1;
    repeat (2)
    {
    with (o_enemy_test)
    {
        dir = 180 + random(180);
        dis = 12;
        dx = x + lengthdir_x(dis, dir);
        dy = y + lengthdir_y(dis * .66, dir);
        obj = instance_create(dx, dy, oEffectMorph);
        obj.direction = 90;// - 10 + random(20);
        obj.speed = obj.speed * 2;
        obj.lifeSpd = -2 * 5;
        obj.life = 100;
        obj.wave2 = 1;    
        obj.dvx = .5 + random(0.1); //2 + random(.25);
        obj.dvy = .5 + random(0.1); //2 + random(.25);
        if (oEffectPush.surfaceBlend == bm_subtract || oEffectPush.surfaceBlend == bm_add)
        {
            obj.dvx = 1;
            obj.dvy = 1;
        }
        obj.didHit = 1;
        //col = make_color_rgb(random(255), random(255), random(255));
        //obj.col = merge_color(make_color_rgb(random(255), random(255), random(255)), c_white, .5);
        if (oEffectPush.ghost) //keyboard_check(vk_shift)) 
        {
            obj.col = make_color_rgb(random(255), random(255), random(255));
            obj.blend = bm_add;
            obj.col = merge_color(obj.col, c_black, 0.8); //was .9
            
        }
    }
    }
}
else
{
    if (soulburnDid == 1)
    {
        with (o_enemy_test)
        {
            obj = instance_create(x, y - 15, o_entity_indicatorDamage);
            shake = 5;
            //obj.timer *= 2;
        }
    }
    soulburnDid = 0;
}

//Screen suck
if (keyboard_check(ord('3')))
{
    repeat (8)
    {
        sc = 12;
        if (suckIndex == 2) { dx = -sc; dy = random(- sc + 240 + sc + sc); }
        else if (suckIndex == 3) { dx = random(- sc + 384 + sc + sc); dy = -sc; }
        else if (suckIndex == 0) { dx = 384 + sc; dy = random(- sc + 240 + sc + sc); }
        else if (suckIndex == 1) { dx = random(- sc + 384 + sc + sc); dy = 240 + sc; }
        suckIndex += 1;
        if (suckIndex &gt; 3) suckIndex = 0;
        obj = instance_create(dx, dy, oEffectMorph);
        obj.type = "suck";
        //obj.direction = point_direction(dx, dy, 384 / 2, 240 / 2);// - 10 + random(20);
        //obj.desX = 384 / 2; obj.desY = 240 / 2;
        obj.direction = point_direction(dx, dy, 211, 112);// - 10 + random(20);
        obj.desX = 211; obj.desY = 112;
        obj.speed = obj.speed * 2;
        obj.lifeSpd = -2;// * 5;
        obj.life = 100;
        //obj.wave2 = 1;  
        obj.wid = obj.wid * 3;
        obj.hei = obj.hei * 3;
        obj.growSpd = -abs(obj.growSpd) / 2;
        obj.waveDisSpd = 0;  
        obj.dvx = 1.2 + random(0.1); //2 + random(.25);
        obj.dvy = 1.2 + random(0.1); //2 + random(.25);
        obj.didHit = 1;
        
        //obj.col = merge_color(make_color_rgb(random(255), random(255), random(255)), c_white, .5);
        if (ghost) //keyboard_check(vk_shift)) 
        {
            obj.col = make_color_rgb(random(255), random(255), random(255));
            obj.blend = bm_add;
            obj.col = merge_color(obj.col, c_black, 0.9);
            
        }
    }
}

if (keyboard_check(ord('4')))
{
    keyboard_clear(ord('4'));
    with (oEffectMorph)
    {
        if (type == "distortion" || type == "suck")
        {
            instance_destroy();
        }
    }
    
    instance_create(211, 112, oZauberCosmicDistortion);
    len = 5;//10;
    parts = 36 * 4; //72
    dv = 360 / parts;
    for (i = 0; i &lt; parts; i += 1)
    {
        dir = i * dv;
        dx = 211 + lengthdir_x(len, dir);
        dy = 112 + lengthdir_y(len, dir);
        obj = instance_create(dx, dy, oEffectMorph);
        obj.direction = dir - (dv / 2) + random(dv);
        obj.speed = 3;
        obj.wid = obj.wid * 2;
        obj.hei = obj.hei * 2;
        fff = 1 + random(1);
        obj.dvx *= fff;
        obj.dvy *= fff;
        
        if (ghost) //keyboard_check(vk_shift)) 
        {
        obj.col = make_color_rgb(random(255), random(255), random(255));
        obj.blend = bm_add;
        obj.col = merge_color(obj.col, c_black, 0.9);
        }
    }
    //300, 75
    if (random(100) &lt; 5)
    {
        
    }
}

if (keyboard_check(ord('5')))
{
    //keyboard_clear(vk_control);
    if (instance_exists(oZauberCosmicBullet) == 0)
    {
        instance_create(211, 112, oZauberCosmicBullet);
    }
    len = 10;
    //for (i = 0; i &lt; 36; i += 1)
    if (distortionAlt == 0)
    {
        //dir = i * 10;
        dir = random(360);
        dx = 211 + lengthdir_x(len, dir);
        dy = 112 + lengthdir_y(len, dir);
        obj = instance_create(dx, dy, oEffectMorph);
        obj.x = 211;
        obj.y = 112;
        obj.type = "distortion";
        obj.direction = dir - 5 + random(10);
        obj.speed = obj.speed / 20; //0;
        obj.life = 100;
        obj.growSpd = obj.growSpd * 2.0;
        obj.wid = obj.wid * 2;//2;
        obj.hei = obj.hei * 2;//2;
        obj.wave2 = 1;
        //fff = 1.1 + random(0.1);
        obj.dvx = 0.8 + random(0.1); //1.2
        obj.dvy = 0.8 + random(0.1);
        //obj.double = 1;
        obj.didHit = 1;
        if (ghost) //keyboard_check(vk_shift)) 
        {
        obj.blend = bm_add;
        obj.col = merge_color(obj.col, c_black, 0.9);
        }
    }
    distortionAlt = !distortionAlt;
    //300, 75
    if (random(100) &lt; 5)
    {
        
    }
}
else
{
    distortionAlt = 0;
    global.t0 = 0;
    with (oEffectMorph)
    {
        if (type == "distortion")
        {
            growSpd = 0;
            //life += lifeSpd;
            global.t0 += 1;
        }
    }
    //Kill
    if (global.t0 == 0 &amp;&amp; instance_exists(oZauberCosmicBullet) == 1)
    {
        with (oZauberCosmicBullet) instance_destroy();
    }
}

if (keyboard_check(ord('6')))
{
    if (instance_exists(oZauberCosmicBullet) == 0)
    {
        instance_create(211, 112, oZauberCosmicBullet);
    }
    repeat (33) //40
    {
        //dir = i * 10;
        dir = random(360);
        con = (mouse_x / 5);
        conx = (384 / 2) * (mouse_x / 100); //384 / 2
        
        cony = (120) * (mouse_x / 100); //120
        dx = (211) - con + random(con * 2); //random(384) * (mouse_x / 100);
        dy = (112) - con + random(con * 2); 
        dx = 211 + lengthdir_x(con, dir);
        dy = 112 + lengthdir_y(con, dir);
        dx = 211;
        dy = 112;
        obj = instance_create(dx, dy, oEffectMorph);
        //obj.x = 211;
        //obj.y = 112;
        obj.type = "distortion";
        obj.direction = dir - 5 + random(10);
        obj.speed = obj.speed * 2;//obj.speed / 20; //0;
        obj.life = 100;
        obj.lifeSpd = -25 * 2;
        obj.growSpd = obj.growSpd * 2.0;
        
        obj.wid = ((38 + random(19)) / 2) * (mouse_x / 100); //obj.wid * 2;//2;
        obj.hei = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.hei * 2;//2;
        
        obj.wid = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.wid * 2;//2;
        obj.hei = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.hei * 2;//2;
        //obj.wave2 = 1;
        //obj.waveDis = 5 + random(10);
        //obj.wave2Dis = 5 + random(10);
        //fff = 1.1 + random(0.1);
        obj.dvx = (1.05 + random(0.05)) * (mouse_y / 50); //1.2
        obj.dvy = (1.05 + random(0.05)) * (mouse_y / 50);
        //obj.double = 1;
        obj.didHit = 1;
        if (ghost) //keyboard_check(vk_shift)) 
        {
        obj.blend = bm_add;
        obj.col = merge_color(obj.col, c_black, 0.9);
        }
    }
}
else
{
    distortionAlt = 0;
    global.t0 = 0;
    with (oEffectMorph)
    {
        if (type == "distortion")
        {
            growSpd = 0;
            //life += lifeSpd;
            global.t0 += 1;
        }
    }
    //Kill
    if (global.t0 == 0 &amp;&amp; instance_exists(oZauberCosmicBullet) == 1)
    {
        with (oZauberCosmicBullet) instance_destroy();
    }
}

if (keyboard_check(ord('7')))
{
    repeat (50) //40
    {
        //dir = i * 10;
        dir = random(360);
        con = (mouse_x / 5);
        conx = (384 / 2) * (mouse_x / 100); //384 / 2
        
        cony = (120) * (mouse_x / 100); //120
        dx = (211) - con + random(con * 2); //random(384) * (mouse_x / 100);
        dy = (112) - con + random(con * 2); 
        //dx = 211 + lengthdir_x(con, dir);
        //dy = 112 + lengthdir_y(con, dir);
        //dx = 211;
        //dy = 112;
        obj = instance_create(dx, dy, oEffectMorph);
        //obj.x = 211;
        //obj.y = 112;
        obj.type = "distortion";
        obj.direction = dir - 5 + random(10);
        obj.speed = obj.speed * 2;//obj.speed / 20; //0;
        obj.life = 100;
        obj.lifeSpd = -25 * 2;
        obj.growSpd = obj.growSpd * 2.0;
        
        obj.wid = ((38 + random(19)) / 2) * (mouse_x / 100); //obj.wid * 2;//2;
        obj.hei = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.hei * 2;//2;
        
        obj.wid = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.wid * 2;//2;
        obj.hei = ((24 + random(12)) / 2) * (mouse_x / 100); //obj.hei * 2;//2;
        //obj.wave2 = 1;
        //obj.waveDis = 5 + random(10);
        //obj.wave2Dis = 5 + random(10);
        //fff = 1.1 + random(0.1);
        obj.dvx = (1.05 + random(0.05)) * (mouse_y / 50); //1.2
        obj.dvy = (1.05 + random(0.05)) * (mouse_y / 50);
        //obj.double = 1;
        obj.didHit = 1;
        if (ghost) //keyboard_check(vk_shift)) 
        {
        obj.blend = bm_add;
        obj.col = merge_color(obj.col, c_black, 0.9);
        }
    }
}

if (keyboard_check(vk_space)) //mouse_check_button(mb_right))
{
    //mouse_clear(mb_right);
    keyboard_clear(vk_space);
    surface_set_target(surMorph);
    //draw_set_blend_mode_ext(bm_zero, bm_one);
    //draw_set_blend_mode_ext(bm_one, bm_zero);
    //draw_set_color(c_black);
    //draw_set_alpha(0.01);
    //draw_rectangle(0, 0, 384, 240, 0);
    draw_clear_alpha(c_black, 0);
    surface_reset_target();
    with (oEffectMorph) instance_destroy();
    with (o_enemy_test) { x = xstart; y = ystart; }
    //draw_set_alpha(1);
    //draw_set_blend_mode(bm_normal);
}
surface_set_target(surMorph);
//draw_sprite_ext(sMiniNeedleHay, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 1);
surface_reset_target();


if (keyboard_check(vk_f4))
{
    keyboard_clear(vk_f4);
    fullscreen = !fullscreen;
    window_set_fullscreen(fullscreen);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
scr_deltatime_update();
event_user(1);

surface_set_target(oEffectPush.surMorph);
draw_set_alpha(choose(0.03)); //0.01
draw_set_color(c_black); //make_color_rgb(128, 128, 128)); //c_black);
//draw_set_color(c_white);
draw_rectangle(0, 0, 384 + 30, 240 + 30, 0);
surface_reset_target();
draw_set_alpha(1);

str = "MOUSE: " + string(mouse_x) + "x" + string(mouse_y);
str += " | ";
str += "OBJ: " + string(instance_count);
window_set_caption(str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw game surface
surface_set_target(surDisplay);
draw_sprite(s_bg_test, 0, 0, 0);
with (o_enemy_test) event_user(0); //draw_self();
with (o_entity_indicatorDamage) event_user(0);
with (o_entity_indicatorDamage_popcorn) event_user(0);
with (o_bullet_test) event_user(0);
with (oEffectDraw) event_user(0);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create surfaces
surDisplay = surface_create(384, 240);
surMorph = surface_create(384 + 30, 240 + 30);
event_user(1);
surface_set_target(surMorph);
draw_clear_alpha(c_black, 0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surfaces
if (surface_exists(surDisplay)) surface_free(surDisplay);
if (surface_exists(surMorph)) surface_free(surMorph);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw controls
dx = 5;
dy = 5;
scl = 1;
yspc = 12 * scl;
scr_font(global.fn_2, c_purple);
draw_text_transformed(dx, dy, "ZAUBER ZAUBER (ARROWS TO CHANGE ZAUBER)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "F4 = FULLSCREEN", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "I, O, P MOVE ENEMIES TO MOUSE", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "SPACEBAR TO RESTART", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "SHIFT TO CHANGE SPRITE MODE", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "Q, W, E TO CHANGE BLEND MODE", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "MOUSE CLICK LEFT = SPRAY", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "1. COPY MACHINE", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "2. SQUASH", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "3. PULL", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "4. PUSH", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "5. BULLET BEND (B TO FIRE BULLETS)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "6. VARIABLE SKEW v1 (MOUSE X AND MOUSE Y CHANGE WARPING)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "7. VARIABLE SKEW v2 (MOUSE X AND MOUSE Y CHANGE WARPING)", scl, scl, 0); dy += yspc;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (surface_exists(surDisplay) == 0)
{
    event_user(0);
}
draw_surface(surDisplay, 0, 0);
draw_set_blend_mode(surfaceBlend);
fff = 255;
bndCol = make_color_rgb(fff, fff, fff);
draw_surface_ext(surMorph, 0, 0, 1, 1, 0, bndCol, 1);
if (surfaceBlend == bm_subtract)
{
    draw_surface_ext(surMorph, 0, 0, 1, 1, 0, bndCol, 1);
    //draw_surface_ext(surMorph, 0, 0, 1, 1, 0, bndCol, 1);
}
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x, mouse_y, o_entity_indicatorDamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (o_enemy_test)
{
    obj = instance_create(x, y - 15, o_bullet_test);
    obj.dad = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SCREEN WIPE
parts = 96;
dv = 384 / parts;
for (xx = 0; xx &lt; 384; xx += dv)
{
    obj = instance_create(xx, 240 + 18, oEffectMorph);
    obj.direction = 90;// - 2 + random(4);
    obj.speed = 2;
    obj.noise = 1;
    //obj.wave2 = 1;
    obj.growSpd = 0;
    obj.waveDisSpd = 0;
    obj.wid = obj.wid * 2.2;
    obj.hei = 32;//obj.hei * 2;
    
    
    
    if (ghost)//keyboard_check(vk_shift) == 0)
    {
        obj.blend = bm_add;
        obj.col = merge_color(obj.col, c_black, 0.9);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ghost toggle
ghost = !ghost;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>192,192</point>
  </PhysicsShapePoints>
</object>

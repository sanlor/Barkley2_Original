<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMiniBabbyGuy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2610000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
spd = 1;
sub = 0;
x = 8;
y = (240 / 4) - 8;
ystart = y;

win = 0;
roll = 0;
jump = 0;
control = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
if (oMiniBabbyBG.active != 1) exit;
if (win == 1) exit;
sub += (dt() / 3) * spd;

if (MiniKeyPress("action"))
{
    if (control == 1 &amp;&amp; jump == 0 &amp;&amp; roll == 0) 
    {
        audio_play_sound(mMiniBabbyJump, 10, 0);
        jump = 0.001;
    }
}

spdd = 1; //secondary multiplier for testing

if (jump != 0)
{
    jump += dt() / 5;
    if (jump &lt; 5)
    {
        y -= dt();
    }
    else if (jump &lt; 10)
    {
        y += dt();
    }
    else 
    {
        jump = 0;
        y = ystart;
    }
    
}
else y = clamp(y + dt(), 0, ystart);

if (roll &gt; 0)
{
    jump = 0;
    
    roll -= dt() / 5;
    roll = clamp(roll, 0, 100);
    image_angle = round(roll) * 90; //round(roll / 90) * 90;
    
    x += (((dt() / 2) * spd) / 2) * spdd;
}
else { x += ((dt() / 2) * spd) * spdd; control = 1; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniBabbySnake">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Roll
if (other.didHit == 0)
{
    //with (other) instance_destroy();
    audio_play_sound(mMiniBabbyHurt, 10, 0);
    other.didHit = 1;
    roll = 4 * 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniBabby">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Win game and stop timer
audio_play_sound(mMiniBabbyWin, 10, 0);
with (other) instance_destroy();
win = 1;
oMiniBabbyBG.active = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniBabbyBird">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Roll
if (other.didHit == 0)
{
    //with (other) instance_destroy();
    audio_play_sound(mMiniBabbyHurt, 10, 0);
    other.didHit = 1;
    roll = 4 * 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniBabbyRock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Roll
if (other.didHit == 0)
{
    //with (other) instance_destroy();
    audio_play_sound(mMiniBabbyHurt, 10, 0);
    other.didHit = 1;
    roll = 4 * 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniBabbySock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gain speed
audio_play_sound(mMiniBabbyPower, 10, 0);
spd += 1;
with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
scl = global.miniScale * 2;
vx = global.miniX; //view_xview[0];
vy = global.miniY; //view_yview[0];
if (win == 1) spr = sMiniBabbyGuyWin;
else if (roll &gt; 0) spr = sMiniBabbyGuyHurt;
else if (jump != 0)
{
    if (jump &lt; 3.3) { spr = sMiniBabbyGuyJump; sub = 0; }
    else if (jump &lt; 6.6) { spr = sMiniBabbyGuyJump; sub = 1; }
    else if (jump &lt; 100) { spr = sMiniBabbyGuyJump; sub = 0; }
}
else spr = sMiniBabbyGuy;
draw_sprite_ext(spr, sub, vx + round(x * scl), vy + round(y * scl), scl, scl, image_angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,9</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>

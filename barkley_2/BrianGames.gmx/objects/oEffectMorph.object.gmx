<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s2x2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
type = "";
surX = x;
surY = y;
wid = 38 - 19 + random(38);
hei = 24 - 12 + random(24);
wid = 32 - 16 + random(32);
hei = 32 - 16 + random(32);
wid = wid / 4;
hei = hei / 4;

desX = -999;
desY = -999;

blend = bm_normal;
double = 0;

didHit = choose(1, 0, 0, 0, 0, 0);

grow = 1;
growMax = 2;
growSpd = (growMax - grow) / (60 + random(30));

life = 1000;
lifeSpd = -1.5;//2;//1;


//211, 112
direction = point_direction(211, 112, mouse_x, mouse_y);

ggg = random(100);
if (ggg &lt; 10) //killed by last command - CHECK BELOW
{
    direction += - 30 + random(60); //random(360);
}
else if (ggg &lt; 30)
{
    direction += - 25 + random(50);
}
else if (ggg &lt; 999)
{
    direction += - 20 + random(40);
}
direction += -20 + random(40);
speed = 3 + random(2); //3 + 2
//speed = speed / 10;
alp = choose(0.5);//, 0.75); //1);

dv = 1.5 + random(1.5); //for moving push
dv = mean(2, dv);
dvx = 1.2 + random(.2);
dvy = 1.2 + random(.2);
dv = mean(dvx, dvy);

col = make_color_rgb(random(255), random(255), random(255));
col2 = col;
col = merge_color(col, c_white, .75); //was .75

//Wave
waveDis = 0;
waveDisSpd = 0.1;
waveDir = random(360);
waveDirSpd = 15 + random(10);

wave2 = 0;
wave2Dis = 0;
wave2DisSpd = 0.1;
wave2Dir = random(360);
wave2DirSpd = 15 + random(10);

noise = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
depth = 0;
//x = x + 0.1;
//x = mouse_x;
//y = mouse_y;
//distributed color

//col = make_color_rgb(random(255), random(255), random(255));
//col = merge_color(col, c_white, .5);

//Wave
waveDis += waveDisSpd;
waveDir += waveDirSpd;
waveD = lengthdir_x(waveDis, waveDir);
waveX = lengthdir_x(waveD, direction - 90);
waveY = lengthdir_y(waveD, direction - 90);

if (wave2)
{
    wave2Dis += wave2DisSpd;
    wave2Dir += wave2DirSpd;
    wave2D = lengthdir_x(wave2Dis, wave2Dir);
    wave2X = lengthdir_x(wave2D, direction);
    wave2Y = lengthdir_y(wave2D, direction);
}
else { wave2X = 0; wave2Y = 0; }

alp = choose(0.50, 0.75, 1.00);
//alp = 1;
if (life != 1000) alp = alp * (life / 100);
if (blend == bm_add) alp = 1; //alp = alp / 20;
life += lifeSpd;
//alp = choose(0.8, 0.9, 1.0);
//alp = choose(0.99, 1.0, 1.0);
alp = 1;
rx = x + waveX + wave2X;
ry = y + waveY + wave2Y;
newX = surX - ((surX - rx) / dvx);
newY = surY - ((surY - ry) / dvy);
if (global.cosmicColorEnable) col = global.cosmicColor;
surface_set_target(oEffectPush.surMorph);
draw_set_blend_mode(blend);
dsp(oEffectPush.surDisplay, newX, newY, wid * grow, hei * grow, rx, ry);
if (double == 1)
{
    draw_set_blend_mode(bm_add);
    colo = col;
    col = col2;
    dsp(oEffectPush.surDisplay, newX, newY, wid * grow, hei * grow, rx, ry);
    col = colo;
    draw_set_blend_mode(bm_normal);
}
//draw_sprite_ext(sMiniNeedleHay, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 1);
//draw_self();
//draw_sprite(sprite_index, 0, x, y);
draw_set_blend_mode(bm_normal);
surface_reset_target();


widG = wid * grow;
heiG = hei * grow;
if (x + (widG / 2) &lt; -9) instance_destroy();
if (x - (widG / 2) &gt; room_width + 9) instance_destroy();
if (y + (heiG / 2) &lt; -9) instance_destroy();
if (y - (heiG / 2) &gt; room_height + 9) instance_destroy();
if (point_distance(x, y, desX, desY) &lt;= speed) instance_destroy();
if (life &lt;= 0) instance_destroy();

grow += growSpd;
grow = max(0.1, grow);

image_xscale = widG / 2;
image_yscale = heiG / 2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>1,1</point>
  </PhysicsShapePoints>
</object>

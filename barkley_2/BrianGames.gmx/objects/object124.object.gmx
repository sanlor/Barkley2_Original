<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-285000000</depth>
  <persistent>0</persistent>
  <parentName>menu_station</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
vidconExp = 33;
timeExp = 66; //exp

statGuts = 10;
statLuck = 15;
statAcrobatics = 20;
statMight = 25;
statPiety = 30;
statHP = 50;

state = 1;

levelPoint = 3;
for (i = 0; i &lt; 5; i += 1) //glamp
{
    levelAmount[i] = 0;
}

hoopzSub = 0;

levelText[1, 0] = "Bandwidth";
levelText[1, 1] = "Guts";
levelText[1, 2] = "Luck";
levelText[1, 3] = "Acrobatics";
levelText[1, 4] = "Might";
levelText[1, 5] = "Piety";
for (i = 1; i &lt; 6; i += 1)
{
    levelText[1, i] = string_upper(levelText[1, i]);
}


exit;
hoopz_head=s_port_hoopz;
hoopz_frame=0;

fuck_laz=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Executed after leveling up
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MENU - Level Up
cTint = c_lime;
tint = 0.25;
cTint2 = merge_color(c_lime, c_white, 1);
cText = merge_color(c_white, cTint, .5);
cTextBG = merge_color(c_dkgray, cTint, .5);
cTextActive = merge_color(make_color_rgb(252, 198, 19), cTint, tint);
cTextSelected = merge_color(make_color_rgb(252, 250, 125), cTint, tint);
cTextInactive = merge_color(make_color_rgb(42, 46, 40), cTint, tint);
cActive = merge_color(make_color_rgb(42, 46, 40), cTint, tint);

cBGActive = merge_color(make_color_rgb(42, 46, 40), cTint, tint);
cBGInactive = merge_color(make_color_rgb(16, 16, 16), cTint, tint); //was 24

//42, 45, 40

spc = 4;

dx = 15; dy = 16; //was 24
dxo = dx;
dyo = dy;
dw = 96; dh = 40;
draw_set_color(cBGInactive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
scr_font(global.fn_1, cTextBG, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "Biosapien#Augmentation");

//Hoopz box
dy += dh + spc;
dh = (24 * 5) + (spc * 4);
draw_set_color(cBGInactive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
//scr_font(global.fn_1, c_white, 1, 1);
draw_set_colour_write_enable(0, 1, 0, 0);
draw_sprite_ext(sMenuHoopzLegs, hoopzSub, dx + (dw / 2), dy + (dh / 2), 2, 2, 0, cTint2, 1);
draw_sprite_ext(sMenuHoopzTorso, hoopzSub, dx + (dw / 2), dy + (dh / 2), 2, 2, 0, cTint2, 1);
draw_set_colour_write_enable(1, 1, 1, 1);
hoopzSub += dt() / 5;

//Cancel
dy += dh + spc;
dh = 24;
draw_set_color(cBGActive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
if (scr_mouse_rect(dx, dy, dx + dw, dy + dh)) { hover = 1; col = cTextActive; } else { hover = 0; col = cText; }
scr_font(global.fn_1, col, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "Cancel");
if (hover == 1)
{
    if (mouse_check_button(mb_left))
    {
        mouse_clear(mb_left);
        levelPoint = 3;
        for (i = 0; i &lt; 5; i += 1) levelAmount[i] = 0;
    }
}

//Confirm
dx += dw + spc;
dw = 64 + 8 + spc + (24 * 3) + (spc * 2) + spc + 32 - 8;
draw_set_color(cBGActive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
if (scr_mouse_rect(dx, dy, dx + dw, dy + dh)) { hover = 1; col = cTextActive; } else { hover = 0; col = cText; }
scr_font(global.fn_1, col, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "Confirm");
if (hover == 1)
{
    if (mouse_check_button(mb_left))
    {
        mouse_clear(mb_left);
        levelPoint = 3;
        for (i = 0; i &lt; 5; i += 1) 
        {
            Stat(string_lower(levelText[1, i + 1]), "+" + string(levelAmount[i]));
            levelAmount[i] = 0;
        }
    }
}
dw = 96;
//levelAmount[i - 1] + Stat(string_lower(levelText[1, i])

//BANDWIDTH and stat names
dx = dxo;
dx += dw + spc; dy = dyo;
dw = 64 + 8; dh = 40;
for (i = 0; i &lt; 6; i += 1)
{
    draw_set_color(cBGInactive);
    draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
    if (i == 0) col = cTextBG;
    else 
    {
        col = cTextInactive;
        if (levelAmount[i - 1] &gt; 0) col = cTextBG;
    }
    scr_font(global.fn_1, col, 1, 1);
    
    if (i != 0)
    {
        scr_font(global.fn_2c, col, 1, 1);
        draw_text(dx + (dw / 2), dy + (dh / 2) - 6, levelText[1, i]); //-3
        if (levelAmount[i - 1] &gt; 0) col = cTextSelected;
        else col = cTextBG;
        scr_font(global.fn_1, col, 1, 1);
        draw_text(dx + (dw / 2), dy + (dh / 2) + 6, string(levelAmount[i - 1] + Stat(string_lower(levelText[1, i])))); //+8
    }
    else draw_text(dx + (dw / 2), dy + (dh / 2), levelText[1, i]);
    scr_font(global.fn_1, col, 1, 1);
    
    dy += dh + spc;
    dh = 24;
}

dx += dw + spc; dy = dyo;
dw = 24; dh = 40;
draw_set_color(cBGInactive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
if (levelPoint == 3) col = cTextActive;
else if (levelPoint &lt; 3) col = cTextBG;
else col = cTextInactive;
scr_font(global.fn_1, col, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "3");

//Actual things to click for levels
clicked = -1;
hover = 0;
dw = (24 * 3) + (spc * 2);
dy += dh + spc;
dh = 24;
for (i = 1; i &lt; 6; i += 1)
{
    col = cActive;
    if (levelPoint == 0) col = cBGInactive;
    else if (levelAmount[i - 1] != 0) { col = cBGInactive; }
    else if (scr_mouse_rect(dx, dy, dx + dw, dy + dh))
    {
        hover = i;
    }
    else
    {
        
    }
    
    draw_set_color(col); 
    draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
    
    if (levelAmount[i - 1] != 0) col = cTextSelected;//Inactive;
    else if (levelPoint == 0) col = cTextInactive;
    else if (hover == i) col = cTextActive;
    else col = cText;
    
    scr_font(global.fn_1, col, 1, 1);
    //draw_text(dx + (dw / 2), dy + (dh / 2), ".");
    draw_set_color(col);
    
    saws = max(3, 3 + (levelAmount[i - 1] * 3));
    draw_sawtooth(dx, dy + (dh / 2) - 1, 0, dw - 1, levelAmount[i - 1] * 2, saws);
    draw_sawtooth(dx, dy + (dh / 2), 0, dw - 1, levelAmount[i - 1] * 2, saws);
    draw_sawtooth(dx, dy + (dh / 2) + 1, 0, dw - 1, levelAmount[i - 1] * 2, saws);
    //if (scr_mouse_rect(dx, dy, dx + dw, dy + dh)) 
    dy += dh + spc;
}
dw = 24;

if (hover != 0 &amp;&amp; levelPoint &gt; 0)
{
    if (mouse_check_button(mb_left))
    {
        mouse_clear(mb_left);
        levelAmount[hover - 1] = levelPoint;
        levelPoint -= 1;
        if (levelPoint == 0) event_user(10);
    }
}

dx += dw + spc; dy = dyo;
dw = 24; dh = 40;
draw_set_color(cBGInactive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
if (levelPoint == 2) col = cTextActive;
else if (levelPoint &lt; 2) col = cTextBG;
else col = cTextInactive;
scr_font(global.fn_1, col, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "2");

dx += dw + spc;
dw = 24; dh = 40;
draw_set_color(cBGInactive);
draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
if (levelPoint == 1) col = cTextActive;
else if (levelPoint &lt; 1) col = cTextBG;
else col = cTextInactive;
scr_font(global.fn_1, col, 1, 1);
draw_text(dx + (dw / 2), dy + (dh / 2), "1");

//Overclock
dx += dw + spc;
dw = 32 - 8; dh = 40;
hover = 0;
clicked = 0;
for (i = 0; i &lt; 6; i += 1)
{
    if (i != 0)
    {
        if (scr_mouse_rect(dx, dy, dx + dw, dy + dh) &amp;&amp; levelPoint == 2 &amp;&amp; levelAmount[i - 1] == 3) hover = i;
        if (levelPoint == 2 &amp;&amp; levelAmount[i - 1] == 3) col = cBGActive;
        else col = cBGInactive;
        draw_set_color(col);
        draw_rectangle(dx, dy, dx + dw, dy + dh, 0);
        if (levelAmount[i - 1] &gt;= 5) col = cTextSelected;
        else if (hover == i) col = cTextActive;
        else if (levelPoint == 2 &amp;&amp; levelAmount[i - 1] == 3) col = cText;
        else col = cTextInactive;
        scr_font(global.fn_1, col, 1, 1);
        draw_text(dx + (dw / 2), dy + (dh / 2), "OC");
    }
    
    dy += dh + spc;
    dh = 24;
}
if (hover != 0 &amp;&amp; levelPoint == 2)
{
    if (mouse_check_button(mb_left))
    {
        mouse_clear(mb_left);
        levelAmount[hover - 1] += 2;
        levelPoint -= 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MENU - EXP Brain
scl = 0.5;
dx = room_width / 4;
dy = room_height / 2;
dx -= (221 / 2) / 2;
dy -= (256 / 2) / 2;
cl = make_color_rgb(128, 192, 128);
cl0 = merge_color(c_red, cl, .5);
cl1 = merge_color(c_blue, cl, .5);
px = (1.0 / 256);
draw_sprite_ext(sMenuBrain, 0, dx, dy, scl, scl, 0, cl, 1);

//221, 256
pxh = (256 / 100) * vidconExp;
pxha = abs(256 - pxh) * scl;
draw_sprite_part_ext(sMenuBrain, 1, 0, 256 - pxh, 221, pxh, dx, dy + pxha, scl, scl, cl0, 1);

pxh = (256 / 100) * timeExp;
pxha = abs(256 - pxh) * scl;
draw_sprite_part_ext(sMenuBrain, 2, 0, 256 - pxh, 221, pxh, dx, dy + pxha, scl, scl, cl1, 1);


dx = room_width * .5;
dx += 32;
dy = room_height / 4;
draw_set_font(global.fn_1);
draw_set_color(c_white);

draw_text(dx, dy, "Total Experience");
dx += 32; dy += 24;
draw_text(dx, dy, "1476");
dy += 32;

dx -= 32;
draw_text(dx, dy, "Next Level");
dx += 32; dy += 24;
draw_text(dx, dy, "1698");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw brain
event_user(state);

exit;

var weight, weight_max,might, guts, piety, luck, acrobatics ;
weight = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_WEIGHT );
weight_max = "Fuck Bro where's this at?"
might = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_MIGHT );
guts = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_GUTS );
piety = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_PIETY );
luck = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_LUCK );
acrobatics = scr_stats_getEffectiveStat( o_hoopz, STAT_BASE_AGILE );


draw_sprite_ext(hoopz_head,hoopz_frame,o_menu_station_imenu.x-192+20,o_menu_station_imenu.y-120+16,1,1,0,c_white,1);

draw_set_halign(0);
draw_set_font(global.fn_2)

//Name
draw_text_colour(o_menu_station_imenu.x-192+24+32,o_menu_station_imenu.y-120+16,"X114JAM9",c_aqua,c_aqua,c_aqua,c_aqua,1);

//Class
draw_text(o_menu_station_imenu.x-192+28+32,o_menu_station_imenu.y-120+16+16,"Obnoxious Indie-Dev");
draw_text_colour(o_menu_station_imenu.x-192+28+32+144,o_menu_station_imenu.y-120+16+16,"Level:",c_gray,c_gray,c_gray,c_gray,1);

//Weight
draw_text_colour(o_menu_station_imenu.x-192+28+32,o_menu_station_imenu.y-120+16+28,"WEIGHT:",c_gray,c_gray,c_gray,c_gray,1);
draw_text(o_menu_station_imenu.x-192+28+88,o_menu_station_imenu.y-120+16+28,string(weight)+"/"+string(weight_max));
//Status
draw_text(o_menu_station_imenu.x-192+28+32,o_menu_station_imenu.y-120+16+40,"Tentacular!");


//Equipment Display
draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+56,"Jerkin:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+64+4,"Helmet:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+72+8,"V00D00 CARD:",c_gray,c_gray,c_gray,c_gray,1);


//Attributes Collumn 1 
draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+144,"MIGHT:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64,o_menu_station_imenu.y-120+16+144,string(might),c_white,c_white,c_white,c_white,1);

draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+144+16,"GUTS:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64,o_menu_station_imenu.y-120+16+144+16,string(guts),c_white,c_white,c_white,c_white,1);

draw_text_colour(o_menu_station_imenu.x-192+16,o_menu_station_imenu.y-120+16+144+32,"ACRO:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64,o_menu_station_imenu.y-120+16+144+32,string(acrobatics),c_white,c_white,c_white,c_white,1);


//Attributes Collumn 2
draw_text_colour(o_menu_station_imenu.x-192+16+80,o_menu_station_imenu.y-120+16+144,"PIETY:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64+80,o_menu_station_imenu.y-120+16+144,string(piety),c_white,c_white,c_white,c_white,1);

draw_text_colour(o_menu_station_imenu.x-192+16+80,o_menu_station_imenu.y-120+16+144+16,"LUCK:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64+80,o_menu_station_imenu.y-120+16+144+16,string(luck),c_white,c_white,c_white,c_white,1);

draw_text_colour(o_menu_station_imenu.x-192+16+80,o_menu_station_imenu.y-120+16+144+32,"CRED:",c_gray,c_gray,c_gray,c_gray,1);
draw_text_colour(o_menu_station_imenu.x-192+64+80,o_menu_station_imenu.y-120+16+144+32,"9001",c_white,c_white,c_white,c_white,1);


//Draw Resistances (yeah right)
draw_text_colour(o_menu_station_imenu.x-192+16+200,o_menu_station_imenu.y-120+16+144,"RESISTANCES:",c_gray,c_gray,c_gray,c_gray,1);
draw_sprite(s_temp_resistances,fuck_laz,o_menu_station_imenu.x-192+16+240,o_menu_station_imenu.y-120+16+200);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

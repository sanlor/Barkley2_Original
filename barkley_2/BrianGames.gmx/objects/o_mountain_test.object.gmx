<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
altitude = 0;

debug = 0;

fullscreen = 0;

xps = 1024 / 2;

layers = 2;
layerSprite[0] = s_bgfull;
layerXSpd[0] = 0.1;
layerYSpd[0] = 0.1;

layerSprite[1] = s_bgrocks;
layerXSpd[1] = 0.4;
layerYSpd[1] = 0.4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
if (keyboard_check(ord("1"))) altitude = 0;
if (keyboard_check(ord("2"))) altitude = 1;
if (keyboard_check(ord("3"))) altitude = 2;
if (keyboard_check(ord("4"))) altitude = 3;
if (keyboard_check(ord("5"))) altitude = 4;
if (keyboard_check(ord("6"))) altitude = 5;
if (keyboard_check(ord("7"))) altitude = 6;

if (keyboard_check(vk_shift)) { xps = 1024 / 2; yps = 768 / 2; }
if (keyboard_check(vk_left)) xps = max(0, xps - 1);
if (keyboard_check(vk_right)) xps = min(1024, xps + 1);

if (keyboard_check(vk_f4))
{
    keyboard_clear(vk_f4);
    fullscreen = !fullscreen;
    window_set_fullscreen(fullscreen);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///test
if (debug == 0) exit;
sl = 0.5;
display_set_gui_size(1152, 720);
draw_set_alpha(0.33);
draw_set_color(c_fuchsia); //black);

ww = 384 / scl;
hh = 240 / scl;

draw_rectangle_width(0, 0, 1024 * sl, 768 * sl, 1, 3);
draw_line_width(0, (768 / 2) * sl, 1024 * sl, (768 / 2) * sl, 3);
draw_line_width((1024 / 2) * sl, 0, (1024 / 2) * sl, 768 * sl, 3);


for (i = 0; i &lt; layers; i += 1)
{
    draw_rectangle_width(xgs[i] * sl, ygs[i] * sl, (xgs[i] + xss[i]) * sl, (ygs[i] + yss[i]) * sl, 1, 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
vxv = view_xview[0];
vyv = view_yview[0];
rmx = (room_width / 2) - (384 / 2);
rmy = (room_height / 2) - (240 / 2);
for (i = 0; i &lt; layers; i += 1)
{
    sw = 1024;
    sh = 768;
    spr = layerSprite[i]; //s_bgrocks;
    
    //yps = 768 / 2; //based on altitude
    yps = sh - (altitude * 100);
    scl = 2.5 - (abs(altitude - 6) / 6); //0.6 to 0.0
    wid = sw * scl;
    hei = sh * scl;
    xpr = layerXSpd[i]; //0.1;
    ypr = layerYSpd[i]; //0.1;
    
    xg = xps - ((384 * scl) / 2);
    yg = yps - ((240 * scl) / 2);
    
    xg += (view_xview[0] - rmx) * xpr;
    yg += (view_yview[0] - rmy) * ypr;
    
    xg = clamp(xg, 0, sw - (384 * scl));
    yg = clamp(yg, 0, sh - (240 * scl));
    
    xsl = (1 / (384 * scl)) * 386; //384
    ysl = (1 / (240 * scl)) * 242; //240
    
    xgs[i] = xg;
    ygs[i] = yg;
    xss[i] = 384 * scl;
    yss[i] = 240 * scl;
    
    draw_sprite_part_ext(spr, 0, xg, yg, 384 * scl, 240 * scl, vxv, vyv, xsl, ysl, c_white, 1);
}


//draw_set_alpha(0.5 + (altitude / 12));
//hazeColorTop = c_aqua;
//hazeColorBot = c_white;
//draw_rectangle_colour(vxv, vyv + 240 - hazeHeight, vxv + 384, vyv + 240, hazeColorTop, hazeColorTop, hazeColorBot, hazeColorBot, 0);
hazeHeight = 32 + (altitude * 32);
hazeColor = merge_color(c_blue, make_color_rgb(128, 128, 128), 0.66);
draw_sprite_ext(sprite72, 0, vxv, vyv + 240 - hazeHeight, (1 / 128) * 384, (1 / 128) * hazeHeight, 0, hazeColor, altitude / 6);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debug = !debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bg_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create 
global.fn_2 = font_add_sprite(s_fn2, ord(" "), 1, 0); //was 0 spacing
global.fn_3 = font_add_sprite(s_fn3, ord("!"), 0, 1);
global.fn_gz3 = font_add_sprite(s_fnGZ3, 40, 0, 1);

global.fn_2o = font_add_sprite(s_fn2o, ord(" "), 0, 0); //was 0 spacing
global.fn_2f = font_add_sprite(s_fn2f, ord(" "), 0, 0); //was 0 spacing
//removed proportional

flashCol = c_white;
flashAlp = 0;

event_user(10);



scr_deltatime_init();

fullscreen = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surfaces
if (surface_exists(surDisplay)) surface_free(surDisplay);
if (surface_exists(surMorph)) surface_free(surMorph);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delta, fullscreen
if (keyboard_check(vk_f4))
{
    keyboard_clear(vk_f4);
    fullscreen = !fullscreen;
    window_set_fullscreen(fullscreen);
}

scr_deltatime_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

//Brainowaves
if (keyboard_check(ord('1')))
{
    if (instance_exists(o_magnet_test) == 0) instance_create(211, 112, o_magnet_test);
}
else
{
    with (o_magnet_test) instance_destroy();
}

//Brainowaves
if (keyboard_check(ord('2')))
{
    if (instance_exists(o_magnet_test2) == 0) instance_create(211, 112, o_magnet_test2);
}
else
{
    with (o_magnet_test2) instance_destroy();
}

//Laser
if (keyboard_check(ord('3')))
{
    if (instance_exists(o_laser_test) == 0) instance_create(211, 112, o_laser_test);
}
else
{
    with (o_laser_test) instance_destroy();
}

//Laser chain
if (keyboard_check(ord('4')))
{
    keyboard_clear(ord('4'));
    obj = instance_create(211, 112, o_chain_test);
    
    //get chain of people
    global.tObj = id;
    lis = ds_list_create();
    with (o_enemy_test)
    {
        ds_list_add(global.tObj.lis, id);
    }
    ds_list_shuffle(lis);
    obj.list = lis;
}

//EMP
if (keyboard_check(ord('5')))
{
    keyboard_clear(ord('5'));
    //with (o_emp_draw) instance_destroy();
    //obj = instance_create(211, 112, o_emp_draw);
    
    with (o_emp_test2) instance_destroy();
    obj = instance_create(211, 112, o_emp_test2);
    with (o_enemy_test)
        {
            obj = instance_create(x, y - 14, o_overclock_test); 
            obj.couSpd = 0.5;
            shake = 4;
        }
}

//Scan test
if (keyboard_check(ord('6')))
{
    keyboard_clear(ord('6'));
    
    global.did = 0;
    while (true)
    {
        with (o_enemy_test)
        {
            if (random(100) &lt; 33) 
            { 
            obj = instance_create(x, y - 14, o_overclock_test); 
            
            shake = 4;
            global.did = 1; 
            break; 
            }
        }
        if (global.did == 1) break;
    }
    //obj = instance_create(mouse_x, mouse_y, o_scan_test2);
}

//Cyber barrier
if (keyboard_check(ord('7')))
{
    keyboard_clear(ord('7'));
    
    with (o_barrier_test) instance_destroy();
    obj = instance_create(211, 112, o_barrier_test);
}

//Binary shower
if (keyboard_check(ord('8')))
{
    keyboard_clear(ord('8'));
    
    global.did = 0;
    while (true)
    {
        with (o_enemy_test)
        {
            if (random(100) &lt; 33) 
            { 
            obj = instance_create(x, y - 32, o_binary_shower); 
            
            //shake = 4;
            global.did = 1; 
            break; 
            }
        }
        if (global.did == 1) break;
    }
}

//cosmic test
if (keyboard_check(ord('9')))
{
    keyboard_clear(ord('9'));
    
    //obj = instance_create(211, 112, o_cosmic_test);
    obj = instance_create(211, 112, o_mission_complete);
}

//zuck
if (keyboard_check(ord('0')))
{
    keyboard_clear(ord('0'));
    //with (o_emp_draw) instance_destroy();
    //obj = instance_create(211, 112, o_emp_draw);
    
    //with (o_emp_test2) instance_destroy();
    obj = instance_create(211, 112, o_zuck_test);
}









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create surfaces
surDisplay = surface_create(384, 240);
surMorph = surface_create(384 + 30, 240 + 30);
event_user(1);
surface_set_target(surMorph);
draw_clear_alpha(c_black, 0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw game surface
surface_set_target(surDisplay);
draw_sprite(s_bg_test, 0, 0, 0);
event_user(0);
with (o_hoopz_hilight) event_user(0);
with (o_enemy_test) event_user(0);
with (o_entity_indicatorDamage) event_user(0);
with (o_entity_indicatorDamage_popcorn) event_user(0);
with (o_bullet_test) event_user(0);
with (oEffectDraw) event_user(0);

draw_set_blend_mode(bm_add);
draw_set_color(flashCol);
draw_set_alpha(flashAlp);
draw_rectangle(0, 0, 384, 240, 0);
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw before everything

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surfaces
if (surface_exists(surDisplay)) surface_free(surDisplay);
if (surface_exists(surMorph)) surface_free(surMorph);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW GUI
dx = 5;
dy = 5;
scl = 1;
yspc = 12 * scl;
scr_font(global.fn_2, c_aqua);
draw_text_transformed(dx, dy, "CYBER ZAUBER (ARROWS TO CHANGE ZAUBER)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "F4 = FULLSCREEN", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "I, O, P MOVE ENEMIES TO MOUSE", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "SPACEBAR TO RESTART", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "1. MAGNET v1", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "2. MAGNET v2", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "3. MEGA RAY (MOUSE)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "4. CHAIN LASER", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "5. EMP", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "6. STUNNER", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "7. BARRIER (B TO FIRE BULLETS)", scl, scl, 0); dy += yspc;
draw_text_transformed(dx, dy, "8. BINARY SHOWER", scl, scl, 0); dy += yspc;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
if (surface_exists(surDisplay) == 0)
{
    event_user(10);
}
event_user(1);

draw_surface(surDisplay, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (o_enemy_test)
{
    obj = instance_create(x, y - 15, o_bullet_test);
    obj.dad = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>192,192</point>
  </PhysicsShapePoints>
</object>

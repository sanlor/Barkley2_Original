<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMiniDanmakuShip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600100</depth>
  <persistent>0</persistent>
  <parentName>oMiniDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
image_single = 0;

x = global.miniWidth / 2;
y = global.miniHeight / 2;

dir = 0;
dirSpd = 1;
dis = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
image_alpha = 0.6 + random(0.2);

if (instance_exists(oMiniDanmakuPause)) exit;

moveUD = 0;
moveLR = 0;
//REPLACE WITH REAL KEYS
if (MiniKeyHeld("up")) moveUD = -1;
if (MiniKeyHeld("down")) moveUD = 1;
if (MiniKeyHeld("left")) moveLR = -1;
if (MiniKeyHeld("right")) moveLR = 1;
if (MiniKeyPress("pause") &amp;&amp; global.miniDanmakuPause == 0)
{
    instance_create(0, 0, oMiniDanmakuPause);
}
global.miniDanmakuPause = 0;
//REPLACE WITH REAL KEYS

moveDir = point_direction(0, 0, moveLR, moveUD);
moveDis = point_distance(0, 0, moveLR, moveUD);

spd = 1;
if (moveDis &gt; 0)
{
    x += lengthdir_x(spd, moveDir);
    y += lengthdir_y(spd, moveDir);
}

if (oMiniDanmakuTitle.invert == 0)
{
    x = clamp(x, 12, 384 - 12);
    y = clamp(y, 12, 240 - 12);
}
else
{
    x = clamp(x, 12 - 150, 384 - 12 + 150);
    y = clamp(y, 12 - 150, 240 - 12 + 150);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMiniDanmakuBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
audio_play_sound(mMiniDanmakuCrash, 10, 0);
global.miniDanmakuPause = 0;
instance_create(0, 0, oMiniDanmakuExplode);
instance_destroy();

//room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (oMiniDanmakuTitle.invert == 0) image_blend = c_white;
else image_blend = c_black;
ox = global.miniX + (round(x) * global.miniScale);
oy = global.miniY + (round(y) * global.miniScale);
os = global.miniScale;
draw_sprite_ext(sMiniDanmakuShip, image_index, ox, oy, os, os, image_angle, image_blend, image_alpha);

//
alp = image_alpha / 3;
draw_sprite_ext(sMiniDanmakuShip, image_index + 0, ox + os, oy + 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuShip, image_index + 0, ox - os, oy - 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuShip, image_index + 0, ox - 0, oy + os, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuShip, image_index + 0, ox - 0, oy - os, os, os, image_angle, image_blend, alp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
textTitle = "CHOOSE A METHOD OF ATTACK";
textTop = textTitle;

cRed = make_color_rgb(255 - 16, 16, 16);
cYellow = make_color_rgb(255 - 16, 255 - 16, 16);
cBlue = make_color_rgb(16, 16, 255 - 16);

hw = 160; //hand width
handX[0] = -64;
handY[0] = global.miniHeight / 2;
handX[1] = global.miniWidth + hw;
handY[1] = global.miniHeight / 2;

event_user(0);

paperTitle = "Good Brew Bi-Weekly";

paperX = global.miniWidth / 2;
paperY = global.miniHeight / 2;
paperY += 2 * global.miniScale;

scoopNam[0] = "FLIM";
scoopNam[1] = "FLAM";
scoopNam[2] = "SCAM";
scoopMax = 3;
scoopDo = floor(random(3));
//scoopName = scoopNam[];
//scoopTitle = scoopTitl[scoopDo];
scoopSelect = floor(random(1));

boxTex[0] = "?";
boxTex[1] = "?!?";
boxTex[2] = "!!!";
boxTex[3] = "!";
boxTex[4] = ";^)";
boxTex[5] = "...";
boxTex[6] = "BUY";
boxTex[7] = "YES";
boxTex[8] = "NO";
boxText = boxTex[floor(random(9))];
//paperX = 0; paperY = 0;

textWrg[0] = "GET A CLUE!";
textWrg[1] = "TRY AGAIN!";
textWrg[2] = "NOT A CHANCE!";

textRgt[0] = "GOOD ON YOU, MATE!";
textRgt[1] = "RIGHT ON!";
textRgt[2] = "YOU'RE THE BEST!";

textWrong = textWrg[floor(random(3))];
textRight = textRgt[floor(random(3))];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keys
if (MiniKeyPress("cancel")) { Minigame("stop"); instance_destroy(); }

if (state == 0)
{
    if (MiniKeyPress("left"))
    {
        scoopSelect -= 1;
        if (scoopSelect &lt; 0) scoopSelect = scoopMax - 1;
    }
    if (MiniKeyPress("right"))
    {
        scoopSelect += 1;
        if (scoopSelect &gt;= scoopMax) scoopSelect = 0;
    }
    
    if (MiniKeyPress("action"))
    {
        state = 1;
    }
}
else if (state == 1)
{
    handX[0] -= dt() * 10;
    if (handX[0] &lt;= -hw) { handX[0] = -hw; state = 2; }
}
else if (state == 2)
{
    handX[0] += dt() * 20;
    handX[1] -= dt() * 20;
    if (handX[0] &gt; -2)
    {
        state = 3;
        did = 0;
        if (scoopDo == scoopSelect) textTop = "DRAW";
        else if (scoopSelect == 0 &amp;&amp; scoopDo == 1) { did = 1; textTop = "YOU FLIMMED THE FLAM WITH SUCCESS"; }
        else if (scoopSelect == 0 &amp;&amp; scoopDo == 2) { did = -1; textTop = "YOU GOT SCAMMED BIG TIME"; }
        else if (scoopSelect == 1 &amp;&amp; scoopDo == 0) { did = -1; textTop = "YOU WERE FLIMMED"; }
        else if (scoopSelect == 1 &amp;&amp; scoopDo == 2) { did = 1; textTop = "YOU AUTHORITATIVELY FLAMMED THE SCAM"; }
        else if (scoopSelect == 2 &amp;&amp; scoopDo == 0) { did = 1; textTop = "YOU EXECUTED THE SCAM PERFECTLY"; }
        else if (scoopSelect == 2 &amp;&amp; scoopDo == 1) { did = -1; textTop = "YOU WERE FLAMMED BEYOND RECOGNITION"; }
        
        if (did == -1) audio_play_sound(mMiniWrong, 10, 0);
        if (did == 1) audio_play_sound(mMiniRight, 10, 0);
    }
}
else if (state == 3)
{
    if (MiniKeyPress("action"))
    {
        //room_goto(rMiniSelect);
        instance_destroy();
        instance_create(0, 0, oMini10Select);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset game
state = 0;
paperScl = 0;
paperRot = 0;
paperRotSpd = (10 + random(2)) * choose(1, -1);
paperRotDes = - 1 + random(2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
ds = global.miniScale;
//draw_sprite_ext(sMiniScoop, 0, paperX * global.miniScale, paperY * global.miniScale, ds, ds, paperRot, c_white, 1);

//Blue border
draw_set_color(cBlue);
draw_rectangle(global.miniX, global.miniY, global.miniX + global.miniWidthS, global.miniY + (17 * global.miniScale), 0);

draw_set_color(c_white);
draw_set_font(CourierNew12);
draw_set_halign(1);
draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, textTop, global.miniScale, global.miniScale, 0);
draw_set_font(CourierNew24b);
draw_set_valign(1);
if (state == 0)
{
    
    draw_set_color(cRed);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY + (global.miniHeightS / 2), scoopNam[scoopSelect], global.miniScale, global.miniScale, 0);
    draw_set_color(c_white);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2) - (64 * global.miniScale), global.miniY + (global.miniHeightS / 2), "&lt;", global.miniScale, global.miniScale, 0);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2) + (64 * global.miniScale), global.miniY + (global.miniHeightS / 2), "&gt;", global.miniScale, global.miniScale, 0);
    draw_set_valign(0);
    draw_set_halign(0);
    
}
scr_font(CourierNew12, c_white, 0, 0);

draw_sprite_ext(sMiniFlim, scoopSelect, global.miniX + (handX[0] * ds), global.miniY + (handY[0] * ds), ds, ds, 0, c_white, 1);
draw_sprite_ext(sMiniFlim, scoopDo, global.miniX + (handX[1] * ds), global.miniY + (handY[1] * ds), -ds, ds, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>120,100</point>
    <point>120,120</point>
  </PhysicsShapePoints>
</object>

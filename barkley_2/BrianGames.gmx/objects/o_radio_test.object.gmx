<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEffectDraw</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
direction = random(360);
speed = 3;
arc = 90;
alp = 1;
alpSpd = 1 / 45;
didHit = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision triangle
if (didHit == 1) exit;
global.tx0 = xstart;
global.ty0 = ystart;
//direction, point_distance(xstart, ystart, x, y)
dir = direction - (arc / 2);
dis = point_distance(xstart, ystart, x, y);
global.tx1 = xstart + lengthdir_x(dis, dir);
global.ty1 = ystart + lengthdir_y(dis, dir);
dir = direction + (arc / 2);
global.tx2 = xstart + lengthdir_x(dis, dir);
global.ty2 = ystart + lengthdir_y(dis, dir);
global.tObj = id;

with (o_enemy_test)
{
    if (scr_collision_tri(x, y, global.tx0, global.ty0, global.tx1, global.ty1, global.tx2, global.ty2))
    {
        //shake = 2;
        if (confuseKid == -999) { shake = 2; confuseKid = instance_create(x, y - 40, o_confuse_swirl); confuseKid.dad = id; }
        with (global.tObj) didHit = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
draw_set_alpha(alp);
draw_set_color(c_fuchsia);
if (true)
{
    draw_arc(xstart, ystart, arc, direction, point_distance(xstart, ystart, x, y));
}
else
{
    dir = direction - (arc / 2);
    dis = point_distance(xstart, ystart, x, y);
    _dx0 = xstart + lengthdir_x(dis, dir);
    _dy0 = ystart + lengthdir_y(dis, dir);
    dir = direction + (arc / 2);
    _dx1 = xstart + lengthdir_x(dis, dir);
    _dy1 = ystart + lengthdir_y(dis, dir);

    draw_set_alpha(draw_get_alpha() * .33);
    draw_line_width(_dx0, _dy0, _dx1, _dy1, 5);
    draw_set_alpha(draw_get_alpha() * 3);
    draw_set_alpha(draw_get_alpha() / 2);
    draw_line_width(_dx0, _dy0, _dx1, _dy1, 3);
    draw_set_alpha(draw_get_alpha() * 2);
    draw_line(_dx0, _dy0, _dx1, _dy1);
}
draw_set_alpha(1);
alp -= alpSpd;
if (alp &lt;= 0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

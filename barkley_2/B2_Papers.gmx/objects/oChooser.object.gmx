<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
wid = 1152;
hei = 720;
window_set_size(wid, hei);
surface_resize(application_surface, wid, hei);
window_set_position((display_get_width() / 2) - (wid / 2), (display_get_height() / 2) - (hei / 2));



// Get rooms
row = 10;
dslRoom = ds_list_create();
for (i = 0; i &lt; 1000; i += 1)
{
    if (room_exists(i))
    {
        if (i != rInit &amp;&amp; i != rChooser) ds_list_add(dslRoom, i);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
draw_set_alpha(1);
draw_set_color(c_black);
rowWid = 256;
rowHei = 36;
drx = 0;
dry = 0;
for (i = 0; i &lt; ds_list_size(dslRoom); i += 1)
{
    draw_sprite_ext(s1x1, 0, drx, dry, rowWid, rowHei, 0, c_black, 1);
    draw_sprite_ext(s1x1, 0, drx + 1, dry + 1, rowWid - 2, rowHei - 2, 0, c_white, 1);
    if (scr_mouse_rect(drx, dry, drx + rowWid - 1, dry + rowHei - 1))
    {
        draw_sprite_ext(s1x1, 0, drx + 1, dry + 1, rowWid - 2, rowHei - 2, 0, c_yellow, 1);
        if (mouse_check_button(mb_left)) room_goto(dslRoom[| i]);
    }
    draw_set_color(c_black);
    scr_font(global.fn_1, c_white, 1, 1);
    draw_text_transformed(drx + (rowWid / 2), dry + (rowHei / 2), room_get_name(dslRoom[| i]), 2, 2, 0);
    dry += rowHei;
    if (dry &gt; 400)
    {
        dry = 0;
        drx += rowWid;
    }
}
scr_font(global.fn_1, c_white, 0, 0);
draw_text_transformed(4, room_height - 40, "Press F12 at any time to return to this menu", 2, 2, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

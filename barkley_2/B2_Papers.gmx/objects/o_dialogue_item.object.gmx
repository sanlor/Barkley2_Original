<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create

givTxt = "Would you like to give this note?";

couRet = 0; //for counting the blink
bob = 0;
spd = .5; //1 seconds
givPct = 0;
event = NULL;

givAct = 1;
givSel = 0;
givExe = -1;
givExt = 0;

givWid = 384 + 1; //to be safe add 1
givHov[0] = 0;
givHov[1] = 1;
givX[0] = x + floor(givWid / 2) + 10 - 3;
givX[1] = x + floor(givWid / 2) - 10 - 81 + 2;

butHilCol = make_color_rgb(48, 52, 45);
butTxtCol = make_color_rgb(255, 202, 19);
butSpd = 0.15;

// fonts
//global.fn_1 = font_add_sprite(s_fn1, ord(" "), 1, -1); //was 0 spacing
//global.fn_2 = font_add_sprite(s_fn2, ord(" "), 1, 0); //was 0 spacing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step


givPct += dt_sec() / spd;
givPct = clamp(givPct, 0, 1);
if (givPct &lt;= 0 &amp;&amp; spd &lt; 0)
{
    //if (event != NULL) { scr_event_advance(event); }
    //instance_destroy();
    givAct = 0;
}

if (givExt) exit;
if (givPct &gt;= 1 &amp;&amp; spd &gt; 0)
{
    var confirm_pressed = scr_input_check_held(KEYID_DIALOGUE, PLAYER1) or 
                     (scr_input_check_held(KEYID_ACTION, PLAYER1) and 
                      global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE);
    if (confirm_pressed) givExe = 1;
}


if (global.keyinput_type == KEYINPUT_GAMEPAD)
{
    if (MiniKeyPress("left") || MiniKeyPress("right"))
    {
        if (givSel == 0) givSel = 1; else givSel = 0;
    }
    if (MiniKeyPress("action"))
    {
        if (givSel == 1) givExe = 0; else givExe = 1;
    }
}

if (givExe == 0)
{
    givExe = -1;
    givExt = 1;
    with (oNote) { but = 0; event_user(0); }
    spd = -spd;
}
else if (givExe == 1)
{
    givExe = -1;
    givExt = 1;
    spd = -spd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

pctBgn = min(givPct * 2, 1);
pctTxt = clamp((givPct * 2) - 1, 0, 1);

draw_sprite_ext(s1x1, 0, view_xview[0], view_yview[0], 384, 240, 0, c_black, 0.75 * pctBgn);

y = 240 / 2;
givHei = (2 * 12) + 44; //was (4 * 12) + 44;
givHei -= 3; //gz add
givHei = round(givHei * pctBgn);
y -= givHei / 2;

x = view_xview[0];
y += view_yview[0];
x = round(x);
y = round(y);

draw_spr_tiled(x, y, x + wid, y + givHei, global.dialogBG, 0, 0.75 * pctBgn);

draw_set_valign(1);
draw_set_halign(0);
draw_set_font(global.fn_1);
draw_set_alpha(pctTxt);
draw_set_color(c_white);
txtWid = string_width_ext(givTxt, -1, 280);
draw_text_ext(x + floor(givWid / 2) - floor(txtWid / 2), y + round(givHei * .35), givTxt, -1, 280);
draw_set_alpha(1);
draw_set_valign(0);

dy = y + round(givHei * .61);
if (global.keyinput_type != KEYINPUT_GAMEPAD) givSel = -1;
for (i = 0; i &lt; 2; i += 1) 
{
    var hil = scr_mouse_rect(givX[i], dy, givX[i] + 81, dy + 17);
    if (hil) givSel = i;
    if (MiniKeyPress("action") &amp;&amp; hil) 
    {
        if (givSel == 1) givExe = 0; else givExe = 1;
    }
    if (givSel == i) givHov[i] += dt_sec() / butSpd; else givHov[i] -= dt_sec() / butSpd;
    givHov[i] = clamp(givHov[i], 0, 1);
    // Button
    if (givSel == i) draw_sprite_ext(sButtonPapers, 1, givX[i], dy, 1, 1, 0, butHilCol, givHov[i] * pctTxt);
    draw_sprite_ext(sButtonPapers, 5 - i, givX[i], dy, 1, 1, 0, merge_color(c_white, butTxtCol, givHov[i]), pctTxt);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
if (view_enabled)
{
    wid = 1536;
    hei = 768;
    window_set_size(wid, hei);
    surface_resize(application_surface, wid, hei);
    window_set_position((display_get_width() / 2) - (wid / 2), (display_get_height() / 2) - (hei / 2));
}

skp = 0;
surSav = -999;
fntX = 0;
fntY = 16;

notSel = 0; // For note list
notSub = 0;
objAmt = 0;
objSel = -1;
objLoc = -1;
i = 0;
objLef = ds_list_create();
objTop = ds_list_create();
objWid = ds_list_create();
objHei = ds_list_create();
objFnt = ds_list_create();
objTxt = ds_list_create();
objCol = ds_list_create();
objIn0 = ds_list_create();
objIn1 = ds_list_create();
objIn2 = ds_list_create();
objSt0 = ds_list_create();
objSt1 = ds_list_create();
objSt2 = ds_list_create();
/*
objLef[i] = 100;
objTop[i] = 100;
objWid[i] = 100;
objHei[i] = 100;
objFnt[i] = 0;
objTxt[i] = "Hello";
objCol[i] = c_white;*/

optAmt = 7;
optNam[0] = "Add";
optNam[1] = "Delete";
optNam[2] = "Text";
optNam[3] = "Save";
optNam[4] = "Load";
//optNam[5] = "Export";
optNam[5] = "Clear";
optNam[6] = "STRING";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get color
if (objSel == -1) exit;

drx = room_width - 64; dry = 0;
if (scr_mouse_rect(drx, dry, drx + 64, dry + 64))
{
    if (mouse_check_button(mb_left))
    {
        if (objSel != -1) objCol[| objSel] = draw_getpixel(mouse_x * 3, mouse_y * 3);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load from note data
skp = 1; event_user(5); skp = 0;
objSel = -1;
if (global.noteData[| notSel] != "")
{
    var arrCom = string_split(global.noteData[| notSel], "~");
    var arrSub = string_split(arrCom[0], "|");
    notSub = real(arrSub[2]);
    for (i = 1; i &lt; array_length_1d(arrCom); i += 1)
    {
        arrSub = string_split(arrCom[i], "|");
        //0 = STR| 1 = Text| 2 = x| 3 = y| 4 = font| 5 = col| 6 = alp
        ds_list_add(objLef, real(arrSub[2]) + 64 + 192);
        ds_list_add(objTop, real(arrSub[3]) + 16 + 120);
        ds_list_add(objWid, 100);
        ds_list_add(objHei, 100);
        ds_list_add(objFnt, real(arrSub[4]));
        ds_list_add(objTxt, arrSub[1]);
        ds_list_add(objCol, real(arrSub[5]));
        ds_list_add(objIn0, real(arrSub[6]));
        ds_list_add(objIn1, 0);
        ds_list_add(objIn2, 0);
        ds_list_add(objSt0, "");
        ds_list_add(objSt1, "");
        ds_list_add(objSt2, "");
    }
    if (i &gt; 1) objSel = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save string
var str = "";
str += "BAK|s_tnn_papers|" + string(notSub);
for (i = 0; i &lt; ds_list_size(objLef); i += 1)
{
    str += "~";
    //STR|Text|x|y|font|col|alp
    str += "STR|" 
    str += objTxt[| i] + "|";
    str += string(objLef[| i] - 64 - 192) + "|"; //192
    str += string(objTop[| i] - 16 - 120) + "|"; //120
    str += string(objFnt[| i]) + "|";
    str += string(objCol[| i]) + "|";
    str += string(objIn0[| i]);
}
get_string("Use CTRL+A and copy below into the Note script:", str);


exit;
/// Save
str = get_save_filename("note|*.not", "save.not");
if (str == "") exit;
fil = file_text_open_write(str);
file_text_write_string(fil, string(notSub)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objLef)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objTop)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objWid)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objHei)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objFnt)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objTxt)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objCol)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn0)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn1)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn2)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt0)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt1)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt2)); file_text_writeln(fil);
file_text_close(fil);
show_message("Saved.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear
if (skp == 0 &amp;&amp; show_question("Clear everything?") == 0) exit;
objSel = -1;
objLoc = -1;
notSub = 0;
objLef = ds_list_create();
objTop = ds_list_create();
objWid = ds_list_create();
objHei = ds_list_create();
objFnt = ds_list_create();
objTxt = ds_list_create();
objCol = ds_list_create();
objIn0 = ds_list_create();
objIn1 = ds_list_create();
objIn2 = ds_list_create();
objSt0 = ds_list_create();
objSt1 = ds_list_create();
objSt2 = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EXPORT
exit;
if (surface_exists(surSav) == 0) surSav = surface_create(384, 240);
surface_set_target(surSav);
draw_clear_alpha(c_black, 0);
draw_sprite(s_tnn_papers, notSub, 0, 0);
for (i = 0; i &lt; ds_list_size(objLef); i += 1)
{
    draw_set_font(global.dslFnt[| objFnt[| i]]);
    draw_set_alpha(objIn0[| i]);
    draw_set_color(objCol[| i]);
    drt = string_replace_all(objTxt[| i], "\", "#");
    draw_text(objLef[| i] - 64, objTop[| i] - 16, drt);
    draw_set_alpha(1);
}
surface_reset_target();
surface_save(surSav, "note.png");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load
str = get_open_filename("note|*.not", "save.not");
if (str == "") exit;
if (file_exists(str) == 0) exit;
fil = file_text_open_read(str);
notSub = real(file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objLef, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objTop, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objWid, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objHei, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objFnt, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objTxt, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objCol, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objIn0, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objIn1, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objIn2, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objSt0, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objSt1, file_text_read_string(fil)); file_text_readln(fil);
ds_list_read(objSt2, file_text_read_string(fil)); file_text_readln(fil);
file_text_close(fil);
objSel = -1;
objLoc = -1;
//show_message("Saved.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save
str = get_save_filename("note|*.not", "save.not");
if (str == "") exit;
fil = file_text_open_write(str);
file_text_write_string(fil, string(notSub)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objLef)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objTop)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objWid)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objHei)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objFnt)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objTxt)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objCol)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn0)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn1)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objIn2)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt0)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt1)); file_text_writeln(fil);
file_text_write_string(fil, ds_list_write(objSt2)); file_text_writeln(fil);
file_text_close(fil);
show_message("Saved.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text
if (objSel == -1) exit;
var str = get_string("Enter text...", objTxt[| objSel]);
if (str == "") exit;
ds_list_replace(objTxt, objSel, str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delete
if (objSel == -1) exit;
if (show_question("Delete this text?") == 0) exit;
ds_list_delete(objLef, objSel);
ds_list_delete(objTop, objSel);
ds_list_delete(objWid, objSel);
ds_list_delete(objHei, objSel);
ds_list_delete(objFnt, objSel);
ds_list_delete(objTxt, objSel);
ds_list_delete(objCol, objSel);
ds_list_delete(objIn0, objSel);
ds_list_delete(objIn1, objSel);
ds_list_delete(objIn2, objSel);
ds_list_delete(objSt0, objSel);
ds_list_delete(objSt1, objSel);
ds_list_delete(objSt2, objSel);
objSel = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add
objSel = ds_list_size(objLef);
i = objAmt;
ds_list_add(objLef, 100 + floor(random(32)));
ds_list_add(objTop, 100 + floor(random(32)));
ds_list_add(objWid, 100);
ds_list_add(objHei, 100);
ds_list_add(objFnt, 0);
ds_list_add(objTxt, "Hello");
ds_list_add(objCol, c_white);
ds_list_add(objIn0, 1);
ds_list_add(objIn1, 0);
ds_list_add(objIn2, 0);
ds_list_add(objSt0, "");
ds_list_add(objSt1, "");
ds_list_add(objSt2, "");

/*
objLef = ds_list_create();
objTop = ds_list_create();
objWid = ds_list_create();
objHei = ds_list_create();
objFnt = ds_list_create();
objTxt = ds_list_create();
objCol = ds_list_create();
objIn0 = ds_list_create();
objIn1 = ds_list_create();
objIn2 = ds_list_create();
objSt0 = ds_list_create();
objSt1 = ds_list_create();
objSt2 = ds_list_create();
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG
if (keyboard_check(vk_control))
{
    //Note("draw", 4, mouse_x, mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

// Color
drx = room_width - 64; dry = 0;
draw_sprite(sTempWheel, 0, drx, dry);

// Alpha
draw_set_font(global.fn_small);
draw_set_color(c_black);
dry += 64; drw = 63; drh = 8;
draw_text(drx + 16, dry + 1, "ALPHA");
dry += 8;
draw_rectangle_colour(drx, dry, drx + drw, dry + drh - 1, c_black, c_white, c_white, c_black, 0);
if (objSel != -1) draw_sprite_ext(s1x1, 0, drx + floor(drw * objIn0[| objSel]), dry, 1, drh, 0, c_fuchsia, 1);
if (scr_mouse_rect(drx, dry, drx + drw + 1, dry + drh))
{
    if (mouse_check_button(mb_left))
    {
        if (objSel != -1) objIn0[| objSel] = (1 / 64) * (mouse_x - drx);
    }
}
draw_set_color(c_fuchsia);
draw_set_halign(1);
draw_set_valign(1);
if (objSel != -1) draw_text(drx + (drw / 2) + 1, dry + (drh / 2), string(objIn0[| objSel]));
draw_set_halign(0);
draw_set_valign(0);

// Note list
draw_set_font(global.fn_5c);
draw_set_color(c_black);
dry = 82; drx = room_width - 64;
drw = 64; drh = 7;
for (i = 0; i &lt; ds_list_size(global.noteName); i += 1)
{
    if (scr_mouse_rect(drx, dry, drx + drw, dry + drh - 1)) hil = 1; else hil = 0;
    if (hil &amp;&amp; mouse_check_button(mb_left)) 
    { 
        mouse_clear(mb_left);
        if (show_question("Do you want to see the GAME version of " + global.noteName[| i] + "? This will clear the current note."))
        {
            notSel = i; 
            event_user(10); 
        }
    }
    if (notSel == i) col = c_yellow;
    else if (hil) col = c_ltgray;
    else col = c_gray; 
    draw_sprite_ext(s1x1, 0, drx, dry, drw, drh, 0, col, 1);
    draw_text(drx, dry, string_upper(global.noteName[| i]));
    dry += drh;
}
draw_set_color(c_white);
    
// Font list
drx = fntX; dry = fntY; drw = 64; drh = 16;
dry -= 16;
draw_sprite_ext(s1x1, 0, drx, dry, drw, drh, 0, c_black, 1);
draw_sprite_ext(s1x1, 0, drx + 1, dry + 1, drw - 2, drh - 2, 0, c_white, 1);
draw_set_font(global.fn_7ocs);
draw_set_halign(1);
draw_set_valign(1);
draw_text(drx + (drw / 2) + 1, dry + (drh / 2), "Font");
dry += 16;
draw_set_color(c_white);
for (var i = 0; i &lt; ds_list_size(global.dslNoteFont); i += 1)
{
    draw_sprite_ext(s1x1, 0, drx, dry, drw, drh, 0, c_black, 1);
    if (objSel != -1 &amp;&amp; i == objFnt[| objSel]) col = c_fuchsia; else col = c_gray;
    if (scr_mouse_rect(drx, dry, drx + drw, dry + drh - 1))
    {
        if (mouse_check_button_pressed(mb_left))
        {
            if (objSel != -1) objFnt[| objSel] = i;
        }
    }
    draw_sprite_ext(s1x1, 0, drx + 1, dry + 1, drw - 2, drh - 2, 0, col, 1);
    draw_set_font(global.dslNoteFont[| i]);
    draw_text(drx + (drw / 2) + 1, dry + (drh / 2), "AbcXyz");
    dry += drh;
}
draw_set_halign(0);
draw_set_valign(0);

if (keyboard_check_pressed(vk_left)) 
{ 
    notSub -= 1;
    if (notSub &lt; 0) notSub = sprite_get_number(s_tnn_papers) - 1;
}
if (keyboard_check_pressed(vk_right)) 
{ 
    notSub += 1;
    if (notSub &gt; sprite_get_number(s_tnn_papers) - 1) notSub = 0;
}
draw_sprite(s_tnn_papers, notSub, 64, 16);

dx = 64; dy = 0; drw = 34; drh = 10;
draw_set_font(global.fn_small);
draw_set_color(c_black);
for (var i = 0; i &lt; optAmt; i += 1)
{
    draw_sprite_ext(s1x1, 0, dx, dy, drw, drh, 0, c_black, 1);
    draw_sprite_ext(s1x1, 0, dx + 1, dy + 1, drw - 2, drh - 2, 0, c_white, 1);
    if (scr_mouse_rect(dx, dy, dx + drw, dy + drh - 1))
    {
        draw_sprite_ext(s1x1, 0, dx + 1, dy + 1, drw - 2, drh - 2, 0, c_yellow, 1);
        if (mouse_check_button_pressed(mb_left))
        {
            event_user(i);
        }
    }
    draw_set_halign(1);
    draw_set_valign(1);
    draw_text(dx + (drw / 2) + 1, dy + (drh / 2), optNam[i]);
    draw_set_halign(0);
    draw_set_valign(0);
    dx += drw;
}
draw_text(dx + 1, dy + 2, "L/R Arrow = Note");

// Objects
scl = 2;
if (mouse_check_button(mb_left) == 0) objLoc = -1;
for (i = 0; i &lt; ds_list_size(objLef); i += 1)
{
    if (i == objSel) draw_set_color(c_fuchsia); else draw_set_color(c_black);
    draw_circle(objLef[| i], objTop[| i], 2, 0);
    draw_set_font(global.dslNoteFont[| objFnt[| i]]);
    draw_set_alpha(objIn0[| i]);
    draw_set_color(objCol[| i]);
    drt = string_replace_all(objTxt[| i], "\", "#");
    draw_text(objLef[| i], objTop[| i], drt);
    if (scr_mouse_rect(objLef[| i] - scl, objTop[| i] - scl, objLef[| i] + scl, objTop[| i] + scl))
    {
        if (mouse_check_button(mb_left) &amp;&amp; objLoc == -1)
        {
            objSel = i;
            objLoc = i;
        }
    }
    if (objLoc == i)
    {
        objLef[| i] = mouse_x;
        objTop[| i] = mouse_y;
    }
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

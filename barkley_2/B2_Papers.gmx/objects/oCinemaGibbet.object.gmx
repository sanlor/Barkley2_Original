<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_wst_gibbet01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
ropeLength = 10;
ropeDestination = 10;
ropeDestinationSpeed = 24; // Pixels per second
ropeMax = 90;
ropeX = -24;
ropeY = -80;

cauldronX = -26;
cauldronY = 28;
cauldronSub = 0;
cauldronSubSpd = 10; // How many frames a second

hoopzWiggle = 0;
hoopzSub = 0;
hoopzSubSpd = 10;
hoopzX = ropeX - 15;

smokePerSecond = 10;
smokeCount = 0;

smkCol[0] = make_color_rgb(160, 125, 113);
smkCol[1] = make_color_rgb(105, 101, 112);
smkCol[2] = make_color_rgb(86, 81, 81);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_down)) ropeLength += 40 * dt_sec();
if (keyboard_check(vk_up)) ropeLength -= 40 * dt_sec();
if (keyboard_check(vk_left)) ropeDestination = 10;
if (keyboard_check(vk_right)) ropeDestination = ropeMax;
if (keyboard_check(vk_space)) hoopzWiggle = 1;
ropeLength = clamp(ropeLength, 0, ropeMax);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
// s_wst_rope01
// s_cts_hoopzCaptured - 29, 52
if (paused() == 0)
{
    cauldronSub += cauldronSubSpd * dt_sec();
    if (hoopzWiggle &gt; 0) hoopzSub += hoopzSubSpd * dt_sec();
    hoopzWiggle -= dt_sec();
    
    ropeLength = Goto(ropeLength, ropeDestination, ropeDestinationSpeed * dt_sec());
    if (ropeLength != ropeDestination) hoopzWiggle = 1;
    
    smokeCount += dt_sec();
    while (smokeCount &gt; 1 / smokePerSecond)
    {
        smokeCount -= 1 / smokePerSecond;
        Smoke("customcolor", smkCol[0], smkCol[1], smkCol[2]);
        obj = Smoke("puff keep", x + cauldronX - 10 + random(20) , y + cauldronY, 20 + random(6), 16 + random(8));
        Smoke("color", c_white);
    }
}

draw_sprite_ext(s_wst_gibbet01, 0, x, y, 1, 1, 0, c_white, 1);
draw_sprite_ext(s_wst_cauldron01, cauldronSub, x + cauldronX, y + cauldronY, 1, 1, 0, c_white, 1);
draw_sprite_part(s_wst_rope01, 0, 0, 0, 3, ropeLength, x + ropeX, y + ropeY);
draw_sprite_part(s_cts_hoopzCaptured, hoopzSub, 0, 0, 29, 52 - max(0, ropeLength - 40), x + hoopzX, y + ropeY - 6 + ropeLength);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

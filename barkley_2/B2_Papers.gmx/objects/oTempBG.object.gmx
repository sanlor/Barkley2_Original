<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wid = 1152;
hei = 720;
window_set_size(wid, hei);
surface_resize(application_surface, wid, hei);
window_set_position((display_get_width() / 2) - (wid / 2), (display_get_height() / 2) - (hei / 2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord("1")))
{
    if (instance_exists(oNote))
    {
        with (oNote) { but = 0; event_user(0); }
    }
    else Note("viewer");
}

if (keyboard_check_pressed(ord("2")))
{
    if (instance_exists(oNote))
    {
        with (oNote) { but = 0; event_user(0); }
    }
    else Note("select", "milagros");
}

if (keyboard_check_pressed(ord("3")))
{
    if (instance_exists(oNote))
    {
        with (oNote) { but = 0; event_user(0); }
    }
    else
    {
        creature = choose("Goofster", "Slender Man", "Drakescorned", "Sergal", "Geldrach", "Dire Juggler", "Hellmonster", "Mujahoudini");
        Note("gallery", creature);
    }
}

if (keyboard_check_pressed(ord("4")))
{
    for (i = 0; i &lt; ds_list_size(global.noteList); i += 1)
    {
        if (random(100) &lt; 50)
        {
            Note("take", ds_list_find_value(global.noteName, i));
        }
    }
}

if (keyboard_check_pressed(ord("5")))
{
    Note("clear");
}

if (keyboard_check_pressed(ord("6")))
{
    Note("take", "Completed Application");
}

if (keyboard_check_pressed(ord("7")))
{
    if (instance_exists(oNote))
    {
        with (oNote) { but = 0; event_user(0); }
    }
    else Note("identity");
}

if (keyboard_check_pressed(ord("8")))
{
    Note("include", "milagros", "Completed Application");
}

if (keyboard_check_pressed(ord("9")))
{
    view_xview[0] = 64;
    view_yview[0] = 64;
}

exit;

if (keyboard_check_pressed(ord("2")))
{
    obj = instance_create(0, 0, o_tnn_resume);
    obj.ansInd[0] = choose(0, 1, 2, 3);
    obj.ansInd[1] = choose(0, 1, 2, 3);
    obj.ansInd[2] = choose(0, 1, 2, 3);
    obj.ansInd[3] = choose(0, 1, 2, 3);
    obj.progress = 8;
    obj.offY = 0;
}

if (keyboard_check_pressed(ord("3")))
{
    obj = instance_create(0, 0, o_dialogue_item);
}

if (keyboard_check_pressed(ord("4")))
{
    Note("gallery", choose("Goofster", "Slender Man", "Drakescorned", "Sergal", "Geldrach", "Dire Juggler", "Hellmonster", "Mujahoudini"));
}

if (keyboard_check_pressed(ord("0")))
{
    with (oNote) { but = 0; event_user(0); }
    with (o_tnn_resume) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite2, 0, x, y);
draw_set_font(global.fn_small);
draw_set_color(c_white);
draw_set_halign(0);
draw_set_valign(0);
ysp = 10;
dx = 5;
dy = 5;
draw_text(dx, dy, '1 = Note Viewer'); dy += ysp;
draw_text(dx, dy, '2 = Note Giver'); dy += ysp;
draw_text(dx, dy, '3 = Art Gallery'); dy += ysp;
draw_text(dx, dy, '4 = Get random notes.'); dy += ysp;
draw_text(dx, dy, '5 = Remove all notes / exclusions.'); dy += ysp;
draw_text(dx, dy, '6 = Get Completed Application'); dy += ysp;
draw_text(dx, dy, '7 = Identity'); dy += ysp;
draw_text(dx, dy, '8 = Include Completed Application'); dy += ysp;
draw_text(dx, dy, 'Last given note: ' + Note("selected")); dy += ysp;

dx = 380;
dy = 5;
draw_set_halign(2);
draw_text(dx, dy, 'Notes in possession:'); dy += 14;
for (i = 0; i &lt; ds_list_size(global.noteList); i += 1)
{
    nam = ds_list_find_value(global.noteName, i);
    if (Note("have", nam))
    {
        draw_text(dx, dy, nam); dy += 14;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

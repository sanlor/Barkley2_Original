<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMenuUtility</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2610000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
global.utilityAlpha = 1;
Utility("init");
Utility("locals");
disableScan = 1; // Scan and Print removed
// NOTE: Zauber is removed too.

// ITEMS

newScript = "";
transitionTime = 0.1; // 1 second
transitionCount = transitionTime;
subscriptCreate = 0; // Sets to 1 on those that use it
alpOvr = 0; // For fade box
alpWar = 0; // Warning
alpTxt = "Are you sure you want to unbox Vidcon Vidcon Vidcon Vidcon Vidcon Vidcon?";
alpSel = 0; // 1 = yes, 0 = no
alpRes = -1; // Result of alp choice

alphaBG = 0.75;

didPress = 2; //for skipping first press on lvl up

state = 1;
paused(true);
o_curs.toggleCursor = false;
alphaBG = 0.5;

kid = -1;

for (i = 0; i &lt; 900; i += 1)
{
    for (h = 0; h &lt; 10; h += 1) 
    {
        menuText[i, h] = "";
        menuClick[i, h] = 0; //if 1, it's only clickable
    }
    menuObject[i] = -999;
    menuScript[i] = "-999";
    menuFocus[i] = "side";
}

menuText[2000, 0] = "";
menuText[2001, 0] = "";
menuText[2220, 0] = "";

menu = 0; //active menu
menuSelect = 0;

//Menu top, appears before all
menuTopText[0] = ""; 
menuTopLink[0] = 0;
menuTopSelect[0] = 0;
menuTops = 0;

//Menu objects
drawScript = "draw initial";
menuScript[1] = "draw status";
menuScript[2] = "draw guns";
menuScript[4] = "draw items";
menuScript[8] = "draw brain";
menuScript[20] = "draw guns bandolier"; // GUN A
menuScript[21] = "draw guns gunsbag"; // BAG
menuScript[22] = "draw guns smelt"; // SMELT
menuScript[23] = "draw guns reload"; // RELOAD
menuScript[24] = "draw guns breed"; // BREED
menuScript[80] = "draw brain level";
menuScript[81] = "draw brain vidcon"; // VIDCONS
menuScript[9] = "draw status"; // ???
menuScript[5] = "draw equip"; // Equip
menuScript[11] = "draw candy"; menuFocus[11] = "main"; // Candy

// 1 MENU DEEP
menuID = 11;
menuText[menuID, 0] = "Make"; menuLink[menuID, 0] = 110; menuClick[menuID, 0] = 1;

//0 MENU DEEP - First thing
menuID = 0;
menuText[menuID, 0] = "X114JAM9"; menuLink[menuID, 0] = 1; 
menuText[menuID, 1] = "L. Goose"; menuLink[menuID, 1] = 100; //Party
menuText[menuID, 2] = "Rittbomm"; menuLink[menuID, 2] = 100; //Party
menuText[menuID, 3] = "Cannibal"; menuLink[menuID, 3] = 100; //Party
menuText[menuID, 4] = "Unplug"; menuLink[menuID, 4] = 100; menuClick[menuID, 4] = 1;
menuText[menuID, 5] = "TEST"; menuLink[menuID, 5] = 100;
menuText[menuID, 6] = "TEST"; menuLink[menuID, 6] = 100;
menuText[menuID, 7] = "TEST"; menuLink[menuID, 7] = 100;
menuText[menuID, 8] = "TEST"; menuLink[menuID, 8] = 100;
menuText[menuID, 5] = ""; menuLink[menuID, 5] = 100;

//1 MENU DEEP - HOOPZ 
menuID = 1;
menuText[menuID, 0] = "Gun's";     menuLink[menuID, 0] = 2;
//menuText[menuID, 1] = "Status"; menuLink[menuID, 1] = 3;
menuText[menuID, 1] = "Candy";     menuLink[menuID, 1] = 11;
menuText[menuID, 2] = "Brain";     menuLink[menuID, 2] = 8; 
menuText[menuID, 3] = "Equipment"; menuLink[menuID, 3] = 5;
menuText[menuID, 4] = "Inventory"; menuLink[menuID, 4] = 4;
//menuText[menuID, 5] = "Zaubers";   menuLink[menuID, 5] = 6;
menuText[menuID, 5] = "DwarfNET";  menuLink[menuID, 5] = 7;
menuText[menuID, 6] = "Unplug";    menuLink[menuID, 6] = 100; menuClick[menuID, 6] = 1;


//1 MENU DEEP - ANY PARTY MEMBER
menuID = 100;
//menuText[menuID, 0] = "Status"; menuLink[menuID, 0] = 103;
menuText[menuID, 0] = "Items"; menuLink[menuID, 0] = 4;
menuText[menuID, 1] = "Equipment"; menuLink[menuID, 1] = 5;
menuText[menuID, 2] = "Zaubers"; menuLink[menuID, 2] = 6;
menuText[menuID, 3] = "Brain"; menuLink[menuID, 3] = 9;

//2 MENU DEEP - GUNS
menuID = 2;
menuText[menuID, 0] = "Bandolier"; menuLink[menuID, 0] = 20; menuFocus[20] = "main";
menuText[menuID, 1] = "Bag"; menuLink[menuID, 1] = 21; menuFocus[21] = "main";
menuText[menuID, 2] = "Smelt"; menuLink[menuID, 2] = 22 menuFocus[22] = "main";;
menuText[menuID, 3] = "Reload"; menuLink[menuID, 3] = 23;
menuText[menuID, 4] = "Breed"; menuLink[menuID, 4] = 24;
if (disableScan == 0) { menuText[menuID, 5] = "Print"; menuLink[menuID, 5] = 25; }

//3 MENU DEEP - BANDOLIER
menuID = 20;
menuText[menuID, 0] = "Rename"; menuLink[menuID, 0] = 200; menuScript[200] = "draw rename"; menuFocus[200] = "main";//add var to specify
if (disableScan == 0) { menuText[menuID, 1] = "Scan"; menuLink[menuID, 1] = 201; }

//4 MENU DEEP - GUN RENAME / SCAN
menuID = 200;
//menuText[menuID, 0] = "Rename"; menuLink[menuID, 0] = 2000; menuClick[menuID, 0] = 1;
if (disableScan == 0) { menuText[menuID, 1] = "Scan"; menuLink[menuID, 1] = 2001; menuClick[menuID, 1] = 1; }

//3 MENU DEEP - BAG
menuID = 21;
//menuText[menuID, 0] = "Select"; menuLink[menuID, 0] = 210;
menuText[menuID, 0] = "Fave"; menuLink[menuID, 0] = 210; menuClick[menuID, 0] = 1;
if (disableScan == 0) { menuText[menuID, 1] = "Scan"; menuLink[menuID, 1] = 211; menuClick[menuID, 1] = 1; }
menuText[menuID, 1] = "Promote"; menuLink[menuID, 1] = 212; menuClick[menuID, 1] = 0; menuScript[212] = "draw promote"; menuFocus[212] = "main";

//3 MENU DEEP - SMELT - LEFT TO SELECT
menuID = 22;
//menuText[menuID, 0] = "Select"; menuLink[menuID, 0] = 220;
menuText[menuID, 0] = "Current"; menuLink[menuID, 0] = 220; menuClick[menuID, 0] = 1;
menuText[menuID, 1] = "Empty"; menuLink[menuID, 1] = 222; menuClick[menuID, 1] = 1;//add var to specify
menuText[menuID, 2] = "Unfaves"; menuLink[menuID, 2] = 222; menuClick[menuID, 2] = 1;//add var to specify
menuText[menuID, 3] = "All"; menuLink[menuID, 3] = 222; menuClick[menuID, 3] = 1;//add var to specify

//4 MENU DEEP - SMELT CONFIRM
menuID = 222;
menuText[menuID, 0] = "Confirm"; menuLink[menuID, 0] = 2220; menuClick[menuID, 0] = 1;

//3 MENU DEEP - RELOAD - HOLD TO REFILL
menuID = 23;
menuText[menuID, 0] = "All"; menuLink[menuID, 0] = 230; menuClick[menuID, 0] = 2;
menuText[menuID, 1] = "TUNT"; menuLink[menuID, 1] = 230; menuClick[menuID, 1] = 2;
menuText[menuID, 2] = "WILM"; menuLink[menuID, 2] = 230; menuClick[menuID, 2] = 2;
menuText[menuID, 3] = "CORN"; menuLink[menuID, 3] = 230; menuClick[menuID, 3] = 2;
menuText[menuID, 4] = "IEJR"; menuLink[menuID, 4] = 230; menuClick[menuID, 4] = 2;
menuText[menuID, 5] = "HELP"; menuLink[menuID, 5] = 230; menuClick[menuID, 5] = 2;

//3 MENU BREED
menuID = 24;
menuText[menuID, 0] = textButtonEmpty; menuFocus[240] = "main"; menuLink[menuID, 0] = 240; //menuClick[menuID, 0] = 1;
menuText[menuID, 1] = textButtonEmpty; menuFocus[241] = "main"; menuLink[menuID, 1] = 241; //menuClick[menuID, 1] = 1;
menuText[menuID, 2] = textButtonBreed; menuFocus[242] = "main"; menuLink[menuID, 2] = 242; menuClick[menuID, 2] = 1;

menuID = 240; 
menuScript[menuID] = "draw breed select top"; menuText[menuID, 0] = "Select"; menuClick[menuID, 0] = 1;
menuID = 241;
menuScript[menuID] = "draw breed select bottom"; menuText[menuID, 0] = "Select"; menuClick[menuID, 0] = 1;

//2 MENU DEEP - STATUS
//menuID = 3;
//menuText[menuID, 0] = "HAS NONE"; menuLink[menuID, 0] = 30;

//2 MENU DEEP - ITEM
menuID = 4;
//menuText[menuID, 0] = "HAS NONE"; menuLink[menuID, 0] = 40;

//2 MENU DEEP - EQUIPMENT
menuID = 5;
menuScript[50] = "draw equip helmet"; menuText[menuID, 0] = "Helmet"; menuLink[menuID, 0] = 50;
menuScript[51] = "draw equip jerkin"; menuText[menuID, 1] = "Jerkin"; menuLink[menuID, 1] = 51; //add var to specify
//menuText[menuID, 2] = "Chips"; menuLink[menuID, 2] = 52;

//3 MENU DEEP - EQUIPMENT - EQUIP
menuFocus[50] = "main"; menuClick[50, 0] = 1; menuText[50, 0] = "Equip"; //menuLink[50, 0] = 500;
menuFocus[51] = "main"; menuClick[51, 0] = 1; menuText[51, 0] = "Equip"; //menuLink[51, 0] = 510;
menuText[52, 0] = "Equip"; menuLink[52, 0] = 520;

//2 MENU DEEP - ZAUBER
menuID = 6;
menuText[menuID, 0] = "W I P"; menuLink[menuID, 0] = 60;

//2 MENU DEEP - DWARFNET
menuID = 7;
menuText[menuID, 0] = "CONNECT"; menuLink[menuID, 0] = 70;

//2 MENU DEEP - BRAIN
menuID = 8;
menuText[menuID, 1] = "Level Up"; menuLink[menuID, 1] = 80; 
menuText[menuID, 0] = "Vidcons"; menuLink[menuID, 0] = 81; menuFocus[81] = "main";

//2 MENU DEEP - PARTY
menuID = 9;
menuText[menuID, 0] = "Vidcons"; menuLink[menuID, 0] = 81; 

//3 MENU DEEP - LEVEL UP
menuID = 80;
menuText[menuID, 0] = "Guts"; menuLink[menuID, 0] = 800; menuClick[menuID, 0] = 1;
menuText[menuID, 1] = "Luck"; menuLink[menuID, 1] = 800; menuClick[menuID, 1] = 1;
menuText[menuID, 2] = "Acrobatic"; menuLink[menuID, 2] = 800; menuClick[menuID, 2] = 1;
menuText[menuID, 3] = "Might"; menuLink[menuID, 3] = 800; menuClick[menuID, 3] = 1;
menuText[menuID, 4] = "Piety"; menuLink[menuID, 4] = 800; menuClick[menuID, 4] = 1;
menuText[menuID, 5] = "Confirm"; menuLink[menuID, 5] = 800; menuClick[menuID, 5] = 1;

//3 MENU DEEP - VIDCON
menuID = 81;
menuText[menuID, 0] = "Unbox"; menuLink[menuID, 0] = 810; menuClick[menuID, 0] = 1;
//menuText[menuID, 0] = "Page 1"; menuLink[menuID, 0] = 810; //add var to specify
//menuText[menuID, 1] = "Page 2"; menuLink[menuID, 1] = 810; //add var to specify
//menuText[menuID, 2] = "Page 3"; menuLink[menuID, 2] = 810; //add var to specify
//menuText[menuID, 3] = "Page 4"; menuLink[menuID, 3] = 810; //add var to specify

// FAKE STATUS - Disabled for now
cTint = c_lime;
tint = 0.25;
cText[0] = merge_color(make_color_rgb(255, 255, 255), cTint, tint);
cText[1] = merge_color(make_color_rgb(160, 160, 160), cTint, tint);
cText[2] = merge_color(make_color_rgb(96, 96, 96), cTint, tint);
cText[3] = merge_color(make_color_rgb(32, 32, 32), cTint, tint);
cBG[0] = merge_color(make_color_rgb(192, 192, 192), cTint, tint);
cBG[1] = merge_color(make_color_rgb(128, 128, 128), cTint, tint);
cBG[2] = merge_color(make_color_rgb(64, 64, 64), cTint, tint);
cBG[3] = merge_color(make_color_rgb(0, 0, 0), cTint, tint);

partyFace[0] = 0;
partyFace[1] = 1;
partyFace[2] = 2;
partyFace[3] = 3;

partyName[0] = "X114JAM9";
partyName[1] = "L. Goose";
partyName[2] = "Rittbomm";
partyName[3] = "Brain Cannibal";

partyClass[0] = "Cyberpilgrim";
partyClass[1] = "Blind Swordsman";
partyClass[2] = "Warrior Poet";
partyClass[3] = "Juggler";

partyHP[0] = 50; partyHPMax[0] = 55;
partyHP[1] = 107; partyHPMax[1] = 107;
partyHP[2] = 30; partyHPMax[2] = 60;
partyHP[3] = 20; partyHPMax[3] = 30;

partyWeight[0] = 17; partyWeightMax[0] = 25;
partyWeight[1] = 33; partyWeightMax[1] = 40;
partyWeight[2] = 30; partyWeightMax[2] = 30;
partyWeight[3] = 20; partyWeightMax[3] = 30;

// Go to menu
hover = 0;
menuTopText[menuTops] = menuText[menu, hover];
menuTopLink[menuTops] = menu; //menuLink[menu, hover];
menuTopSelect[menuTops] = hover;//menuSelect;
menu = menuLink[menu, hover];
menuSelect = 0;//menuTops + 1;
menuTops += 1;
event_user(10);
hover = -1;
// SET INSTANT
drawScript = newScript;
newScript = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restore things
scr_pause_unPause();
o_curs.toggleCursor = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cursor shift
if (global.keyinput_type != KEYINPUT_KEYBOARD_MOUSE)
{
    o_curs.x = 384;
    o_curs.y = 240;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delta update + Controls
Utility("step");

if (global.keyinput_type == KEYINPUT_GAMEPAD &amp;&amp; alpOvr &gt; 0)
{
    if (actionWait != 0) exit;
    if (Utility("key", "left") || Utility("key", "right")) alpSel = !alpSel;
    if (Utility("key", "action"))
    {
        alpRes = alpSel;
    }
    exit;
}

if (menuText[menu, menuSelect] != "")
{
    if (Utility("key", "up")) menuSelect -= 1;
    if (Utility("key", "down")) menuSelect += 1;
}

if (global.keyinput_type == KEYINPUT_GAMEPAD)
{
    can = 0;
    if (menuFocus[menu] == "main") can = 1;
    else if (global.utilityFocus == "side") can = 1;
    if (can &amp;&amp; Utility("key", "cancel") &amp;&amp; actionWait == 0)
    {
        if (menu == 0)
        {
            // UNPLUG
        }
        else Utility("go back");
    }
}

//Wrap selection
if (menuSelect &lt; 0) 
{
    for (i = 0; i &lt; 10; i += 1) if (menuText[menu, i] == "") break;
    menuSelect = i - 1;
    if (menuSelect &lt; 0) { menuSelect = 0; } //For single choicers
}
if (menuText[menu, menuSelect] == "") 
{
    menuSelect = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set to bando instant
menuTops = 0;
menu = 0;
repeat (3)
{
    hover = 0;
    menuTopText[menuTops] = menuText[menu, hover];
    menuTopLink[menuTops] = menu; //menuLink[menu, hover];
    menuTopSelect[menuTops] = hover;//menuSelect;
    menu = menuLink[menu, hover];
    menuSelect = 0;//menuTops + 1;
    menuTops += 1;
}
event_user(10);
hover = -1;
// SET INSTANT
drawScript = newScript;
newScript = "";

// BAD
gunSel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create menus
if (menuScript[menu] != "-999") 
{
    actionWait = 1;
    subscriptCreate = 0;
    newScript = menuScript[menu];
    //drawScript = menuScript[menu];
    global.utilityFocus = menuFocus[menu];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW SIDEBAR
//313, 31
dx = 312 - 3; //313;
dy = 12; //31;
dw = 56 + 3 + 3;
dh = 24;
spc = 24;
hover = -1;
scr_font(global.fn_1b, c_white, 1, 1);

// ROOT BUTTONS
for (i = 0; i &lt; menuTops; i += 1)
{
    if (Utility("mouse", dx, dy, dx + dw, dy + dh - 1) &amp;&amp; alpOvr == 0) hover = i;
    if (hover == i) hil = 1; else hil = 2;
    draw_set_color(global.utilityColor[hil]);
    draw_set_alpha(alphaBG / 2);
    if (hover == i) 
    {
        draw_set_color(merge_color(global.utilityColorHilight, c_gray, 0.25));
        draw_set_alpha(alphaBG);
    }
    draw_rectangle(dx, dy, dx + dw, dy + dh - 1, 0);
    Utility("text 1b", dx + round(dw / 2), dy + (dh / 2), menuTopText[i], hil, 1, 1);
    dy += dh;
}

// ROOT BUTTONS
if (hover != -1)
{
    if (Utility("key", "action") &amp;&amp; alpOvr == 0) Utility("go back", hover);
}

//CURRENT
hover = -1;
hil = 0;
if (global.keyinput_type != KEYINPUT_KEYBOARD_MOUSE) 
{
    if (global.utilityFocus == "side") hover = menuSelect;
}
var tst = 1;
if (transitionCount != transitionTime) tst = abs(1 - transitionCount / transitionTime);
for (i = 0; menuText[menu, i] != ""; i += 1)
{
    if (Utility("mouse", dx, dy, dx + dw, dy + dh - 1) &amp;&amp; alpOvr == 0) hover = i;
    if (hover == i) hil = 0; else hil = 1;
    draw_set_color(global.utilityColor[0]);
    draw_set_alpha((alphaBG / 2) * tst);
    if (hover == i) 
    {
        draw_set_color(global.utilityColorHilight);
        draw_set_alpha(alphaBG * tst);
    }
    draw_rectangle(dx, dy, dx + dw, dy + dh - 1, 0);
    var oua = Utility("alpha");
    Utility("alpha", tst);
    Utility("text 1b", dx + round(dw / 2), dy + (dh / 2), menuText[menu, i], hil, 1, 1);
    dy += (dh * tst);
}
draw_set_alpha(1);

// Clicking MENU button
if (hover != -1)
{
    if (menuClick[menu, hover] == 2 &amp;&amp; alpOvr == 0)
    {
        if (Utility("key", "action"))
        {
            //if (menuText[menu, hover] != "") doAction = menuText[menu, hover];
            relIni = hover;
        }
        else if (Utility("key", "action", 1))
        {
            if (relIni != -1) doAction = menuText[menu, hover];
        }
        else relIni = -1;
    }
    else if (Utility("key", "action") &amp;&amp; alpOvr == 0)
    {
        if (menuText[menu, hover] != "")
        {
            if (menuClick[menu, hover] == 1)
            {
                if (alpOvr == 0) doAction = menuText[menu, hover];
            }
            else
            {
                menuTopText[menuTops] = menuText[menu, hover];
                menuTopLink[menuTops] = menu; //menuLink[menu, hover];
                menuTopSelect[menuTops] = hover;//menuSelect;
                menu = menuLink[menu, hover];
                menuSelect = 0;//menuTops + 1;
                menuTops += 1;
                event_user(10);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
vx = view_xview[0];
vy = view_yview[0];

draw_spr_tiled(-1, 0, SCREEN_WIDTH + 1, SCREEN_HEIGHT, sBorderBG, 1, 1);
draw_sprite_ext(s1x1, 0, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 0, c_black, 1);
Utility("background", 0, 0, SCREEN_WIDTH / 8, SCREEN_HEIGHT / 8);

event_user(0); // Draw sidebar

if (menu == 0) Utility("draw initial"); else 
{
    if (newScript == "") Utility(drawScript);
    else
    {
        transitionCount -= dt_sec();
        var tst = transitionCount / transitionTime;
        transitionCount = max(0, transitionCount);
        Utility("input", 0);
        Utility("alpha", tst);
        draw_set_alpha(tst);
        Utility(drawScript);
        Utility("alpha", abs(tst - 1));
        draw_set_alpha(abs(tst - 1));
        Utility(newScript);
        if (transitionCount &lt;= 0)
        {
            transitionCount = transitionTime;
            drawScript = newScript;
            newScript = "";
            Utility("input", 1);
        }
        Utility("alpha", 1);
        draw_set_alpha(1);
    }
}

// Pop-Up / Warning Message Box
if (alpOvr &gt; 0 || alpWar &gt; 0)
{
    draw_sprite_ext(s1x1, 0, 0, 0, 15 + (36 * 8), 16 + (27 * 8), 0, c_black, alpOvr * 0.9);
    drw = 25; //35
    drh = 12; // 26
    
    Utility("background", 7, 9, drw, drh);
    Utility("grid", 5, 7, drw, drh);
    dry = 15 + (7 * 8) + ((drh / 2) * 8) - 16;
    if (alpWar &gt; 0) dry += (3 * 8) - 6;
    Utility("text 1b", 15 + (5 * 8) + ((drw / 2) * 8), dry, alpTxt, 1, 1, 1, (drw * 8) - 8);
    if (alpWar &gt; 0) // WARNING
    {
        if (MiniKeyPress("action") || MiniKeyPress("cancel")) 
        {
            if (actionWait == 0)
            {
                alpWar = 0;
                alpOvr = 0;
            }
        }
    }
    else if (alpOvr &gt; 0) // CHOOSE
    {
        drx = 15 + (7 * 8); dry = 16 + (15 * 8); drw = 10 * 8; drh = 3 * 8;
        if (scr_mouse_rect(drx, dry, drx + drw, dry + drh)) hil = 1; else hil = 0;
        if (hil &amp;&amp; global.keyinput_type != KEYINPUT_GAMEPAD &amp;&amp; MiniKeyPress("action")) alpRes = 1;
        if (global.keyinput_type == KEYINPUT_GAMEPAD &amp;&amp; alpSel == 1) hil = 1;
        Utility("grid", 7, 15, 10, 3, 3 + hil);
        Utility("text 1b", 15 + (7 * 8) + ((10 / 2) * 8), 16 + (15 * 8) + ((3 / 2) * 8), "Yes", !hil, 1, 1, (drw * 8) - 8);
        drx += 11 * 8;
        if (scr_mouse_rect(drx, dry, drx + drw, dry + drh)) hil = 1; else hil = 0;
        if (hil &amp;&amp; global.keyinput_type != KEYINPUT_GAMEPAD &amp;&amp; MiniKeyPress("action")) alpRes = 0;
        if (global.keyinput_type == KEYINPUT_GAMEPAD &amp;&amp; alpSel == 0) hil = 1;
        Utility("grid", 18, 15, 10, 3, 3 + hil);
        Utility("text 1b", 15 + (18 * 8) + ((10 / 2) * 8), 16 + (15 * 8) + ((3 / 2) * 8), "No", !hil, 1, 1, (drw * 8) - 8);
    }
}

with (oCinemaFusion) event_user(10);
draw_sprite_ext(sMenuUtility, 0, vx, vy, image_xscale, image_yscale, 0, merge_color(image_blend, c_black, borderBlackness), image_alpha);
if (instance_exists(oCinemaFusion)) exit;
// Draw sidebar hilight
if (global.utilityFocus == "main" || global.utilityFocus == "side")
{
    if (global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE) exit;
    var col = merge_color(global.utilityColor[3], c_black, 0.1);
    var alp = 0.75;
    var tim = 8;
    var drx = 11;
    var dry = 12;
    var drw = 289;
    var drh = 216;
    if (global.utilityFocus == "side")
    {
        drx = 309;
        drw = 63;
    }
    for (i = 1; i &lt; tim; i += 1)
    {
        draw_sprite_ext(s1x1, 0, drx - i + 1, dry - i, drw + (i * 2) - 1, 1, 0, col, abs(((1 / tim) * i) - 1) * alp);
        draw_sprite_ext(s1x1, 0, drx - i, dry + drh + i, drw + (i * 2) + 1, 1, 0, col, abs(((1 / tim) * i) - 1) * alp);
    }
    for (i = 1; i &lt; tim; i += 1)
    {
        draw_sprite_ext(s1x1, 0, drx - i, dry - i, 1, drh + (i * 2), 0, col, abs(((1 / tim) * i) - 1) * alp);
        draw_sprite_ext(s1x1, 0, drx + drw + i, dry - i, 1, drh + (i * 2), 0, col, abs(((1 / tim) * i) - 1) * alp);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

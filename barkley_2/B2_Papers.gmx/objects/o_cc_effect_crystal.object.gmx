<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup stuff //
interval = 2.5; // then .2 + random .2 = 1 to 3 particles

parAlp[0] = 0;
parAlp[1] = 0.25;
parAlp[2] = 0;
parCol[0] = make_color_rgb(250, 250, 250);
parCol[1] = make_color_rgb(230, 230, 230);

dslParX = ds_list_create();
dslParY = ds_list_create();
dslParLif = ds_list_create();
dslParLifOrg = ds_list_create();
dslParSpd = ds_list_create();
dslParDir = ds_list_create();
dslParDirInc = ds_list_create();
dslParSiz = ds_list_create();
dslParSizInc = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy lists
ds_list_destroy(dslParX);
ds_list_destroy(dslParY);
ds_list_destroy(dslParLif);
ds_list_destroy(dslParLifOrg);
ds_list_destroy(dslParSpd);
ds_list_destroy(dslParDir);
ds_list_destroy(dslParDirInc);
ds_list_destroy(dslParSiz);
ds_list_destroy(dslParSizInc);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Interval //
if (instance_exists(o_cc_wizard))
{
    if (interval &gt; 0)
    {
        interval -= dt_sec();
        if (interval &lt;= 0) { event_user(0); interval = irandom(0.1) + 0.15; }
    }
    event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update particles
for (var i = 0; i &lt; ds_list_size(dslParX); i += 1)
{
    dslParX[| i] += lengthdir_x(dslParSpd[| i] * dt_sec(), dslParDir[| i]);
    dslParY[| i] += lengthdir_y(dslParSpd[| i] * dt_sec(), dslParDir[| i]);
    dslParSiz[| i] += dslParSizInc[| i] * dt_sec();
    dslParDir[| i] += dslParDirInc[| i] * dt_sec();
    dslParLif[| i] -= dt_sec();
    if (dslParLif[| i] &lt;= 0)
    {
        ds_list_delete(dslParX, i);
        ds_list_delete(dslParY, i);
        ds_list_delete(dslParLif, i);
        ds_list_delete(dslParLifOrg, i);
        ds_list_delete(dslParSpd, i);
        ds_list_delete(dslParDir, i);
        ds_list_delete(dslParDirInc, i);
        ds_list_delete(dslParSiz, i);
        ds_list_delete(dslParSizInc, i);
        i -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make smoke
ds_list_add(dslParX, 194 + irandom(4));
ds_list_add(dslParY, 190 + irandom(2));
var lif = 0.8 + random(1.9);
ds_list_add(dslParLif, lif);
ds_list_add(dslParLifOrg, lif);
ds_list_add(dslParSpd, (0.1 + random(0.15)) * 60);
ds_list_add(dslParDir, random(360));
ds_list_add(dslParDirInc, (3 + random(1)) * 60);
ds_list_add(dslParSiz, 0.25 + random(0.25));
ds_list_add(dslParSizInc, (0.1 + random(0.15)) * 60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
for (var i = 0; i &lt; ds_list_size(dslParX); i += 1)
{
    var drx = dslParX[| i];
    var dry = dslParY[| i];
    var drs = (1 / 8) * dslParSiz[| i];
    var drc = merge_colour(parCol[1], parCol[0], dslParLif[| i] / dslParLifOrg[| i]);
    if (dslParLif[| i] &lt; dslParLifOrg[| i] / 2) 
        var dra = lerp(parAlp[2], parAlp[1], dslParLif[| i] / (dslParLifOrg[| i] / 2));
    else
        var dra = lerp(parAlp[1], parAlp[0], (dslParLif[| i] - (dslParLifOrg[| i] / 2)) / (dslParLifOrg[| i] / 2));
    var alpWiz = 0;
    if (instance_exists(o_cc_wizard)) alpWiz = o_cc_wizard.alpha;
    draw_sprite_ext(s_effect_smog, 0, drx, dry, drs, drs, 0, drc, dra * alpWiz);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

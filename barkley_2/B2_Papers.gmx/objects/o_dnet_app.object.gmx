<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// setup apps //
// 0 = No app active //
// 1 = Rules //
// 2 = Pappy //
// 3 = Chat //
// 4 = Settings //
dnet_app = 0;
dnet_app_selected = 0;
activate_app = false;

// Titles //
title[0] = "Willkommen bei den DwarfNet Foren!";
title[1] = "DwarfNET Regeln und Vorschriften";
title[2] = "Pappys Midihutte";
title[3] = "Diskussion";
title[4] = "Konfiguration"
title[5] = "Trennen"

// Get the center point //
dnet_center = o_dnet_control.dnet_width / 2;

// Index // ------------------------------------------------------------------------------ //
// Buttons //
for (var i=0; i&lt;10; i+=1;)
    {
    button_hover_forum[i] = false;
    button_pressed_forum[i] = 0;
    button_hover_info[i] = false;
    button_pressed_info[i] = 0;
    info_playing[i] = false;
    }
    
// Subforum names //
subWid = 120;
subHei = 37;
subGap = 32;
subforum_name[0] = "Fehlersuche";
subforum_icon[0] = 15;
subforum_name[1] = "Edelsteine";
subforum_icon[1] = 22;
subforum_name[2] = "Frucht";
subforum_icon[2] = 2;
subforum_name[3] = "Glauben";
subforum_icon[3] = 23;
subforum_name[4] = "Politik";
subforum_icon[4] = 12;
subforum_name[5] = "Netz-comic"//"Geschichtsb√ºcher";
subforum_icon[5] = 21;
subforum_name[6] = "Videospiele";
subforum_icon[6] = 10;
subforum_name[7] = "Romantik";
subforum_icon[7] = 16;
subforum_name[8] = "Anzeigen";
subforum_icon[8] = 8;
subforum_name[9] = "Sport/LARP";
subforum_icon[9] = 14;

// Shit //
arrange_threads = false;
timer_goto_subforum = 0;
timer_play_clip = 0;
clip = "sn_dnet_subforum_dating";
goto_subforum = "Troubleshooting";
clip_index = 0;
gumpus = false;

// Button layout //
top_margin = 48 - 9;
left_margin = 48;
left_margin_2 = 232 - 16;
gap_inbetween = 8;

// Pappy // ---------------------------------------------------------------------------- //
pappy_mode = "idle";
pappy_index = 0;
pappy_index_min = 0;
pappy_index_max = 0;
pappy_button_set = 0;
play_pappy_intro = true;
timer_pappy_intro_begin = 5;
timer_pappy_animate = 5;

// Pappy timers //
timer_pappy_intro_begin = 0;
timer_pappy_intro = 0;

// Buttons for pappy //
button_hover_play = false;
button_hover_stop = false;
button_hover_next = false;
button_hover_previous = false;
button_pressed_play = 0;
button_pressed_stop = 0;
button_pressed_next = 0;
button_pressed_previous = 0;

// Play some music //
current_track = o_dnet_control.current_track;

// Tracks //
track[0] = "mus_dnet_track1";
track[1] = "mus_dnet_track2";
track[2] = "mus_dnet_track3";
track[3] = "mus_dnet_track4";
track[4] = "mus_dnet_track5";
track[5] = "mus_dnet_track6";
track[6] = "mus_dnet_track7";
track[7] = "mus_dnet_track8";
track[8] = "mus_dnet_track9";

// Track names //
track_name[0] = "apecrescendo";
track_name[1] = "cute";
track_name[2] = "doomwop";
track_name[3] = "dw_2";
track_name[4] = "hweru3";
track_name[5] = "killers2";
track_name[6] = "town_2";
track_name[7] = "wapbap_2";
track_name[8] = "weez_2";

// CHAT // ---------------------------------------------------------------------------- //
// Procedural messages //
word[0, 0] = "Hey";
word[0, 1] = "lol...";
word[0, 2] = "hey";
word[0, 3] = "where";
word[0, 4] = "what";
word[1, 0] = "Hey";
word[1, 1] = "what";
word[1, 2] = "snort";
word[1, 3] = "bingo";
word[1, 4] = "...";
word[2, 0] = "the haps";
word[2, 1] = "and snookie";
word[2, 2] = "palooza";
word[2, 3] = "is";
word[2, 4] = "";
word[3, 0] = "!!!";
word[3, 1] = ".";
word[3, 2] = "";
word[3, 3] = "NO!";
word[3, 4] = "A/S/L";

// Premades //
premade[0] = "happy columbus dayy everyne!";
premade[1] = "Hahahaha!";
premade[2] = "xaxaxaxaxaxaxaxa";
premade[3] = "Looking for gemstones, PM if have";
premade[4] = "c-h-u-p-s for sale dont call cops, PM";
premade[5] = "Hey gang, hows it goign?";
premade[6] = "welcome to HECK, lol jk";
premade[7] = "wheres the smoke? whers fire?";
premade[8] = "the time for games is now!!";
premade[9] = "A small boy missing in BrainCit, HELP!";
premade[10] = "Qwertyqwertyqwerty";
premade[11] = "mecharider twinturbo volume 6 now on sale";
premade[12] = "love is a scam dont strust it";
premade[13] = "hamburger s for all come to papa cafe";
premade[14] = "KILL ALL DUERGA!!";

// Timers //
timer_new_message = irandom(2) + 1;

// Other //
new_message = "";
new_color = c_white;
new_user_color = c_red;
new_user = "Yoloman"
users_online = 4995863;
timer_update = 10;
timer_cursor = 5;
cursor_flash = "";

// Users //
username[0] = "Galbatrox";
username[1] = "HANKO";
username[2] = "StegMui";
username[3] = "Kunahara";
username[4] = "xXxGokuxXx";
username[5] = "flip_boi666";
username[6] = "sweert1";
username[7] = "KamBodzek";
username[8] = "Palaryts";
username[9] = "c-dwarffo";
username[10] = "jesterGal11";
username[11] = "GameSpartaN";
username[12] = "Dontrell";
username[13] = "mizuki666";
username[14] = "-_-BAZ-_-";
username[15] = "Hemp Hog Jaze";
username[16] = "Jade SWAN_X";
username[17] = "ThriliDax";
username[18] = "22MopLord";
username[19] = "x_RUY_x";
username[20] = "dragonsfall01";

// Messages //
for (i=0; i&lt;11; i+=1;) 
    {
    user[i] = username[irandom(10)]
    message[i] = "";
    user_color[i] = c_red;
    color[i] = c_teal;
    }

// Hoopz shit //
hoopz_message_index = irandom(9);
hoopz_message_written = "";
hoopz_message_position = 1;
hoopz_message[0] = "Hey guys, lol whats up ? ";
hoopz_message[1] = "whats the haps, paps ";
hoopz_message[2] = "lol whats up ";
hoopz_message[3] = "Hey guys! ";
hoopz_message[4] = "Hows it going lol ";
hoopz_message[5] = "lol ";
hoopz_message[6] = "hi guys ";
hoopz_message[7] = "meets and greets gamers ";
hoopz_message[8] = "lol hi ";
hoopz_message[9] = "what up hombres lol ";

// Initial fill //
for (i=0; i&lt;10; i+=1;)
    {
     // New message is made //
    new_message = string(word[0, irandom(4)]) + " " + string(word[1, irandom(4)]) + " " + string(word[2, irandom(4)]) + " " + string(word[3, irandom(4)]);
    
    // New user //
    new_user = username[irandom(10)];
    
    // Reset timer //
    timer_new_message = irandom(20) + 5;
    
    // Move the users //
    user[0] = user[1];
    user[1] = user[2];
    user[2] = user[3];
    user[3] = user[4];
    user[4] = user[5];
    user[5] = user[6];
    user[6] = user[7];
    user[7] = user[8];
    user[8] = user[9];
    user[9] = user[10];
    user[10] = new_user;
    
    // Move the messages //
    message[0] = message[1];
    message[1] = message[2];
    message[2] = message[3];
    message[3] = message[4];
    message[4] = message[5];
    message[5] = message[6];
    message[6] = message[7];
    message[7] = message[8];
    message[8] = message[9];
    message[9] = message[10];
    message[10] = new_message;
    }
    
// Settings // ---------------------------------------------------------------------------- //
for (i=0; i&lt;5; i+=1;) button_hover_avatar[i] = false;
for (i=0; i&lt;6; i+=1;) button_hover_skin_system[i] = false;
    
// Exit // ---------------------------------------------------------------------------- //
button_hover_yes = false;
button_hover_no = false;

// Play goofy sound // // TODO move this to when you actiavte the disconnect app //
if !audio_is_playing_ext("sn_dnet_subforum_exit") then audio_play_sound_at_xy("sn_dnet_subforum_exit", false, 10, x, y);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate an app //
if activate_app = true then
    {
    // Which app  was it //
    activate_app = false;
    dnet_app = dnet_app_selected;
    
    // Title //
    if dnet_app &gt;= 0 then o_dnet_control.dnet_title_current = title[dnet_app];
    
    // Return to browsing //
    if dnet_app = -1 then
        {
        o_dnet_control.dnet_title_current = o_dnet_control.dnet_title_bamboozle;
        }
    
    // Home //
    if dnet_app = 0 then
        {
        Dnet("purge", o_dnet_post);
        Dnet("purge", o_dnet_poll);
        Dnet("purge", o_dnet_image);
        Dnet("purge", oDnetElement);
        Dnet("purge", o_dnet_thread);
        }
        
    // Pappy //
    if dnet_app = 2 then
        {
        timer_pappy_intro_begin = 2;
        }
    }

// Exit from apps //
if MiniKeyPress("cancel") then
    {
    // Clcikc out of an image attachment //
    if gumpus = true then
        {
        gumpus = false;
        }
    else
        {    
        // Threads exist, meaning you are at least past the index screen //
        if instance_exists(o_dnet_thread) then 
            {
            // Posts exist, meaning you are in a thread //
            if instance_exists(o_dnet_post) then 
                {
                // You don't have any apps open //
                if dnet_app = -1 then
                    {
                    Dnet("purge", o_dnet_post);
                    Dnet("purge", o_dnet_poll);
                    Dnet("purge", o_dnet_image);
                    Dnet("purge", oDnetElement);
                    o_dnet_control.dnet_title_current = o_dnet_control.dnet_title_previous;
                    o_dnet_control.slider_y = 0;
                    with o_dnet_thread visible = true;
                    }
                    
                // You had apps open //
                else 
                    {
                    dnet_app_selected = -1;
                    activate_app = true;
                    }
                }
                
            // Posts don't exist, meaning you are in a subforum //
            else 
                {
                // You have NO apps open //
                if dnet_app = -1 then
                    {
                    dnet_app_selected = 0;
                    activate_app = true;
                    o_dnet_control.dnet_title_current = o_dnet_control.dnet_title_previous;
                    }
                    
                // You have apps open //
                else 
                    {
                    dnet_app_selected = -1;
                    activate_app = true;
                    }
                }
            }
        else
            {
            // Go back from other apps //
            if dnet_app &gt;= 0 then
                {
                dnet_app_selected = 0;
                activate_app = true;
                }
            }
        }
    }

    
// Index //
if dnet_app = 0 then
    {
    // Hover buttons //
    for (var i=0; i&lt;5; i+=1;) 
        {
        // Forum buttons //
        button_hover_forum[i] = Dnet("pointer", x + left_margin, y + top_margin + i * (subGap + gap_inbetween), x + left_margin + subWid, y + top_margin + subHei + i * (subGap + gap_inbetween));
        button_hover_forum[i + 5] = Dnet("pointer", x + left_margin_2, y + top_margin + i * (subGap + gap_inbetween), x + left_margin_2 + subWid, y + top_margin + subHei + i * (subGap + gap_inbetween));
        
        // Info buttons //
        button_hover_info[i] = Dnet("pointer", x + left_margin - 26, y + top_margin+ i * (30 + gap_inbetween), x + left_margin - 2, y + top_margin + 30 + i * (30 + gap_inbetween));
        button_hover_info[i + 5] = Dnet("pointer", x + left_margin_2 - 26, y + top_margin + i * (30 + gap_inbetween), x + left_margin_2 - 2, y + top_margin + 30 + i * (30 + gap_inbetween));
        }
    
    // Go to a subforum //
    if MiniKeyPress("action") then
        {
        // Which button //
        for (var i=0; i&lt;10; i+=1;)
            {
            // Forum buttons //
            if button_hover_forum[i] = true then 
                {
                // Get forum index //
                switch (i)
                    {
                    case 0: goto_subforum = "Troubleshooting"; break;
                    case 1: goto_subforum = "Gemstones"; break;
                    case 2: goto_subforum = "Fruits"; break;
                    case 3: goto_subforum = "Religion"; break;
                    case 4: goto_subforum = "Politics"; break;
                    case 5: goto_subforum = "Webcomics"; break;
                    case 6: goto_subforum = "Vidcons"; break;
                    case 7: goto_subforum = "Dating"; break;
                    case 8: goto_subforum = "Ads"; break;
                    case 9: goto_subforum = "Sports"; break;
                    }
                    
                // Button flash //
                button_pressed_forum[i] = 1;
                
                // Goto forum //
                timer_goto_subforum = 1;
                }
            }
              
        // Which button //
        for (var i=0; i&lt;10; i+=1;)
            {
            // Info buttons //
            if button_hover_info[i] = true then 
                {               
                // Get info clip //
                switch (i)
                    {
                    case 0: clip = "sn_dnet_subforum_salutations"; break;
                    case 1: clip = "sn_dnet_subforum_gemstones"; break;
                    case 2: clip = "sn_dnet_subforum_fruit"; break;
                    case 3: clip = "sn_dnet_subforum_religion"; break;
                    case 4: clip = "sn_dnet_subforum_politix";break;
                    case 5: clip = "sn_dnet_subforum_webcomix"; break;
                    case 6: clip = "sn_dnet_subforum_vidcons"; break;
                    case 7: clip = "sn_dnet_subforum_dating"; break;
                    case 8: clip = "sn_dnet_subforum_ads"; break;
                    case 9: clip = "sn_dnet_subforum_ads"; break;
                    }
                    
                // Play info clip //
                timer_play_clip = 1;  
                clip_index = i;
                }    
            }
        }
    }
    
// Play clip //
if timer_play_clip &gt; 0 then
    {
    // Tick down //
    timer_play_clip -= dt();
    
    // Event //
    if timer_play_clip &lt;= 0 then
        {
        // Reset all sound clips //
        audio_stop_sound_ext("sn_dnet_subforum_salutations");
        audio_stop_sound_ext("sn_dnet_subforum_gemstones");
        audio_stop_sound_ext("sn_dnet_subforum_fruit");
        audio_stop_sound_ext("sn_dnet_subforum_religion");
        audio_stop_sound_ext("sn_dnet_subforum_politix");
        audio_stop_sound_ext("sn_dnet_subforum_webcomix");
        audio_stop_sound_ext("sn_dnet_subforum_vidcons");
        audio_stop_sound_ext("sn_dnet_subforum_dating");
        audio_stop_sound_ext("sn_dnet_subforum_ads");
        for (var i=0; i&lt;10; i+=1;) info_playing[i] = false;
        
        // Play sound //
        info_playing[clip_index] = true;
        audio_play_sound_at_xy(clip, false, 10, view_xview, view_yview);            
        audio_sound_gain_ext(global.dnet_music, 0.25, 10);
        }
    }
    
// Reset buttons //
for (var i=0; i&lt;10; i+=1;) if button_pressed_forum[i] &gt; 0 then button_pressed_forum[i] -= 1;
    
// Go to a subforum //
if timer_goto_subforum &gt; 0 then
    {
    // Tick down //
    timer_goto_subforum -= dt();
    
    // Event //
    if timer_goto_subforum &lt;= 0 then
        {
        // Create the thread objects //
        event_user(0);
        dnet_app = -1;
        }
    } 
    
// Pappy // -------------------------------------------------------------------------------------------------
if dnet_app = 2 then
    {
    // Hover //
    button_hover_play = Dnet("pointer", dnet_center - 38, 178, dnet_center - 23, 192);
    button_hover_stop = Dnet("pointer", dnet_center - 18, 178, dnet_center - 3, 192);
    button_hover_previous = Dnet("pointer", dnet_center + 2, 178, dnet_center + 17, 192); 
    button_hover_next = Dnet("pointer", dnet_center + 22, 178, dnet_center + 37, 192);
    
    // Reset effects //
    if button_pressed_play &gt; 0 then button_pressed_play -= dt();
    if button_pressed_stop &gt; 0 then button_pressed_stop -= dt();
    if button_pressed_previous &gt; 0 then button_pressed_previous -= dt();
    if button_pressed_next &gt; 0 then button_pressed_next -= dt();
    
    // Click //
    if MiniKeyPress("action") then
        {
        // Play //
        if button_hover_play = true then
            {
            // Play selected music //
            audio_stop_sound_ext(track[current_track]);
            audio_stop_sound_ext(global.dnet_music);
            global.dnet_music = track[current_track];
            audio_play_sound_at_xy(global.dnet_music, false, 10, x, y);
            o_dnet_control.timer_music_check = 10;
            
            // Shut down Pappy //
            audio_stop_sound_ext("sn_dnet_pappy");
            pappy_index_min = 0;
            pappy_index_max = 1;
            
            // Other //
            button_pressed_play = 2;
            }
            
        // Stop //
        else if button_hover_stop = true then
            {
            // Stop current track //
            audio_stop_sound_ext(track[current_track]);
            audio_stop_sound_ext(global.dnet_music);
            o_dnet_control.timer_music_check = -1;
    
            // Shut down Pappy //
            audio_stop_sound_ext("sn_dnet_pappy");
            pappy_index_min = 0;
            pappy_index_max = 0;
            
            // Other //
            button_pressed_stop = 2;
            }
            
        // Previous //
        else if button_hover_previous = true then
            {
            // Move to previous track //
            audio_stop_sound_ext(track[current_track]);
            if current_track &gt; 0 then current_track -= 1;
            else current_track = 8;
            audio_stop_sound_ext(global.dnet_music);
            global.dnet_music = track[current_track];
            audio_play_sound_at_xy(global.dnet_music, false, 10, x, y);
            o_dnet_control.timer_music_check = 10;
    
            // Shut down Pappy //
            audio_stop_sound_ext("sn_dnet_pappy");
            pappy_index_min = 0;
            pappy_index_max = 1;
            
            // Other //
            button_pressed_previous = 2;
            }
    
        // Next //
        else if button_hover_next = true then
            {
            // Move to previous track //
            audio_stop_sound_ext(track[current_track]);
            if current_track &lt; 8 then current_track += 1;
            else current_track = 0;
            audio_stop_sound_ext(global.dnet_music);
            global.dnet_music = track[current_track];
            audio_play_sound_at_xy(global.dnet_music, false, 10, x, y);
            o_dnet_control.timer_music_check = 10;
    
            // Shut down Pappy //
            audio_stop_sound_ext("sn_dnet_pappy");
            pappy_index_min = 0;
            pappy_index_max = 1;
            
            // Other //
            button_pressed_next = 2;
            } 
        }
    }
    
// Chat // ----------------------------------------------------------------------------------------------------
else if dnet_app = 3 then
    {
    // New messages //
    if timer_new_message &gt; 0 then
        {
        // Tick down //
        if timer_new_message &gt; 0 then timer_new_message -= 1;
        
        // Event //
        if timer_new_message &lt;= 0 then
            {
            // New message is made //
            var diceroll  = (irandom(100));
            if diceroll &gt;= 50 then new_message = string(word[0, irandom(4)]) + " " + string(word[1, irandom(4)]) + " " + string(word[2, irandom(4)]) + " " + string(word[3, irandom(4)]);
            else new_message = premade[irandom(14)];
            
            // New user //
            new_user = username[irandom(20)];
            
            // New color //
            new_color = c_teal;
            
            // New user color //
            new_user_color = c_red;
            
            // Reset timer //
            timer_new_message = irandom(20) + 5;
            
            // Move the users //
            user[0] = user[1];
            user[1] = user[2];
            user[2] = user[3];
            user[3] = user[4];
            user[4] = user[5];
            user[5] = user[6];
            user[6] = user[7];
            user[7] = user[8];
            user[8] = user[9];
            user[9] = user[10];
            user[10] = new_user;
            
            // Move the messages //
            message[0] = message[1];
            message[1] = message[2];
            message[2] = message[3];
            message[3] = message[4];
            message[4] = message[5];
            message[5] = message[6];
            message[6] = message[7];
            message[7] = message[8];
            message[8] = message[9];
            message[9] = message[10];
            message[10] = new_message;
            
            // Move the colors //
            color[0] = color[1];
            color[1] = color[2];
            color[2] = color[3];
            color[3] = color[4];
            color[4] = color[5];
            color[5] = color[6];
            color[6] = color[7];
            color[7] = color[8];
            color[8] = color[9];
            color[9] = color[10];
            color[10] = new_color;
            
            // Move the user colors //
            user_color[0] = user_color[1];
            user_color[1] = user_color[2];
            user_color[2] = user_color[3];
            user_color[3] = user_color[4];
            user_color[4] = user_color[5];
            user_color[5] = user_color[6];
            user_color[6] = user_color[7];
            user_color[7] = user_color[8];
            user_color[8] = user_color[9];
            user_color[9] = user_color[10];
            user_color[10] = new_user_color;
            }
        }
        
    // Type in //
    if MiniKeyPress("any") then
        {
        if string_length(hoopz_message_written) &lt; string_length(hoopz_message[hoopz_message_index]) then
            {
            hoopz_message_written = string_copy(hoopz_message[hoopz_message_index], 0, hoopz_message_position);
            hoopz_message_position += 1;
            }
            
        // Send reply //
        if string_length(hoopz_message_written) &gt;= string_length(hoopz_message[hoopz_message_index]) then
            {
            hoopz_message_index += irandom(7) + 1;
            if hoopz_message_index &gt; 9 then hoopz_message_index -= 9;
            hoopz_message_position = 0;
            color[10] = c_aqua;
            user_color[10] = c_purple;        
            user[10] = "Bballster69"
            message[10] = hoopz_message_written;
            hoopz_message_written = "";
            }
        }
        
    // Users //
    if timer_update &gt; 0 then
        {
        // Tick down //
        timer_update -= dt();
        
        // Event //
        if timer_update &lt;= 0 then
            {
            users_online = 4995863 + irandom(8);
            timer_update = 10;
            }
        }
      
    // Cursor flash //
    if timer_cursor &gt; 0 then
        {  
        // Tick down //
        timer_cursor -= dt();
        
        // Event //
        if timer_cursor &lt;= 0 then
            {
            timer_cursor = 5;
            if string(cursor_flash) = "" then cursor_flash = "~";
            else cursor_flash = "";
            }
        }
    }

// Settings // --------------------------------------------------------------------------------
else if dnet_app = 4 then
    {                
    // Change avatar //
    for (i=0; i&lt;5; i+=1;) button_hover_avatar[i] = Dnet("pointer", x + 10 + i * 40, y + 50, x + 45 + i * 40, y + 95);
    
    // Change skin //
    for (i=0; i&lt;6; i+=1;) button_hover_skin_system[i] = Dnet("pointer", x + 100 + i * 20, y + 115, x + 115 + i * 20, y + 130);
            
    // Click it //
    if MiniKeyPress("action") then
        {
        for (i=0; i&lt;5; i+=1;) if button_hover_avatar[i] = true then scr_quest_set_state("dwarfnet_avatar", i);
        for (i=0; i&lt;6; i+=1;) if button_hover_skin_system[i] = true then scr_quest_set_state("dwarfnet_skin_system", i);            
        }
    }
    
// Exit // -------------------------------------------------------------------------------------
else if dnet_app = 5 then
    {
    // Hover //
    button_hover_yes = Dnet("pointer", x + dnet_center - 35, y + 125, x + dnet_center - 10, y + 145);
    button_hover_no = Dnet("pointer", x + dnet_center + 10, y + 125, x + dnet_center + 35, y + 145);

    // Make your choice //
    if MiniKeyPress("action") then
        {
        if button_hover_yes = true then with o_dnet_control instance_destroy();
        if button_hover_no = true then 
            {
            if instance_exists(o_dnet_thread) then
                {
                dnet_app_selected = -1;
                activate_app = true;
                }
            else
                {
                dnet_app = 0;
                o_dnet_control.dnet_title_current = title[0];
                }
            }
        }   
    }
    

// Index info clips //
// Infos not playing //
if !audio_is_playing_ext("sn_dnet_subforum_salutations") then info_playing[0] = false;
if !audio_is_playing_ext("sn_dnet_subforum_gemstones") then info_playing[1] = false;
if !audio_is_playing_ext("sn_dnet_subforum_fruit") then info_playing[2] = false;
if !audio_is_playing_ext("sn_dnet_subforum_religion") then info_playing[3] = false;
if !audio_is_playing_ext("sn_dnet_subforum_politix") then info_playing[4] = false;
if !audio_is_playing_ext("sn_dnet_subforum_webcomix") then info_playing[5] = false;
if !audio_is_playing_ext("sn_dnet_subforum_vidcons") then info_playing[6] = false;
if !audio_is_playing_ext("sn_dnet_subforum_dating") then info_playing[7] = false;
if !audio_is_playing_ext("sn_dnet_subforum_ads") then info_playing[8] = false;
if !audio_is_playing_ext("sn_dnet_subforum_exit") then info_playing[9] = false;

// TODO // Connect this to some actual music management //
// Set music back to normal //
var info_check = 0;
for (i=0; i&lt;10; i+=1;)
    {
    if info_playing[i] = false then info_check += 1;
    if info_check = 10 then audio_sound_gain_ext(global.dnet_music, 1, 10);             
    }   
         
// Pappy intro //
if timer_pappy_intro_begin &gt; 0 then
    {
    // Tick down //
    timer_pappy_intro_begin -= dt();
    
    // Event //
    if timer_pappy_intro_begin &lt;= 0 then
        {
        // Do we even do this? //
        if play_pappy_intro = true then
            {
            play_pappy_intro = false;
            pappy_index_min = 2;
            pappy_index_max = 3;
            timer_pappy_intro = 80;
            audio_play_sound_at_xy("sn_dnet_pappy", false, 10, x, y);
            }
        }
    }
    
// Pappy talk intro //
if timer_pappy_intro &gt; 0 then
    {
    // Tick down //
    timer_pappy_intro -= dt();
    
    // Event //
    if timer_pappy_intro &lt;= 0 then  
        {
        pappy_index_min = 0;
        pappy_index_max = 0;
        }  
    }
    
// Pappy animate //
if timer_pappy_animate &gt; 0 then
    {
    // Tick down //
    timer_pappy_animate -= dt();
    
    // UPDATE //
    if timer_pappy_animate &lt;= 0 then
        {
        // DANE OR TALK SPEED //
        if pappy_index_max = 1 then timer_pappy_animate = 4;
        else if pappy_index_max = 3 then timer_pappy_animate = 3;
        else timer_pappy_animate = 1;
        
        // IMAGE INDEX + 1 //
        pappy_index += 1;
        
        // MIN MAX //
        if pappy_index &gt; pappy_index_max then pappy_index = pappy_index_min;
        if pappy_index &lt; pappy_index_min then pappy_index = pappy_index_min;
        }
    }




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to a subforum 
// Create subforum threads //
Dnet("forum", goto_subforum);

// Arrange threads //
arrange_threads = true;
if instance_exists(o_dnet_thread) and arrange_threads = true then
    {
    for (i=0; i&lt;instance_number(o_dnet_thread); i+=1;)
        {
        thread = instance_nearest(-1000, -1000, o_dnet_thread);
        if thread.x = -1000 then
            {
            thread.x = x;
            thread.y = i;
            }
        else arrange_threads = false;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dim the backdrop for the apps //
if dnet_app &gt; 0 then
    {
    draw_set_color(c_black);
    draw_set_alpha(0.65);
    draw_rectangle(-2, 35, 386, 242, false);
    }
    
// INDEX // -------------------------------------------------------------------------------------
if dnet_app = 0 then
    {
    // Draw buttons //
    for (var k=0; k&lt;5; k+=1;)
        {
        // Forum column one //
        if (button_pressed_forum[k] &gt; 0) sub = 2; else if (button_hover_forum[k]) sub = 1; else sub = 0;
        MiniSprite9(sDNETBorder0, sub, x + left_margin, y + top_margin + k * (subGap + gap_inbetween), subWid, subHei, 1, c_white, 1);
         
        // Subforum name //
        draw_sprite(sDNETThreadIcon, subforum_icon[k], x + left_margin + 5, y + top_margin + 4 + k * (subGap + gap_inbetween));
        DnetText(x + left_margin + (subWid / 2) + 14, y + top_margin + 13 + k * (subGap + gap_inbetween), subforum_name[k], 300, c_white, 1, fa_center, fa_top);
        
        // Info column one //
        if info_playing[k] = true then draw_sprite(s_dnet_button_info, 2 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
        else
            {
            if button_hover_info[k] = true then draw_sprite(s_dnet_button_info, 1 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
            else draw_sprite(s_dnet_button_info, 0 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
            }
        
        // Forum column two //    
        if (button_pressed_forum[k + 5] &gt; 0) sub = 2; else if (button_hover_forum[k + 5]) sub = 1; else sub = 0;
        MiniSprite9(sDNETBorder0, sub, x + left_margin_2, y + top_margin + k * (subGap + gap_inbetween), subWid, subHei, 1, c_white, 1);
            
        // Subforum name //
        draw_sprite(sDNETThreadIcon, subforum_icon[k + 5], x + left_margin_2 + 5, y + top_margin + 4 + k * (subGap + gap_inbetween));
        DnetText(x + left_margin_2 + (subWid / 2) + 14, y + top_margin + 13 + k * (subGap + gap_inbetween), subforum_name[(k+5)], 300, c_white, 1, fa_center, fa_top);        
        
        // Info column two //
        if info_playing[k + 5] = true then draw_sprite(s_dnet_button_info, 2 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin_2 - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
        else
            {
            if button_hover_info[k + 5] = true then draw_sprite(s_dnet_button_info, 1 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin_2 - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
            else draw_sprite(s_dnet_button_info, 0 + scr_quest_get_state("dwarfnet_skin_system") * 3, x + left_margin_2 - 24, y + top_margin + 8 + k * (subGap + gap_inbetween));
            }
        }
    }

// RULES // -------------------------------------------------------------------------------------
else if dnet_app = 1 then
    {
    // Rules backdrop //
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(view_xview, view_yview + 58, view_xview + 384, view_yview + 188, false);
    draw_set_alpha(1);
    
    // Rules title //
    draw_set_color(c_aqua);
    draw_set_halign(fa_center);
    draw_set_font(global.fn_1);
    draw_text(x + dnet_center, y + 68, "DwarfNET Regeln:");
    draw_set_color(c_red);
    draw_line(x + 8, y + 90, x + o_dnet_control.dnet_width - 8, y + 90);
    draw_line(x + 8, y + 88, x + o_dnet_control.dnet_width - 8, y + 88);
    
    // Rules themselves //
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_set_font(global.fn_dnet);
    draw_text(x + 16, y + 96, "1. Kein Hemd, keine Schuhe? Kein Problem...");
    draw_text(x + 16, y + 112, "2. Keine K√§mpfe ... bitte ...");
    draw_text(x + 16, y + 128, "3. Hab ein Problem? Nehmen Sie es zu Pappy.");
    draw_text(x + 16, y + 144, "4. Kein Hupen.");
    draw_text(x + 16, y + 160, "5. Kein Posting auf DwarfNET wenn Sie Cuchulainn!");
    }    
        
// PAPPY // -------------------------------------------------------------------------------------
else if dnet_app = 2 then
    {
    // Backdrop //
    draw_set_alpha(0.5);
    draw_set_color(c_black);
    draw_rectangle(x, y + 160, x + o_dnet_control.dnet_width, y + 200, false);
    
    // Track name //
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_text(x + dnet_center, y + 164, track_name[current_track]);
    draw_set_halign(fa_left);
    
    // Pappy himself //
    draw_sprite_ext(s_dnet_pappy, pappy_index, dnet_center, 110, 1, 1, 0, c_white, 1);
    
    // Buttons // PLAY //
    if button_pressed_play &gt; 0 then draw_sprite_ext(s_dnet_button_pappy, 2 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 38, y + 180, 1, 1, 0, c_white, 1);
    else
        {
        if button_hover_play = true then draw_sprite_ext(s_dnet_button_pappy, 1 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 38, y + 180, 1, 1, 0, c_white, 1);
        else draw_sprite_ext(s_dnet_button_pappy, 0 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 38, y + 180, 1, 1, 0, c_white, 1);
        }
        
    // Buttons // STOP //
    if button_pressed_stop &gt; 0 then draw_sprite_ext(s_dnet_button_pappy, 5 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 18, y + 180, 1, 1, 0, c_white, 1);
    else
        {
        if button_hover_stop = true then draw_sprite_ext(s_dnet_button_pappy, 4 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 18, y + 180, 1, 1, 0, c_white, 1);
        else draw_sprite_ext(s_dnet_button_pappy, 3 + o_dnet_control.pappy_button_set * 12, x + dnet_center - 18, y + 180, 1, 1, 0, c_white, 1);
        }
        
    // Buttons // PREVIOUS //
    if button_pressed_previous &gt; 0 then draw_sprite_ext(s_dnet_button_pappy, 8 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 2, y + 180, 1, 1, 0, c_white, 1);
    else
        {
        if button_hover_previous = true then draw_sprite_ext(s_dnet_button_pappy, 7 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 2, y + 180, 1, 1, 0, c_white, 1);
        else draw_sprite_ext(s_dnet_button_pappy, 6 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 2, y + 180, 1, 1, 0, c_white, 1);
        }
        
    // Buttons // NEXT //
    if button_pressed_next &gt; 0 then draw_sprite_ext(s_dnet_button_pappy, 11 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 22, y + 180, 1, 1, 0, c_white, 1);
    else
        {
        if button_hover_next = true then draw_sprite_ext(s_dnet_button_pappy, 10 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 22, y + 180, 1, 1, 0, c_white, 1);
        else draw_sprite_ext(s_dnet_button_pappy, 9 + o_dnet_control.pappy_button_set * 12, x + dnet_center + 22, y + 180, 1, 1, 0, c_white, 1);
        }
    }
    
// Chat // --------------------------------------------------------------------------------------
else if dnet_app = 3 then
    {
    // Draw messages //
    draw_set_alpha(1);
    draw_set_font(global.fn_7ocs);
    for (i=0; i&lt;11; i+=1;)
        {
        draw_set_color(user_color[i]);
        draw_set_halign(fa_right);
        draw_text(x + 80, y + 45 + i * 15, string(user[i]) + ":"); 
        draw_set_color(color[i]);
        draw_set_halign(fa_left);
        draw_text(x + 85, y + 45 + i * 15, string(message[i]));
        }
        
    // Statistics //
    draw_set_font(global.fn_dnet);
    draw_set_color(c_black);
    draw_set_alpha(1);
    draw_rectangle(x - 2, y + 35, x + 386, y + 54, false);
    draw_rectangle(x - 2, y + 196, x + 386, y + 240, false);
    draw_set_color(c_red);
    draw_line(x - 2, y + 54, x + 386, y + 54);
    draw_line(x - 2, y + 196, x + 386, y + 196);
    draw_set_color(c_white);
    draw_text(x + 5, y + 40, "Anzahl der nutzer:");
    draw_set_color(c_aqua);
    draw_text(x + 187, y + 40, string(users_online));
    draw_set_color(c_white);
    
    // Draw hoopz message //
    draw_set_color(c_aqua);
    draw_text(x + 10, y + 200, "Chat:");
    draw_set_color(c_white);
    draw_text(x + 50, y + 200, string(hoopz_message_written) + string(cursor_flash));            
    }
    
// Settings //
else if dnet_app = 4 then
    {
    // Text //
    DnetText(x + 10, y + 40, "Benutzerbild:", 300, c_white, 1, fa_left, fa_top);
    DnetText(x + 10, y + 115, "System Haut:", 300, c_white, 1, fa_left, fa_top);    
    
    // Selection //
    for (i=0; i&lt;5; i+=1;)
    {
        if (button_hover_avatar[i] || scr_quest_get_state("dwarfnet_avatar") == i)
            MiniSprite9(sDNETBorder0, 6, x + 9 + i * 40, y + 54, 37, 47, 1, c_white, 1);
    }
    for (i=0; i&lt;6; i+=1;) 
    {
        if (button_hover_skin_system[i] || scr_quest_get_state("dwarfnet_skin_system") == i)
            MiniSprite9(sDNETBorder0, 6, x + 99 + i * 20, y + 114, 17, 17, 1, c_white, 1);
    }
    
        // Avatars //
    draw_set_alpha(1);
    draw_sprite(sDNETAvatarL, 1, x + 10, y + 55);
    draw_sprite(sDNETAvatarL, 2, x + 50, y + 55);
    draw_sprite(sDNETAvatarL, 3, x + 90, y + 55);
    draw_sprite(sDNETAvatarL, 4, x + 130, y + 55);
    draw_sprite(sDNETAvatarL, 5, x + 170, y + 55);
    
    // Skin 01 //
    draw_sprite(s_dnet_system_skin, 0, x + 100, y + 115);
    
    // Skin 02 //
    draw_sprite(s_dnet_system_skin, 1, x + 120, y + 115);
    
    // Skin 03 //
    draw_sprite(s_dnet_system_skin, 2, x + 140, y + 115);
    
    // Skin 04 //
    draw_sprite(s_dnet_system_skin, 3, x + 160, y + 115);
    
    // Skin 05 //
    draw_sprite(s_dnet_system_skin, 4, x + 180, y + 115);
    
    // Skin 06 //
    draw_sprite(s_dnet_system_skin, 5, x + 200, y + 115);
    }
    
// Exit //
else if dnet_app = 5 then
    {
    // Set font //
    draw_set_font(global.fn_dnet);
    
    // Draw the rectangle //
    draw_set_alpha(0.6);
    draw_set_color(c_black);
    draw_rectangle(x - 2, y + 95, x + o_dnet_control.dnet_width, y + 145, false);
    draw_set_alpha(1);
    draw_set_color(c_aqua);
    draw_set_halign(fa_center);
    draw_text(x + dnet_center, y + 105, "Trennen?");
    
    // Button Yes //
    if button_hover_yes = true then draw_set_color(c_red); 
    else draw_set_color(c_white);
    draw_text(x + dnet_center - 20, y + 129, "Ja");
    
    // Button No //
    if button_hover_no = true then draw_set_color(c_red); 
    else draw_set_color(c_white);
    draw_text(x + dnet_center + 20, y + 129, "Nein");
    draw_set_halign(fa_left);
    }
    
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
instance_create(0, 0, o_camera_hoopz);
global.eventFrame = 0;
wid = room_width;
hei = room_height;
window_set_size(room_width, room_height);
surface_resize(application_surface, room_width, room_height);
window_set_position((display_get_width() / 2) - (wid / 2), (display_get_height() / 2) - (hei / 2));

dslScr = ds_list_create();
dslScrNam = ds_list_create();
dsmScr = ds_map_create();
for (i = 0; i &lt; 1000; i += 1)
{
    if (script_exists(i))
    {
        nam = script_get_name(i);
        if (string_pos("event_", nam) == 1)
        {
            namClp = string_replace(nam, "event_", "");
            ds_list_add(dslScr, i);
            ds_list_add(dslScrNam, namClp);
            ds_map_add(dsmScr, namClp, i);
        }
    }
}
// Sort
ds_list_sort(dslScrNam, 1);

scr_quest_set_state("player.shekels", 100);
scr_quest_set_state("money", scr_quest_get_state("player.shekels"));
scr_quest_set_state("curfew", "before");
scr_quest_set_state("body", "hoopz");
scr_quest_set_state("area", "tnn");
scr_quest_set_state("time", 0);
scr_quest_set_state("clock", 0);
scr_quest_set_state("room", room_get_name(room));
scr_quest_set_state("inside", 1);
Item("reset");

script = "";

global.cinFin = 1;

code_line = 0;
code_last = 0;
stt = "";

tst = string(id);
tst = real(tst);
with (tst) event_user(0);

varWid = 250;
code_lines = 20;
code_vsp = 12;
code_height = (code_lines * code_vsp) + 1;

panX = varWid + 5;
panY = code_height + 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Test
show_debug_message("Success.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
CourierNew8 = global.fn_dnet;
CourierNew18b = fn_chatFont01;

// Actions
dx = panX;
dy = panY;
vsp = 32;//2;
draw_set_font(CourierNew18b);
if (global.cinFin == 1)
{
    //draw_text(dx, dy, "Cinema is over");
    draw_set_font(CourierNew8);
    h = 0;
    alt = 0;
    drw = 160;
    drh = 14;
    draw_text(dx, dy - 5, "Select a script using RIGHT CLICK - F9 exits script at any time");
    for (xxx = 0; xxx &lt; 10; xxx += 1)
    {
        for (yyy = 0; yyy &lt; 33; yyy += 1)
        {
            drx = dx + (xxx * (drw + 1));
            dry = dy + (yyy * drh) + 9;
            draw_sprite_ext(s1x1, 0, drx - 1, dry - 1, drw + 2, drh + 2, 0, c_black, 1);
            if (alt) draw_sprite_ext(s1x1, 0, drx, dry, drw, drh, 0, make_color_rgb(224, 224, 224), 1);
            else draw_sprite_ext(s1x1, 0, drx, dry, drw, drh, 0, make_color_rgb(192, 192, 192), 1);
            hov = scr_mouse_rect(drx, dry, drx + drw, dry + drh);
            if (hov) draw_set_color(c_red); else draw_set_color(c_black);
            if (hov &amp;&amp; mouse_check_button_pressed(mb_right)) 
            {
                var scp = dsmScr[? dslScrNam[| h]];
                script_execute(scp);
                Cinema("run", script);
            }
            draw_text(drx + 1, dry, dslScrNam[| h]);
            h += 1;
            alt = !alt;
            if (h &gt;= ds_list_size(dslScr)) break;
        }
        if (h &gt;= ds_list_size(dslScr)) break;
    }
    draw_set_color(c_black);
}
else if (global.chtStt == "dialog")
{
    draw_set_color(c_purple);
    draw_text(dx, dy, oCinema.arg[0]); dy += vsp;
    draw_set_color(c_black);
    draw_text_ext(dx, dy, oCinema.arg[1], -1, 1000 - 128);
    if (scr_mouse_rect(dx, dy - vsp, dx + 999, dy + 999) &amp;&amp; mouse_check_button_pressed(mb_left))
    {
        global.chtStt = "";
        global.cinObj = -999;
        global.cinAct = 1;
        Cinema("next");
        with (oCinema) Cinema("process");
    }
}
else if (global.chtStt == "choice")
{
    draw_set_color(c_purple);
    draw_text(dx, dy, oCinema.arg[0]); dy += vsp;
    for (var i = 0; i &lt; ds_list_size(global.dslCinRep); i += 1)
    {
        hov = 0;
        draw_set_color(c_black);
        if (scr_mouse_rect(dx, dy, dx + 999, dy + vsp - 1))
        {
            hov = 1;
            draw_set_color(c_orange);
        }
        draw_text(dx, dy, global.dslCinRep[| i]);
        dy += vsp;
        if (hov &amp;&amp; mouse_check_button_pressed(mb_left))
        {
            global.chtStt = "";
            global.cinLin -= 1;
            global.cinAct = 1;
            global.chtRep = 0;
            with (oCinema) Cinema("goto", global.dslCinRepGot[| i]);
            
            
        }
    }
    draw_set_color(c_black);
}

/////////////////////////// CODE
if (code_last != global.cinLin) { code_last = global.cinLin; code_line = code_last - 2; }
dx = 4; dy = 1 - 3;
draw_set_font(CourierNew8);
draw_sprite_ext(s1x1, 0, 0, 0, wid, code_height, 0, c_white, 1);
if (mouse_wheel_up()) code_line = max(0, code_line - 5);
if (mouse_wheel_down()) code_line = min(ds_list_size(global.dslCinQue) - code_lines, code_line + 5);
code_line = clamp(code_line, 0, ds_list_size(global.dslCinQue) - code_lines);
for (i = code_line; i &lt; min(ds_list_size(global.dslCinQue), code_line + code_lines); i += 1)
{
    if (ds_list_find_index(global.dslCinHis, i) != -1)
    {
        val = ds_list_find_index(global.dslCinHis, i);
        val = abs(10 - val) / 10;
        draw_sprite_ext(s1x1, 0, 0, dy + 2, wid, code_vsp, 0, merge_color(c_white, c_red, val), 1);
    }
    if (global.cinLin == i) draw_sprite_ext(s1x1, 0, 0, dy + 2, wid, 11, 0, c_yellow, 1);
    draw_text(dx, dy + 2, string(i));
    //draw_text(dx + 30, dy, global.dslCinCom[| i]);
    var codStr = global.dslCinQue[| i];
    if (global.dslCinLab[| i]) codStr += " " + string_repeat("-", 170);
    draw_text(dx + 30, dy + 2, codStr);
    dy += code_vsp;
}
draw_sprite_ext(s1x1, 0, 0, code_height - 1, wid, 1, 0, c_black, 1);

///////////////////////////////////// VARIABLES
draw_set_font(CourierNew8);
dx = 5; dy = code_height;
draw_sprite_ext(s1x1, 0, 0, code_height, varWid, 800, 0, c_white, 1);
draw_text(dx, dy, "VARIABLES"); dy += 10;
alt = 1;
for (i = 0; i &lt; ds_list_size(global.dslCinVar); i += 1)
{
    hov = 0;
    if (scr_mouse_rect(dx, dy, dx + varWid, dy + 10))
    {
        hov = 1;
        if (mouse_check_button_pressed(mb_left))
        {
            str = get_string("New value for " + global.dslCinVar[| i] + ":", scr_quest_get_state(global.dslCinVar[| i]));
            if (str != "")
            {
                show_debug_message("&gt;"+str+"&lt;");
                if (string_digits(string(str)) == string(str)) str = real(str);
                if (string_pos("ITEM: ", global.dslCinVar[| i]) == 1)
                {
                    var itmNam = string_delete(global.dslCinVar[| i], 1, 6);
                    Item("lose", itmNam, Item("count", itmNam));
                    Item("gain", itmNam, real(str));
                }
                else if (global.dslCinVar[| i] == "curfew")
                {
                    if (str == "before") scr_quest_set_state("tnnCurfew", 0);
                    if (str == "during") scr_quest_set_state("tnnCurfew", 1);
                    if (str == "after") scr_quest_set_state("tnnCurfew", 2);
                    scr_quest_set_state("curfew", scr_time_db("tnnCurfew"));
                }
                else
                    scr_quest_set_state(global.dslCinVar[| i], str);
                if (global.dslCinVar[| i] == "money") scr_quest_set_state("player.shekels", str);
            }
        }
    }
    if (alt) draw_sprite_ext(s1x1, 0, 0, dy + 2, varWid, 11, 0, make_color_rgb(224, 224, 224), 1);
    if (hov) draw_sprite_ext(s1x1, 0, 0, dy + 2, varWid, 11, 0, c_yellow, 1);
    alt = !alt;
    draw_text(dx, dy, global.dslCinVar[| i]);
    if (string_pos("ITEM: ", global.dslCinVar[| i]) == 1)
        draw_text(dx + 180, dy, Item("count", string_delete(global.dslCinVar[| i], 1, 6)));
    else
        draw_text(dx + 180, dy, scr_quest_get_state(global.dslCinVar[| i]));
    dy += 11;
}
draw_sprite_ext(s1x1, 0, varWid, code_height, 1, 800, 0, c_black, 1);

////////////////////////// RELOAD
if (script == "") exit;
dx = 0;
dy = room_height - 100;
draw_sprite_ext(s1x1, 0, dx, dy, varWid, 1, 0, c_black, 1);
draw_set_halign(1);
draw_set_valign(1);
if (scr_mouse_rect(dx, dy, dx + varWid, dy + 100))
{
    draw_sprite_ext(s1x1, 0, dx, dy + 1, varWid, 100, 0, c_yellow, 1);
    if (mouse_check_button_pressed(mb_left))
    {
        with (oNote) instance_destroy();
        Cinema("run", script);
    }
}
draw_set_font(CourierNew18b);
draw_text(dx + (varWid / 2), dy + 50, "Reload Script");
draw_set_halign(0);
draw_set_valign(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (oCinema)
{
    Cinema("exit");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

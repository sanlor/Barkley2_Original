<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
Gunsmap("init");
Material("init");
for (h = 0; h &lt; ds_list_size(global.dslMaterialName); h += 1) matCou[h] = 0;
for (h = 0; h &lt; ds_list_size(global.gunName); h += 1) gunCou[h] = 0;
gunGen = 1;
matGen = 1; // How many times i generated
wid = 900 * 1;
hei = 480 * 1;
scl = 2;
window_set_size(wid * scl, hei * scl);
surface_resize(application_surface, wid, hei);
window_set_position((display_get_width() / 2) - ((wid * scl) / 2), (display_get_height() / 2) - ((hei * scl) / 2));

chrBon = 5;
plyLck = 0;
eneLck = 0;
smtLck = 1;
gunDrp = 50;
matCol[0] = merge_color(make_color_rgb(160, 128, 64), c_white, 0.5);
matCol[1] = c_red;
matCol[2] = c_lime;
matCol[3] = c_aqua;
matCol[4] = merge_color(c_purple, c_white, 0.5);
matCol[5] = c_yellow;
matCol[6] = c_orange;

// Time
gamTim = "24:00";
gunVal[0] = 1;
gunVal[1] = 1;
gunVal[2] = 1;
gunVal[3] = 1;
gunVal[4] = 1;
gunVal[5] = 1;

matVal[0] = 1;
matVal[1] = 0;
matVal[2] = 1;
matVal[3] = 1;
matVal[4] = 1;
matVal[5] = 1;
matVal[6] = 1;

// Gun stats
gunStt[0] = "Power";
gunStt[1] = "Capacity";
gunStt[2] = "Affix";
gunStt[3] = "Speed";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get evens
num = 999;
if (i == 0)
{
    num = string_copy(gamTim, 1, 1);
}
else if (i == 1)
{
    num = string_copy(gamTim, 2, 1);
}
else if (i == 2)
{
    num = string_copy(gamTim, 4, 1);
}
else if (i == 3)
{
    num = string_copy(gamTim, 5, 1);
}
if (real(num) / 2 == floor(real(num) / 2) &amp;&amp; num != "0") getBon = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stats
xsp = 150; ysp = 14;
drx = 5; dry = (ysp * 27) + 8;

draw_set_color(c_white);
dro = dry;
for (i = 0; i &lt; 4; i += 1)
{
    draw_set_font(global.fn_12oc);
    draw_text(drx, dry, gunStt[i]);
    dry += 20;
    draw_set_font(global.fn_7ocs);
    draw_text(drx, dry, "From Gunsdrop...");
    draw_text(drx + 80, dry, string(gunDrp / 4));
    dry += 14;
    
    getBon = 0;
    event_user(2);
    draw_text(drx, dry, "Clock Value");
    draw_text(drx + 80, dry, string(num));
    dry += 14;
    draw_text(drx, dry, "Is even and not 0?");
    draw_text(drx + 80, dry, string(getBon));
    dry += 14;
    //bonus
    upv = (effLck + chrBon) / 10;
    draw_text(drx, dry, "( " + string(effLck) + " + " + string(chrBon) + " ) / 10 = " + string(upv));
    dry += 14;
    draw_text(drx, dry, "BONUS = " + string(upv * getBon));
    drx += xsp;
    dry = dro;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Gun Segment
for (i = 0; i &lt; ds_list_size(global.gunGroups); i += 1)
{
    gunPol[i] = 0;
}
for (h = 0; h &lt; ds_list_size(global.gunName); h += 1)
{
    var gun = global.gunName[| h];
    for (i = 0; i &lt; ds_list_size(global.gunGroups); i += 1)
    {
        if (Gun("group", gun) == global.gunGroups[| i]) gunGrp[h] = i;
    }
}
tfp = 0;
for (i = 0; i &lt; ds_list_size(global.gunGroups); i += 1) tfp += gunVal[i];
for (h = 0; h &lt; ds_list_size(global.gunName); h += 1)
{
    var gun = global.gunName[| h];
    var ind = gunGrp[h];
    gunPol[ind] += Gunsmap("rarity by name", gun);
    //tfp += Gunsmap("rarity by name", gun);
}
for (i = 0; i &lt; ds_list_size(global.gunGroups); i += 1)
{
    gunValSmo[i] = gunVal[i];
    gunValSmo[i] *= (abs(totLck - 100) / 100);
    gunValSmo[i] += (tfp / 6) * (totLck / 100);
}
drx = 5; dry += (yst * 5);
yst = dry;
if (0)
{
draw_set_font(global.fn_12oc);
draw_set_color(c_white);
draw_text(drx, dry, "Time");
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx, dry, drx + 30, dry + 18, 1);
if (scr_mouse_rect(drx, dry, drx + 30, dry + 18))
{
    if (mouse_check_button(mb_left)) plyLck = real(get_string("Time?", string(plyLck)));
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + 15, dry, string(plyLck));
draw_set_halign(0);
drx -= 60;
}

//
totLck = 1;
xsp += 25;
raw = 0;
for (i = 0; i &lt; ds_list_size(global.gunGroups); i += 1)
{
    var cat = global.gunGroups[| i];
    draw_set_color(c_white);
    draw_set_font(global.fn_12oc);
    draw_text(drx, dry, cat);
    
    // Box
    if (i == 4) dry += ysp;
    else dry += ysp;
    drx += 48;
    dry += 76;
    draw_set_color(c_white);
    draw_rectangle(drx, dry, drx + 20, dry + 12, 1);
    if (scr_mouse_rect(drx, dry, drx + 20, dry + 12))
    {
        if (mouse_check_button(mb_left)) gunVal[i] = real(get_string("Gun value?", string(gunVal[i])));
    }
    draw_set_halign(1);
    draw_set_font(global.fn_7ocs);
    draw_text(drx + 10, dry + 2, string(gunVal[i]));
    draw_text(drx + 45, dry + 2, string(gunValSmo[i]));
    draw_set_font(global.fn_7ocs);
    //draw_text(drx + 15, dry - 12, "Drop");
    //draw_text(drx + 45, dry - 12, "Smooth");
    draw_set_halign(0);
    drx -= 48;
    dry -= 76;
    if (i == 4) dry -= ysp; else dry -= ysp;
    
    dry += 8;
    dyo = dry + (ysp * 5);
    draw_set_font(global.fn_7ocs);
    //draw_set_halign(1);
    draw_text(drx + 52, dry, "Rarity"); // -12
    draw_text(drx + 52 + 23 + 10, dry, "Group%");
    draw_text(drx + 52 + 23 + 10 + 23 + 10, dry, "All%");
    dry -= 8;
    //draw_set_halign(0);
    
    draw_set_color(c_white);
    dry += floor(ysp * 1.5);
    draw_set_font(global.fn_7ocs);
    totPct[i] = 0;
    for (h = 0; h &lt; ds_list_size(global.gunName); h += 1)
    {
        var gun = global.gunName[| h];
        if (Gun("group", gun) == cat)
        {
            var odd = Gunsmap("rarity by name", gun);//Material("odds", mat);
            var odo = odd;
            odd = (odo / gunPol[i]) * 100;
            //show_debug_message(gun + " " + string(odd));
            var tim = global.gunTimes[| i];
            //if (odd != 0)
            //{
            odd *= (abs(totLck - 100) / 100);
            odd += totLck / tim;
            //}
            //ds_list_find_index(global.gunName, argument[1]);
            draw_text(drx, dry, gun);
            draw_text(drx + 52, dry, odo);
            //draw_text(drx + 52 + 23, dry, "&gt;");
            ////////////draw_text(drx + 52 + 23 + 10, dry, (odo / gunPol[i]) * 100);
            draw_text(drx + 52 + 23 + 10, dry, string((gunCou[raw] / gunGen) * 100));
            //draw_text(drx + 52 + 23 + 10 + 23, dry, "&gt;");
            draw_text(drx + 52 + 23 + 10 + 23 + 10, dry, ((odd) * gunValSmo[i]) / tfp);
            totPct[i] += ((odd) * gunValSmo[i]) / tfp;
            dry += ysp;
            raw += 1;
        }
    }
    dry += ysp;
    if (i == 4) { dry -= ysp; dyo += ysp; }
    else dyo += ysp;
    //draw_text(drx, dry, "Chance of group...");
    draw_text(drx, dyo, "Drop Rate");
    draw_text(drx + 52 + 23 + 10 + 23 + 10, dyo, string(totPct[i]));
    drx += xsp;
    dry = yst;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

// DEBUG KEY FOR TESTING LUCK
if (keyboard_check(vk_shift))
{
    repeat (100)
    {
        //Drop("material", eneLck + plyLck, matVal[0], matVal[2], matVal[3], matVal[4], matVal[5], matVal[6]);
        Drop("type", eneLck + plyLck, gunVal[0], gunVal[1], gunVal[2], gunVal[3], gunVal[4], gunVal[5]);
        gunCou[gloInd] += 1;
        gunGen += 1;
    }
}

xsp = 125; ysp = 14;
xs2 = 110; // was 125
drx = 5; dry = 5;
draw_set_font(global.fn_12oc);
draw_set_color(c_white);
draw_text(drx, dry, "Player Luck");
// Box
drx += 60;
draw_set_color(c_white);
//show_debug_message(string(color_get_red(10859952)) + "x" + string(color_get_green(10859952)) + "x" + string(color_get_blue(10859952)));
draw_rectangle(drx, dry, drx + (ysp * 2), dry + 18, 1);
if (scr_mouse_rect(drx, dry, drx + (ysp * 2), dry + 18))
{
    if (mouse_check_button(mb_left)) plyLck = real(get_string("Player luck?", string(plyLck)));
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(plyLck));
draw_set_halign(0);
drx -= 60;

drx += xs2; //dry += 25;

// ENEMY
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Enemy Luck");
// Box
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx, dry, drx + (ysp * 2), dry + 18, 1);
if (scr_mouse_rect(drx, dry, drx + (ysp * 2), dry + 18))
{
    if (mouse_check_button(mb_left)) eneLck = real(get_string("Enemy luck?", string(eneLck)));
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(eneLck));
draw_set_halign(0);
drx -= 60;

effLck = plyLck;
totLck = (eneLck + plyLck) / 2; // Make it 100

// SMOOTH LUCK
drx += xs2;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Smoothing");
// Box
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx, dry, drx + (ysp * 2), dry + 18, 1);
if (scr_mouse_rect(drx, dry, drx + (ysp * 2), dry + 18))
{
    if (mouse_check_button(mb_left)) smtLck = real(get_string("Luck smoothing?", string(smtLck)));
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(smtLck));
draw_set_halign(0);
drx -= 60;
// SMOOTH LUCK

totLck = (totLck * smtLck);
tfp = 0;
for (i = 0; i &lt; ds_list_size(global.dslMaterialGroups); i += 1) tfp += matVal[i];
for (i = 0; i &lt; ds_list_size(global.dslMaterialGroups); i += 1)
{
    matValSmo[i] = matVal[i];
    if (matVal[i] != 0)
    {
        matValSmo[i] *= (abs(totLck - 100) / 100);
        matValSmo[i] += (tfp / 6) * (totLck / 100);
    }
}

if (0)
{
drx += 125; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Total Points");
draw_set_font(global.fn_1);
draw_set_halign(1);
draw_text(drx + (ysp * 5), dry, string(tfp));
draw_set_halign(0);
}



// Gunsdrop
drx += xs2; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Gun'sdrop");
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx, dry, drx + (ysp * 2), dry + 18, 1);
if (scr_mouse_rect(drx, dry, drx + (ysp * 2), dry + 18))
{
    if (mouse_check_button(mb_left)) gunDrp = real(get_string("Gun'sdrop?", string(gunDrp)));
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(gunDrp));
draw_set_halign(0);
drx -= 60;

// time
drx += xs2; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Clocktime");
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx - 5, dry, drx + (ysp * 2) + 5, dry + 18, 1);
if (scr_mouse_rect(drx - 5, dry, drx + (ysp * 2) + 5, dry + 18))
{
    if (mouse_check_button(mb_left)) gamTim = get_string("Clocktime?", gamTim);
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(gamTim));
draw_set_halign(0);
drx -= 60;

// CCBonus
drx += xs2; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "CCBonus");
drx += 60;
draw_set_color(c_white);
draw_rectangle(drx - 5, dry, drx + (ysp * 2) + 5, dry + 18, 1);
if (scr_mouse_rect(drx - 5, dry, drx + (ysp * 2) + 5, dry + 18))
{
    if (mouse_check_button(mb_left)) chrBon = get_string("CCBonus?", chrBon);
}
draw_set_halign(1);
draw_set_font(global.fn_1);
draw_text(drx + (ysp * 1), dry, string(chrBon));
draw_set_halign(0);
drx -= 60;

drx += xs2; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Luck Total");
draw_set_font(global.fn_1);
draw_set_halign(1);
draw_text(drx + (ysp * 5), dry, string(eneLck + plyLck));
draw_set_halign(0);

// Smoother luck
drx += xs2; //dry += 25;
draw_set_font(global.fn_12oc);
draw_text(drx, dry, "Luck Smooth");
draw_set_font(global.fn_1);
draw_set_halign(1);
draw_text(drx + (ysp * 5), dry, string((eneLck + plyLck) * smtLck));
draw_set_halign(0);
// Smoother luck

yst = 45;// + 25;// + 25 + 25 + 25;
draw_set_color(c_white);
drx = 5; dry = yst; 
raw = 0;
for (i = 0; i &lt; ds_list_size(global.dslMaterialGroups); i += 1)
{
    var cat = global.dslMaterialGroups[| i];
    draw_set_color(matCol[i]);
    draw_set_font(global.fn_1);
    draw_text(drx, dry, cat);
    
    // Box
    drx += 60;
    if (i != 1)
    {
    draw_set_color(c_white);
    draw_rectangle(drx + 5, dry, drx + 25, dry + 18, 1);
    if (scr_mouse_rect(drx + 5, dry, drx + 25, dry + 18))
    {
        if (mouse_check_button(mb_left)) matVal[i] = real(get_string("Material value?", string(matVal[i])));
    }
    draw_set_halign(1);
    draw_set_font(global.fn_1);
    draw_text(drx + 15, dry, string(matVal[i]));
    draw_text(drx + 45, dry, string(matValSmo[i]));
    draw_set_font(global.fn_7ocs);
    draw_text(drx + 45, dry - 12, "Smoothed");
    draw_set_halign(0);
    }
    drx -= 60;
    
    draw_set_color(matCol[i]);
    dry += floor(ysp * 1.5);
    draw_set_font(global.fn_7ocs);
    totPct[i] = 0;
    for (h = 0; h &lt; ds_list_size(global.dslMaterialName); h += 1)
    {
        var mat = global.dslMaterialName[| h];
        if (Material("group", mat) == cat)
        {
            var odd = Material("odds", mat);
            var tim = global.dslMaterialTimes[| i];
            if (odd != 0)
            {
                odd *= (abs(totLck - 100) / 100);
                odd += totLck / tim;
            }
            draw_text(drx, dry, mat);
            //draw_text(drx + 65, dry, odd); // was
            draw_text(drx + 65, dry, string((matCou[raw] / matGen) * 100));
            draw_text(drx + 65 + 23, dry, "&gt;");
            draw_text(drx + 65 + 23 + 10, dry, ((odd) * matValSmo[i]) / tfp);
            totPct[i] += ((odd) * matValSmo[i]) / tfp;
            dry += ysp;
            raw += 1;
        }
    }
    dry += ysp;
    if (i == 0) dry += ysp;
    if (i != 1)
    {
        draw_text(drx, dry, "Chance of group...");
        draw_text(drx + 65, dry, string(totPct[i]));
    }
    drx += xsp;
    dry = yst;
}

// Draw gun segment
event_user(0);
// Draw stats
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

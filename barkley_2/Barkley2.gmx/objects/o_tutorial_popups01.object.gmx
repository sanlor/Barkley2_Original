<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_goofControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-276447232</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// SETUP //
alpha = 0;
alpha_goal = 0;
timer_fade = 10; 

// Control type //
if global.keyinput_type == KEYINPUT_GAMEPAD then
    {
    buttonMove = "LEFT STICK";
    buttonTalk = "ACTION BUTTON";
    buttonRoll = "LEFT BUMPER";
    }
else 
    {
    buttonMove = "WASD KEYS";
    buttonTalk = "ACTION KEY";
    buttonRoll = "SPACEBAR KEY";
    }

// Tutorials //
tutorial[0] = "Use the " + buttonMove + " to move around.";
tutorial[1] = "Use the " + buttonTalk + " to interact with NPC's";
tutorial[2] = "Use the " + buttonRoll + " to execute a roll.";
tutorial[3] = "";
tutorial[4] = "";
tutorial[5] = "";
tutorial[6] = "";

// Don't repeat //
if Quest("tutorialPopup") &gt;= 1 and room = r_fct_eggRooms01 then instance_destroy();
if Quest("tutorialPopup") &gt;= 2 and room = r_fct_accessHall01 then instance_destroy();
if Quest("tutorialPopup") &gt;= 3 and room = r_fct_tutorialZone01 then instance_destroy();

//Which one ? //
index = Quest("tutorialPopup");
if Quest("tutorialPopup") == 0 and room = r_fct_eggRooms01 then Quest("tutorialPopup", 1);
if Quest("tutorialPopup") == 1 and room = r_fct_accessHall01 then Quest("tutorialPopup", 2);
if Quest("tutorialPopup") == 2 and room = r_fct_tutorialZone01 then Quest("tutorialPopup", 3);
if Quest("tutorialPopup") == 3 and room = r_fct_eggRooms01 then Quest("tutorialPopup", 4);
    




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Pause //
if paused() exit;

// Fade in or out //
if timer_fade &gt; 0 then
    {
    // Tick down //
    timer_fade -= dt();
    
    // Event //
    if timer_fade &lt;= 0 then
        {        
        if alpha_goal = 0 then 
            {
            alpha_goal = 1;
            timer_fade = 70;
            }
        else alpha_goal = 0;
        }
    }
    
// Alpha //
if alpha &gt; alpha_goal and alpha_goal = 0 then alpha -= 0.5 * dt_sec();
if alpha &lt; alpha_goal and alpha_goal = 1 then alpha += 0.5 * dt_sec();
if alpha &lt; alpha_goal and alpha_goal = 0 then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the tutorial text //
if global.event = true then exit;
draw_set_alpha(alpha * 0.35);
draw_set_color(make_color_rgb(60, 90, 210));
draw_rectangle(view_xview - 2, view_yview + 206, view_xview + view_wview + 2, view_yview + 224, false);
draw_set_alpha(alpha);
draw_set_color(c_white);
draw_set_font(global.fn_2)
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(view_xview + view_wview / 2, view_yview + 215, tutorial[index]);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_gbl_fortuneTeller01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();
shopName = "Garfunkle's Deals"; // Must EXACTLY match definition in Shop() script
scr_event_hook_onCommon(event_cinema);
event_user(0); // DSL
// Check event user 5 to set the gun drops

// 5 quality shop set-up
for (q = 0; q &lt; 5; q += 1) // Quality
{
    gunLoad[q] = 0;
    for (i = 0; i &lt; 5; i += 1) gunBuy[q, i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ran after shop is closed
qal = 0;
if (Quest("redfieldPoint") == 70) qal = 1;
var gunAmt = 0;
for (i = 0; i &lt; 5; i += 1)
{
    gunAmt += gunBuy[qal, i];
}
if (gunAmt == 5) // bought all 5
{
    if (qal == 0) Quest("redfieldShop50Empty", 1);
    if (qal == 1) Quest("redfieldShop70Empty", 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate guns based on shop type
var luck = scr_savedata_get("player.stats.effective." + STAT_BASE_LUCK);
// qal exists so you can have different gun qualities over time / through quests
qal = Quest("shopQuality");
if (qal == 0 &amp;&amp; gunLoad[qal] == 0)
{
    gunLoad[qal] = 1;
    shpGun[qal, 0] = Drop("generate", luck, "kosmic pistol", "FUND");
    shpGun[qal, 1] = Drop("generate", luck, "kosmic rifle", "GIRF");
    shpGun[qal, 2] = Drop("generate", luck, "kosmic shotgun", "SGUN");
    shpGun[qal, 3] = Drop("generate", luck, "kosmic projectile", "GIRF");
    shpGun[qal, 4] = Drop("generate", luck, "kosmic mounted", "SGUN");
    // Set price of guns from 5 - 10 dollars
    for (i = 0; i &lt; 5; i += 1) shpPrc[qal, i] = 5 + irandom(5); 
}
else if (qal == 1 &amp;&amp; gunLoad[qal] == 0)
{
    gunLoad[qal] = 1;
    shpGun[qal, 0] = Drop("generate", luck, "zauber pistol", "HELL");
    shpGun[qal, 1] = Drop("generate", luck, "zauber rifle", "NIFF");
    shpGun[qal, 2] = Drop("generate", luck, "zauber shotgun", "GOOP");
    shpGun[qal, 3] = Drop("generate", luck, "zauber projectile", "GOOP");
    shpGun[qal, 4] = Drop("generate", luck, "zauber mounted", "GOOP");
    // Set price of guns from 10 - 15 dollars
    for (i = 0; i &lt; 5; i += 1) shpPrc[qal, i] = 10 + irandom(5);
}

// IGNORE below here - Load prices
var shp = ds_list_find_index(global.shopName, shopName);
var shpCos = ds_list_find_value(global.shopCost, shp);
for (i = 0; i &lt; 5; i += 1) shpCos[| i] = shpPrc[qal, i];

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DSL
script = "
CHOICE | Do you want to see the bad stuff or good stuff?
REPLY  | BAD | Bad stuff.
REPLY  | GOOD | Good stuff.
REPLY  | LEAVE | Leave.

BAD
IF gunsbag == 20 | GOTO | GUNSBAG_FULL
QUEST | shopQuality = 0
EVENT | " + string(id) + " | 5
QUEST | shopObject = " + string(id) + " // So I can get local vars
SHOP  | open | " + shopName + "
EVENT |  " + string(id) + " | 6
IF shop == bought_toomuch | DIALOG | P_NAME | I filled up my gun'sbag, I have to stop shopping...

GOOD
IF gunsbag == 20 | GOTO | GUNSBAG_FULL
QUEST | shopQuality = 1
EVENT | " + string(id) + " | 5
QUEST | shopObject = " + string(id) + " // So I can get local vars
SHOP  | open | " + shopName + "
EVENT |  " + string(id) + " | 6
IF shop == bought_toomuch | DIALOG | P_NAME | I filled up my gun'sbag, I have to stop shopping...

GUNSBAG_FULL
DIALOG | P_NAME | Whoops, my gunsbag is full. Guess I'll shop some other time...

LEAVE
EXIT |
"
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,28</point>
    <point>21,21</point>
  </PhysicsShapePoints>
</object>

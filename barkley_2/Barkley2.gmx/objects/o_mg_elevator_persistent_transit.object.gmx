<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
timer_elevator = 5;
timer_open_door = 0;
floor_change = 3;//0.5;
reached = false;
lifespan_check = 10;

// Which elevator is in question //
if room = r_swp_cuchuelevator01 or room = r_chu_elevator01 then // or room = r_chu_elevatorLobby01
    {
    elevator_id = 0;
    goal = scr_quest_get_state("cuchu_elevator_floor_goal");    
    }
else
    {
    elevator_id = 1;
    goal = scr_quest_get_state("pdt_elevator_floor_goal");    
    floor_change = 1;
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Move teleport //
if (room == r_chu_elevator01) Quest("chu_elevatorTeleport", 0);
//else if (room == r_pdt_cargoElevator01) Quest("pdt_elevatorTeleport", 0); 
    

    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Open elevator doors when inside the elevator //
// What floor are we on? //
if elevator_id = 0 then
    {
    floor_current = scr_quest_get_state("cuchu_elevator_floor");
    floor_goal = scr_quest_get_state("cuchu_elevator_floor_goal");
    }
else
    {
    floor_current = scr_quest_get_state("pdt_elevator_floor");
    floor_goal = scr_quest_get_state("pdt_elevator_floor_goal");
    }
            
// Reach the goal //
if floor_current = floor_goal and reached = false then
    {
    // Open the doors //
    audio_play_sound_at_xy("sn_mg_wait_bell01", false, 10, view_xview + 192, view_yview + 120);
    timer_open_door = 15;
    reached = true;
    }
    
// Transit //
if floor_current != floor_goal then reached = false;

// Cuchu elevator //
if timer_elevator &gt; 0 then
    {
    // Tick down //
    timer_elevator -= dt();
    
    // Event //
    if timer_elevator &lt;= 0 then
        {
        // Shake screen //
        if (reached == false) 
        {
            //or room = r_pdt_cargoElevator01
            if (room == r_chu_elevator01) Shake("add", 0.5, 300, room_width / 2, room_height / 2, 0.001);
        }
            
        // Reset timer //
        timer_elevator = 1;
        
        // Down or UP //
        if elevator_id = 0 then
            {
            if floor_current &lt; floor_goal then Quest("cuchu_elevator_floor", scr_quest_get_state("cuchu_elevator_floor") + 1 * floor_change);
            else if floor_current &gt; floor_goal then Quest("cuchu_elevator_floor", scr_quest_get_state("cuchu_elevator_floor") - 1 * floor_change);
            }
        else
            {
            if floor_current &lt; floor_goal then Quest("pdt_elevator_floor", scr_quest_get_state("pdt_elevator_floor") + 1 * floor_change);
            else if floor_current &gt; floor_goal then Quest("pdt_elevator_floor", scr_quest_get_state("pdt_elevator_floor") - 1 * floor_change);
            }
            
        // Limits //
        if elevator_id = 0 then
            {
            if floor_current &gt; 665 then
                {
                floor_current = 665;
                Quest("cuchu_elevator_floor", 665);
                }
            else if floor_current &lt; 0 then
                {
                floor_current = 0;
                Quest("cuchu_elevator_floor", 0);
                }
            }
        else
            {
            if floor_current &gt; 3 then
                {
                floor_current = 3;
                Quest("pdt_elevator_floor", 3);
                }
            else if floor_current &lt; 0 then
                {
                floor_current = 0;
                Quest("pdt_elevator_floor", 0);
                }
            }    
        }
    }
    
// Open door //
if timer_open_door &gt; 0 then
    {
    // Tick down //
    timer_open_door -= dt();
    
    // Event //
    if timer_open_door &lt;= 0 then
        {
        // Within the elevator //
        if room = r_chu_elevator01 then
            {
            if instance_exists(o_mg_elevator_door_light) then with o_mg_elevator_door_light width_goal = 80;
            audio_play_sound_at_xy("sn_dooropen_tech", false, 10, view_xview + 192, view_yview + 120);
            }
        else if (false) //room = r_pdt_cargoElevator01 then
            {
            if instance_exists(o_mg_elevator_door_light) then with o_mg_elevator_door_light width_goal = 80;
            audio_play_sound_at_xy("sn_dooropen_tech", false, 10, view_xview + 192, view_yview + 120);
            }
        }
    }
    
// lifespan //    
if lifespan_check &gt; 0 then
    {
    // Tick down //
    lifespan_check -= dt();
    
    // Event //
    if lifespan_check &lt;= 0 then
        {
        // Reset timer //
        lifespan_check = 3;
        
        // Remove self if there is no elevator transit in progress //
        if elevator_id = 0 then
            {
            if scr_quest_get_state("cuchu_elevator_floor_goal") = scr_quest_get_state("cuchu_elevator_floor") and timer_open_door &lt;= 0 then 
                {
                if instance_exists(o_door_elevator01) then 
                    {
                    with o_door_elevator01 event_user(1);
                    o_door_elevator01.timer_stay_open = 25;
                    }
                instance_destroy();
                }
            }
        else
            {
            if scr_quest_get_state("pdt_elevator_floor_goal") = scr_quest_get_state("pdt_elevator_floor") and timer_open_door &lt;= 0 then 
                {
                if instance_exists(o_door_elevator01) then 
                    {
                    with o_door_elevator01 event_user(1);
                    o_door_elevator01.timer_stay_open = 25;
                    }
                instance_destroy();
                }
            }
        }
    }



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_color(c_red);
draw_set_alpha(1);
draw_rectangle(view_xview, view_yview, view_xview + 50, view_yview + 50, false);
draw_text(view_xview + 190, view_yview + 20, "timer_open_door = " + string(timer_open_door));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-250000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
timer_start_minigame = 20;
timer_end_minigame = 0;
timer_check_minigame = 5;
speeds = irandom(2);

music = audio_bgm_get_current();
global.event = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Bye event //
// Winning Bets //
if speeds = 0 and scr_quest_get_state("pdt_mowgli_bet") = 0 then result = 0;
if speeds = 1 and scr_quest_get_state("pdt_mowgli_bet") = 2 then result = 0;
if speeds = 2 and scr_quest_get_state("pdt_mowgli_bet") = 1 then result = 0;

// Losing Bets //
if speeds = 0 and scr_quest_get_state("pdt_mowgli_bet") != 0 then result = 1;
if speeds = 1 and scr_quest_get_state("pdt_mowgli_bet") != 2 then result = 1;
if speeds = 2 and scr_quest_get_state("pdt_mowgli_bet") != 1 then result = 1;

// Bot lose bets //
if speeds = 0 and scr_quest_get_state("pdt_mowgli_bet") = 1 then result = 2;
if speeds = 2 and scr_quest_get_state("pdt_mowgli_bet") = 0 then result = 2;
if speeds = 0 and scr_quest_get_state("pdt_mowgli_bet") = 2 then result = 2;

// Reset the horses //
o_mg_horserace_red.active = false;
o_mg_horserace_blue.active = false;
o_mg_horserace_green.active = false;

// Result 0 = Hoopz wins, Result 1 = Hoopz loses, Result 2 = both lose //

// red green, blue green, green blue //

/*Quest("pdt_mowgli_race", result + 1);
with o_pdt_mowgli01 
    {
    event_pdt_mowgli01(SCRIPT_INTERACT);
    }
    
/*
// GZ NOTE: Set the variables correctly here
with (npc_object) event_gbl_puzzlelock_riddle01 (SCRIPT_INTERACT);
*/

// Music //
audio_set_bgm(music);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Start //
if timer_start_minigame &gt; 0 then
    {
    // Tick down //
    timer_start_minigame -= dt();
    
    // Begin race //
    if timer_start_minigame &lt;= 0 then
        {
        o_mg_horserace_red.active = true;
        o_mg_horserace_blue.active = true;
        o_mg_horserace_green.active = true;
        switch (speeds)
            {
            case 0:
                o_mg_horserace_red.myspeed = 3;
                o_mg_horserace_blue.myspeed = 1;
                o_mg_horserace_green.myspeed = 2;
            break;
            case 1:
                o_mg_horserace_red.myspeed = 2;
                o_mg_horserace_blue.myspeed = 1;
                o_mg_horserace_green.myspeed = 3;
            break;
            case 2:
                o_mg_horserace_red.myspeed = 1;
                o_mg_horserace_blue.myspeed = 3;
                o_mg_horserace_green.myspeed = 2;
            break;
            }
        }
    }
    
// Check if the minigame is over //
if timer_check_minigame &gt; 0 then
    {
    // Tick down //
    timer_check_minigame -= dt();
    
    // Check //
    if timer_check_minigame &lt;= 0 then
        {
        if o_mg_horserace_red.x &gt;= 440 and o_mg_horserace_blue.x &gt;= 440 and o_mg_horserace_green.x &gt;= 440 then timer_end_minigame = 10;
        else timer_check_minigame = 5;
        }
    }
    
// End //
if timer_end_minigame &gt; 0 then
    {
    // Tick down //
    timer_end_minigame -= dt();
    
    // End //
    if timer_end_minigame &lt;= 0 then instance_destroy();
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_watershadow_small</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>95</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move x / y and delta
gunDropIndex = 0;
gunDrop[0] = "turald free"; gunSplash[0] = s_effect_splash_small; gunSprite[0] = s_watershadow_small;
gunDrop[1] = "turald weak"; gunSplash[1] = s_effect_splash_small; gunSprite[1] = s_watershadow_small;
gunDrop[2] = "turald good"; gunSplash[2] = s_effect_splash_medium; gunSprite[2] = s_watershadow_medium;
gunDrop[3] = "turald best"; gunSplash[3] = s_effect_splash_medium; gunSprite[3] = s_watershadow_medium;
gunDrop[4] = "turald best"; gunSplash[4] = s_effect_splash_big; gunSprite[4] = s_watershadow_large;
Drop("fixed", NULL);
Drop("enabled", 1);
list_status_effect = ds_list_create();
scr_stats_initStats();
scr_stats_setBaseStat(id, STAT_BASE_LUCK, scr_savedata_get("player.stats.effective." + STAT_BASE_LUCK));
x = o_cinema1.x;
y = o_cinema1.y;
xstart = x;
ystart = y;
imgSpd = 5;
imgSub = 0;
yDir = random(360);
yDix = 1;
ySpd = 180;
xDes = o_cinema2.x;
yDes = o_cinema2.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 
spd = 3; // In seconds how quick it gets to destination
state = "shadow";

// Get origins
xof = sprite_get_xoffset(s_turald_pull_fish);
yof = sprite_get_yoffset(s_turald_pull_fish);
for (i = 0; i &lt; 20; i += 1) { gunXof[i] = -999; gunYof[i] = 0; }
gunXof[2] = 49 - xof;  gunYof[2] = 44 - yof;
gunXof[3] = 47 - xof;  gunYof[3] = 34 - yof;
gunXof[4] = 46 - xof;  gunYof[4] = 29 - yof;
gunXof[5] = 48 - xof;  gunYof[5] = 43 - yof; // done
gunXof[6] = 41 - xof;  gunYof[6] = 46 - yof;
gunXof[7] = 44 - xof;  gunYof[7] = 43 - yof;
gunXof[8] = 47 - xof;  gunYof[8] = 39 - yof;
gunXof[9] = 51 - xof;  gunYof[9] = 37 - yof;
gunXof[10] = 45 - xof; gunYof[10] = 35 - yof;
gunXof[11] = 48 - xof; gunYof[11] = 32 - yof;
gunXof[12] = 47 - xof; gunYof[12] = 30 - yof;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kill stats
ds_map_destroy(stats_base);
ds_map_destroy(stats_effective);
ds_map_destroy(stats_current);
ds_list_destroy(list_status_effect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
if (paused()) exit;

if (state == "chum")
{
    yDir += ySpd * dt_sec();
    x = Goto(x, xDes, dt_sec() * (xDis / spd));
    y = Goto(y, yDes, dt_sec() * (yDis / spd));
    if (x == xDes &amp;&amp; y == yDes)
    {
        splash_fx = scr_fx_simple(x + 8, y + 8, 0, gunSplash[gunDropIndex]);
        splash_fx.dny = splash_fx.y + 99;
        audio_play_sound_ext("splash_in", 0, 0);
        instance_destroy();
    }
}
else if (state == "shadow")
{
    yDir += ySpd * dt_sec();
    imgSub += dt_sec() * imgSpd;
    
    x = Goto(x, xDes, dt_sec() * (xDis / spd));
    y = Goto(y, yDes, dt_sec() * (yDis / spd));
    if (x == xDes &amp;&amp; y == yDes) ySpd = 360;
}
else if (state == "caught")
{
    yDir += ySpd * dt_sec();
    
    x = Goto(x, xDes, dt_sec() * (xDis / spd));
    y = Goto(y, yDes, dt_sec() * (yDis / spd));
    if (x == xDes &amp;&amp; y == yDes)
    {
        gunObj.x = o_cinema3.x;
        gunObj.y = o_cinema3.y;
        instance_destroy();
    }
}
else if (state == "run")
{
    x = Goto(x, xDes, dt_sec() * (xDis / spd));
    y = Goto(y, yDes, dt_sec() * (yDis / spd));
    if (x == xDes &amp;&amp; y == yDes)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// state = line
state = "line";
depth = 0;

splash_fx = scr_fx_simple(x, y, 0, gunSplash[gunDropIndex]);
splash_fx.dny = splash_fx.y + 99;
audio_play_sound_ext("splash_in", 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// state = linefreeze
state = "linefreeze";
depth = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// state = caught
o_hoopz.x = o_cinema0.x;
o_hoopz.y = o_cinema0.y;

o_turald01.x += 4;
o_turald01.y += 4;

state = "caught";

x = o_turald01.x + gunXof[12];
y = o_turald01.y + gunYof[12];
xDes = o_cinema3.x;
yDes = o_cinema3.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 

depth = -500;
yDir = 0;
yDix = 16;
ySpd = 180;
spd = 0.5;
//gunObj.x = o_cinema3.x;
//gunObj.y = o_cinema3.y;
//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move turald
o_turald01.x -= 4;
o_turald01.y -= 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make gun drop
x = -999;
y = -999;

gunObj = Drop("gun", gunDrop[gunDropIndex]);

gunObj.timer = 9999999999;
gun = gunObj.gun;
x = xstart;
y = ystart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// RUN
state = "run";
x = x;
y = y;
xDes = o_cinema5.x;
yDes = o_cinema5.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SPLASH
o_turald01.shadow_visible = 0;
splash_fx = scr_fx_simple(x, y, 0, gunSplash[gunDropIndex]);
splash_fx.dny = -999;//splash_fx.y - 99;// + 99;
audio_play_sound_ext("splash_in", 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make this a chum object
state = "chum";
x = o_cts_hoopz.x;
y = o_cts_hoopz.y - 16;
xDes = o_cinema4.x;
yDes = o_cinema4.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 
yDir = 0;
yDix = 16;
ySpd = 180;
spd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gunDropIndex = 0;
gunDropIndex = Quest("fishgutQuest");
sprite_index = gunSprite[gunDropIndex];
if (gunDropIndex == 4)
{
    xDes = o_cinema2.x + 12;
    yDes = o_cinema2.y;
    xDis = point_distance(x, 0, xDes, 0); 
    yDis = point_distance(0, y, 0, yDes); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
if (state == "chum")
{
    draw_sprite_ext(s_mg_collect_guts, 0, x, y, 1, 1, 0, c_white, 1);
}
else if (state == "shadow" || state == "run")
{
    draw_sprite_ext(sprite_index, imgSub, x, y + lengthdir_y(yDix, yDir), 1, 1, 0, c_gray, 1);
}
else if (state == "line" || state == "linefreeze")
{
    var sub = 0;
    with (o_turald01)
    {
        var curAni = "catch";
        var frm = scr_entity_animation_getImage(curAni);
        sub = floor(frm);
    }
    if (state == "linefreeze") sub = 12;
    var scl = global.settingDropScale;
    var spr = assetOrNull(gun[? "hudIconSprite"], asset_sprite);
    var syb = gun[? "hudIconFrame"];
    var xof = floor((49 / 2) * scl);
    var yof = floor((24 / 2) * scl);
    HUD("gun draw", spr, syb, o_turald01.x + gunXof[sub] - xof, o_turald01.y + gunYof[sub] - yof, scl, scl, c_white, 1);
}
else if (state == "caught")
{
    var scl = global.settingDropScale;
    var spr = assetOrNull(gun[? "hudIconSprite"], asset_sprite);
    var syb = gun[? "hudIconFrame"];
    var xof = floor((49 / 2) * scl);
    var yof = floor((24 / 2) * scl);
    HUD("gun draw", spr, syb, x - xof, y + lengthdir_y(yDix, yDir) - yof, scl, scl, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

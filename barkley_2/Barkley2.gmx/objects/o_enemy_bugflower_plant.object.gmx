<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bugflower_plant</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>DestructibleCombatActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////you get all the default variables from EnemyCombatActor
event_inherited();

// Enemy stats
scr_stats_setBaseStat(self, STAT_BASE_HP, 50)

scr_stats_rollBaseStats(1, 1, 1, 1, 1, 1);
scr_stats_levelUp(1,0,0,0,0,0);

scr_stats_hook_onHit_userEvent(10);

// Ailment totem coordinates //
ailmentTotem_define(self.id, -16, 18, 32, 50);

// Enemy configurations
scr_entity_setZHitbox(0, global.settingEnemyBigHeight);

///that function fills in the monster's default resistances
///based on its monster type.

baseFrm = irandom(3);
leafFrm = irandom(3);
flowerFrm = irandom(3);

baseHscale = choose(1,-1);
baseVscale = choose(1,-1);
leafHscale = choose(1,-1);
flowerHscale = choose(1,-1);

shake = 0;
rotate = 0;
liferatio = 1;

spdz = 0;

p_AI_passive = -1;
p_AI_active = -1;
p_action[0] = -1;

goreAccum = 0;
is_mimic=false;


// Sets the chance for the plant to be a mimic
var chance = random(100);
if chance &lt;= 20 {is_mimic=true;} //20% chance for mimics

if instance_exists(o_enemy_bugflower_mimic)
    {
    var mimic = instance_nearest(x, y, o_enemy_bugflower_mimic);
    if point_distance(x,y,mimic.x,mimic.y) &lt; 150 {is_mimic = false;} //150 pixel radius dispersement
    }
    
if is_mimic==true
    {
    instance_create(x,y,o_enemy_bugflower_mimic);
    instance_destroy();
    }
    
collisionPush=ACTOR_COLLISIONPUSH_IMMOBILE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(z&gt;0)
{
    if(spdz&lt;2){spdz+=0.1;}
    z-=spdz;
}
else{spdz = 0;}

if(shake&gt;0.25*dt()){shake -=0.25*dt();}else{shake = 0;}
if(rotate&gt;1*dt()){rotate-=dt();}else{rotate = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var atk = argument_attackId;
callback_allowDamage = false;

lastDmg = scr_stats_performAttack(atk.stats_attack, id, false, 0, false, true);

shake = 4*min(1,lastDmg/30);
rotate = 20*min(1,lastDmg/40);

event_user(4);

///liferatio = scr_stats_getCurrentStat(id,STAT_CURRENT_HP) / scr_stats_getEffectiveStat(id,STAT_BASE_HP);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _obj;

var _obj;

_obj = instance_create(x,y,o_FX);
_obj.sprite_index = sprite_index;
_obj.image_index = baseFrm;
_obj.image_xscale = baseHscale;
_obj.image_yscale = baseVscale;
_obj.leaveCorpse = true;
_obj.depth = -_obj.y + 200;
_obj.image_speed = 0;

repeat(irandom(5))
{
    event_user(4);
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_obj = instance_create(x,y,o_gibs);
_obj.z = z + 10;
_obj.sprite_index = s_bugflower_plant_gore;
_obj.image_index = 3 + irandom(6);
_obj.move_z = 3 + random(9);
_obj.gravity_z = 2;
_obj.bloodburst = noone;
_obj.shadow_radius = 4;
_obj.bounces = choose(0,0,1,1,2);
with(_obj){scr_math_dirDistToVector(random(360), 1 + random(1));}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var xshake = random(shake)-shake/2;
var yshake = random(shake)-shake/2;

var rot = random(rotate)-rotate/2;

draw_sprite_ext(sprite_index,baseFrm,dx+xshake/2,dy+yshake/2,baseHscale,baseVscale,0,image_blend,image_alpha);
draw_sprite_ext(sprite_index,4 + leafFrm,dx+xshake,dy+yshake,leafHscale,1,rot/2,image_blend,image_alpha);
if(liferatio&gt;0.3){draw_sprite_ext(sprite_index,8 + flowerFrm,dx+xshake*1.4,dy+yshake*1.4,flowerHscale,1,rot,image_blend,image_alpha);}
draw_sprite_ext(sprite_index,12 + leafFrm,dx+xshake,dy+yshake,leafHscale,1,rot/2,image_blend,image_alpha);

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>21,38</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>

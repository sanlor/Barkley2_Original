<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Particle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit form parent //
event_inherited();

if (scr_area_get() == "ice") visible = 0;

wadChk = 2; // To make resist half in wading layer
zone = "";

/// Create
z = -999999; // Added!

dny = 100; // -(y + dny)
pushTime = 0.5; // In seconds how long you need to hold
pushResist = 70; // Pushing resist, higher is more pusback
light = 1; // When 0, it does not show the light
depth = 1; // This is so it goes under doors
fix = 1; // If 1, adds the top fix
locked = 0;
name = "";
spw = sprite_width;
sph = sprite_height;
area_change = false;
area = "TNN Sewers";
area_change_audio = true;
enable = 1;
enableDraw = 0;
keepX = 0;
keepY = 0;

// Do not edit below
kid = -999;
lockedOld = locked;
type = "up"; // "ud" or "lr"
prsCou = 0;

rom = r_gau_NPCVilla01;
gox = 304;
goy = 304;


lox = -99999;
loy = -99999;
hix = 99999;
hiy = 99999;

did = 0; // Is 1 on begin if hit

_fade_timer = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit form parent //
event_inherited();
if (enable == 0) exit;
/// Do resistance

if (did)
{
    obj = PlayerCombatActor.id;
    obj.x += (pusX * resX) * dt_sec();
    obj.y += (pusY * resY) * dt_sec();
    obj.x = clamp(obj.x, lox, hix);
    obj.y = clamp(obj.y, loy + obj.z, hiy + obj.z);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step - Alpha

// Inherit form parent //
event_inherited();
if (enable == 0) exit;
// Check for locked
if (locked != lockedOld)
{
    if (kid != -999) 
    {
        if (locked == 1) { with (kid) event_user(0); }
        else  { with (kid) event_user(1); }
    }
    lockedOld = locked;
}

// Resist
did = 0;
lox = -99999;
loy = -99999;
hix = 99999;
hiy = 99999;
myx = x;
myy = y;
if (instance_exists(PlayerCombatActor))
{
    obj = PlayerCombatActor.id; // Hoopz almost certainly
    objX = obj.x;
    objY = obj.y - obj.z;
    if (type == "up") dis = PointToLineDistance(objX, objY, x, y, x + siz, y);
    else if (type == "down") dis = PointToLineDistance(objX, objY, x, y + 16, x + siz, y + 16);
    else if (type == "right") dis = PointToLineDistance(objX, objY, x + 16, y + siz, x + 16, y);
    else if (type == "left") dis = PointToLineDistance(objX, objY, x, y, x, y + siz);
    image_alpha = clamp(abs(dis / 256), 0, 0.33);
    image_alpha = abs(0.33 - image_alpha);
    image_alpha *= 1 + random(0.1);
    
    // Input
    if (type == "up")
    {
        if (y == 0) myy += 16;
        if (objX &gt;= myx &amp;&amp; objX &lt;= myx + siz &amp;&amp; objY &gt;= myy &amp;&amp; objY &lt;= myy + 16)
        {
            // restrict hoopz movement
            did = 1;
            loy = myy;
            resY = (8 + abs(abs(objY - myy))) / 24;
            resX = 0;
            pusX = 0;
            pusY = pushResist;
            // restrict hoopz movement
            var ku = scr_input_check_held(KEYID_UP, PLAYER1);
            var kd = scr_input_check_held(KEYID_DOWN, PLAYER1);
            var ky = ku - kd;
            prsCou += ky * dt_sec();
            if (ky == 0) prsCou = 0;
            if (prsCou &gt;= pushTime) event_user(0);
        }
    }
    if (type == "down")
    {
        if (objX &gt;= x &amp;&amp; objX &lt;= x + siz &amp;&amp; objY &gt;= y - 16 &amp;&amp; objY &lt;= y)
        {
            //restrict hoopz movement
            did = 1;
            hiy = y;
            resY = (8 + abs(abs(objY - y))) / 24;
            resX = 0;
            pusX = 0;
            pusY = -pushResist;
            // restrict hoopz movement
            var ku = scr_input_check_held(KEYID_UP, PLAYER1);
            var kd = scr_input_check_held(KEYID_DOWN, PLAYER1);
            var ky = ku - kd;
            prsCou += ky * dt_sec();
            if (ky == 0) prsCou = 0;
            if (prsCou &lt;= -pushTime) event_user(0);
        }
    }
    if (type == "right")
    {
        if (objX &gt;= x &amp;&amp; objX &lt;= x + 16 &amp;&amp; objY &gt;= y &amp;&amp; objY &lt;= y + siz)
        {
            //restrict hoopz movement
            did = 1;
            //lox = x; // added
            hix = x + 16;
            resX = (8 + abs(abs(objX - (x + 16)))) / 24;
            resY = 0;
            pusX = -pushResist;
            pusY = 0;
            // restrict hoopz movement
            var ku = scr_input_check_held(KEYID_RIGHT, PLAYER1);
            var kd = scr_input_check_held(KEYID_LEFT, PLAYER1);
            var ky = ku - kd;
            prsCou += ky * dt_sec();
            if (ky == 0) prsCou = 0;
            if (prsCou &gt;= pushTime) event_user(0);
        }
    }
    if (type == "left")
    {
        if (objX &gt;= x - 16 &amp;&amp; objX &lt;= x &amp;&amp; objY &gt;= y &amp;&amp; objY &lt;= y + siz)
        {
            //restrict hoopz movement
            did = 1;
            lox = x - 16;
            //hix = x; // added
            resX = (8 + abs(16 - abs(objX - x))) / 24;
            resY = 0;
            pusX = pushResist;
            pusY = 0;
            // restrict hoopz movement
            var ku = scr_input_check_held(KEYID_RIGHT, PLAYER1);
            var kd = scr_input_check_held(KEYID_LEFT, PLAYER1);
            var ky = ku - kd;
            prsCou += ky * dt_sec();
            if (ky == 0) prsCou = 0;
            if (prsCou &lt;= -pushTime) event_user(0);
        }
    }
}
//if (type == "left" &amp;&amp; prsCou != 0) show_debug_message("doorlight = " + string(prsCou));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit from parent //
event_inherited();

//Check to see if the "Demo Blocker" is on, destroy only the the doorlights
if (global.demoBlocker == 1) &amp;&amp; (!DemoMapCheck(rom)) &amp;&amp; !string_pos("o_blocker_", object_get_name(object_index)) {
    instance_create (x, y, o_wst_darkDraker01)
    instance_destroy();   
}
if (wadChk &gt; 0)
{
    wadChk = Goto(wadChk, 0, 1);
    if (wadChk == 0)
    {
        if (scr_collision_point_free(x, y, 0, COLLISION_WADING) == 0)
        {
            pushResist /= 2;
        }
    }
}

scr_dny(dny);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Teleport code
if (locked || global.battleMode) exit;
if (Stat("hp") &lt;= 0) exit

enable = 0;
enableDraw = 1;
global.eventObject = id;
global.eventInteract = false;
global.eventFacing = o_hoopz.facing;
var room_var = rom;
var x_var = gox;
var y_var = goy;
var fade = _fade_timer;
o_hoopz.invulnerable = true;

oBlack.roomGoto = room_var;
oBlack.roomX = x_var;
oBlack.roomY = y_var;
oBlack.roomTimer = 1;
oBlack.alpha = 0.001;
oBlack.alphaGoal = 1;
oBlack.alphaTime = global.settingFadeIn;
global.hudStick = 1;
if (keepY) global.hoopzKeepY = o_hoopz.y;
if (keepX) global.hoopzKeepX = o_hoopz.x;

if (zone != "")
{
    audio_set_bgm_fast("mus_blankTEMP");
    audio_play_sound_at_xy("trailing_steps", false, 10, x, y);
    /*
    scr_teleport_zone(zone);
    zone = "";
    if instance_exists(oZoneName) then with (oZoneName) timer_ending = 1;
    obj = instance_create(x, y, oZoneName);
    obj.zone = area_name;
    obj.flavor = area_flavor;
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit from parent
dod = 1;
if (enable == 0) dod = 0;
if (enableDraw == 1) dod = 1;
if (dod == 0) exit;
event_inherited();
if (global.battleMode) image_blend = c_red; else image_blend = c_white;
/// Draw - Add blend (may cause slowdown)
if (type == "up" &amp;&amp; fix) draw_sprite(s_doorlight_fix, 0, x, y - 44);
if (image_alpha &lt;= 0 || light == 0) exit;
draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DJ SEGMENTS // 0 = anime bulldog, 1 = the other guy // Change the dj variable when you create this instance accordingly //
dj = 0;

// Start timer //
timer = 30; //180
timer_segment = 100; //2300 // 385
timer_return = 0;   // 0 default
timer_camera = 25;

// Lights off //
o_mg_booty_surface.no_lights = true;
with o_mg_booty_surface event_user(4);
Music("queue", "mus_blankTEMP");

instance_create(0, 0, o_mg_booty_camera);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go back to dialog
global.event = false;
with (o_stonewallBootyDaimyoJackson01) Cinema("run", script);

with (o_mg_booty_camera) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set event to true to freeze camera
global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Count the timer down //
if timer &gt; 0 then
    {
    // Tick down //
    timer -= dt();
    
    // Event //
    if timer &lt;= 0 then
        {
        if dj = 0 then
            {
            music = "mus_tnn_animebulldog";
            audio_play_sound_ext(music, 0, false);
            o_mg_booty_surface.light_mode = 2;
            o_mg_booty_surface.no_lights = false;
            with o_mg_booty_surface event_user(1);
            }
        else
            {
            music = "mus_tnn_bootyclapper";
            audio_play_sound_ext(music, 0, false);
            o_mg_booty_surface.light_mode = 3;
            o_mg_booty_surface.no_lights = false;
            with o_mg_booty_surface event_user(2);
            }
        }
    }
    
// Segment timer to check out when its over //
if timer_segment &gt; 0 then
    {
    // Tick down //
    timer_segment -= dt();
    
    // This is where it supposedly ends //
    if timer_segment &lt;= 0 then
        {
        if audio_is_playing_ext(music) then timer_segment = 5;
        else
            {
            timer_return = 10;
            with o_mg_booty_surface event_user(4);
            }
        }
    }
    
// End times are at hand //
if timer_return &gt; 0 then 
    {
    // Tick down /
    timer_return -= dt();
    
    // Event //
    if timer_return &lt;= 0 then
        {
        Music("queue", "mus_tnn_bootylectro");
        with o_mg_booty_surface event_user(3);
        instance_destroy();
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

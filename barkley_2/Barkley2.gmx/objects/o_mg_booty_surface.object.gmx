<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_goofControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
surface = -1;

// Music change //
audio_set_bgm_instant("mus_tnn_bootylectro");

// Set initial lights //
event_user(3);
    
// Specific lights and shit //
light_mode = 0;
no_lights = false;
dj_spotlight = 0;

// Particle fog color inside bootybaqss room //
particle_c1 = make_color_rgb(240, 10, 120);
particle_c2 = make_color_rgb(240, 50, 140);

// Particle system setup //
interval = 2;

system = part_system_create();
part_system_depth(system, -9999);

emitter = part_emitter_create(system);
part_emitter_region(system, emitter, 64, room_width-64, 64, room_height-64, ps_shape_rectangle, ps_distr_linear);

particle = part_type_create();
part_type_alpha3(particle, 0.05, 0.05, 0.01);
part_type_color2(particle, particle_c1, particle_c2);
part_type_life(particle, 100, 200);
part_type_speed(particle, 0, 0.01, 0.025, 0);
part_type_direction(particle, 0, 360, 1, 0);
part_type_size(particle, 0.1, 0.25, 0.02, 0);
part_type_shape(particle, pt_shape_flare);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Particle fog //
// Interval //
if interval &gt; 0 then
    {
    interval -= dt();
    
    // Event //
    if interval &lt;= 0 then
        {
        part_type_color2(particle, particle_c1, particle_c2);
        if instance_exists(o_mg_booty_minigame) then
            {
            part_emitter_burst(system, emitter, particle, irandom(8) + 4 + round(o_mg_booty_minigame.adoration * 0.1));
            interval = irandom(6) + 10 - round(o_mg_booty_minigame.adoration * 0.02);
            part_type_alpha3(particle, 0.1, 0.15, 0.05);
            }
        else 
            {
            part_emitter_burst(system, emitter, particle, irandom(8) + 4);
            interval = irandom(6) + 10;
            part_type_alpha3(particle, 0.05, 0.05, 0.01);
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove all lights
if instance_exists(o_mg_booty_light) then
    {
    with o_mg_booty_light 
        {
        if light_type != 3 and light_type &lt; 7 then image_alpha_goal = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First remove all lights
event_user(4);

// Normal lights //
repeat (3) 
    {
    bonk = instance_create(irandom(room_width), irandom(room_height), o_mg_booty_light);
    bonk.light_type = 4;
    }
repeat (4) 
    {
    bonk = instance_create(irandom(room_width), irandom(room_height), o_mg_booty_light);
    bonk.light_type = 2;
    }

// FOG //
particle_c1 = make_color_rgb(240, 10, 120);
particle_c2 = make_color_rgb(240, 50, 140);

// Light mode //
light_mode = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First remove all lights
event_user(4);

// Bootyslayer //
repeat (3) 
    {
    bonk = instance_create(16 + irandom(room_width - 32), 16 + irandom(room_height - 32), o_mg_booty_light);
    bonk.light_type = 6;
    }
repeat (4) 
    {
    bootyclap = instance_create(irandom(room_width), irandom(room_height), o_mg_booty_light);
    bootyclap.image_blend = make_color_rgb(40, 180, 255);
    bootyclap.light_type = 2;
    }

// FOG //
particle_c1 = make_color_rgb(50, 200, 250);
particle_c2 = make_color_rgb(10, 160, 240);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First remove all lights
event_user(4);

// Anime bulldog lights //
bonk = instance_create(view_xview + 192, view_yview + 120, o_mg_booty_light);
bonk.light_type = 5;
repeat (4) 
    {
    bonk = instance_create(16 + irandom(room_width - 32), 16 + irandom(room_height - 32), o_mg_booty_light);
    bonk.light_type = 1;
    }

// Fog color //
particle_c1 = make_color_rgb(250, 20, 25);
particle_c2 = make_color_rgb(250, 10, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First remove all lights //
event_user(4);

// Fog //
particle_c1 = make_color_rgb(240, 240, 10);
particle_c2 = make_color_rgb(150, 250, 40);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Free surface //
surface_free(surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the surface //
if surface_exists(surface) then
    {
    // Surface dickery mode //
    surface_set_target(surface);
    if no_lights = false then draw_clear_alpha(c_black, 0.75); //was .85
    else draw_clear_alpha(c_black, 0.85); //was .95
    surface_reset_target();
    surface_set_target(surface);
    draw_set_blend_mode(bm_subtract);
    
    // Dj spotlight always on //
    draw_sprite_ext(s_mg_booty_light_flash, 0, o_animeBulldog01.x, o_animeBulldog01.y - 6, 1, 1, 0, c_white, 0.2);
    draw_sprite_ext(s_mg_booty_light_flash, 0, o_bootySlayer01.x, o_bootySlayer01.y - 6, 1, 1, 0, c_white, 0.2);

    // DJ Spotlights for cutscenes //
    if scr_quest_get_state("bootybassSpotlight") = 1 and instance_exists(o_cts_hoopz) then draw_sprite_ext(s_mg_booty_light_flash, 0, o_cts_hoopz.x, o_cts_hoopz.y - 6, 1, 1, 0, c_white, 1);
    else if scr_quest_get_state("bootybassSpotlight") = 2 then draw_sprite_ext(s_mg_booty_light_flash, 0, o_animeBulldog01.x, o_animeBulldog01.y - 6, 1, 1, 0, c_white, 1);
    else if scr_quest_get_state("bootybassSpotlight") = 3 then draw_sprite_ext(s_mg_booty_light_flash, 0, o_bootySlayer01.x, o_bootySlayer01.y - 6, 1, 1, 0, c_white, 1);
    
    // Spotlights //
    if scr_quest_get_state("bootybassSpotlight") = 0 then
        {
        draw_sprite_ext(s_mg_booty_light_flash, 0, 384, 192, 1, 1, 0, c_white, 0.3);
        draw_sprite_ext(s_mg_booty_light_flash, 0, o_animeBulldog01.x, o_animeBulldog01.y - 6, 1, 1, 0, c_white, 0.3);
        draw_sprite_ext(s_mg_booty_light_flash, 0, o_bootySlayer01.x, o_bootySlayer01.y - 6, 1, 1, 0, c_white, 0.3);
        }
    
    // Do I draw these? //
    if no_lights = false then
        {
        // LIGHTS // Normal bootybass
        if light_mode = 0 then
            {
            // Normal lights //
            with o_mg_booty_light if light_type = 4 then draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, image_blend, image_alpha);
            with o_mg_booty_light if light_type = 2 then draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, image_blend, image_alpha);
            }
            
        // LIGHTS // Hoopz //
        else if light_mode = 1 then
            {
            with o_mg_booty_light 
                {
                if light_type = 0 then
                    {
                    draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, image_blend, image_alpha);
                    draw_sprite_ext(s_mg_booty_light_orbit, 0, x, y, 1, 1, 0, image_blend, image_alpha - 0.1);
                    }
                }
            
            // Spotlight on the player turntable //   
            draw_sprite_ext(s_mg_booty_light_flash, 0, 384, 192, 1, 1, 0, c_white, 1);
            //draw_sprite_ext(s_mg_booty_light_flash, 0, 307, 119, 1, 1, 0, c_white, 1);
            }
            
        // LIGHTS // Anime bulldog //
        else if light_mode = 2 then
            {
            with o_mg_booty_light if light_type = 5 then draw_sprite_ext(sprite_index, image_index, x, y, light_size, light_size, image_angle, image_blend, image_alpha);
            with o_mg_booty_light if light_type = 1 then draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, image_angle, image_blend, image_alpha);
            
            // Spotlight //   
            draw_sprite_ext(s_mg_booty_light_flash, 0, o_animeBulldog01.x, o_animeBulldog01.y - 6, 1, 1, 0, c_white, 1);
            }
            
        // Lights // That other guy //
        else if light_mode = 3 then
            {
            with o_mg_booty_light if light_type = 6 then draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, image_angle, image_blend, image_alpha);
            
            // Spotlight //  
            draw_sprite_ext(s_mg_booty_light_flash, 0, o_bootySlayer01.x, o_bootySlayer01.y - 6, 1, 1, 0, c_white, 1);
            }
        }
        
    // Other lights that are always there //  
    with o_mg_booty_light if light_type = 3 then draw_sprite_ext(sprite_index, o_hyacinth01.image_index, x, y, 1, 1, 0, image_blend, image_alpha);
    with o_mg_booty_light if light_type = 7 then draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, 1, 0, image_blend, image_alpha);
    with o_mg_booty_light if light_type = 8 then draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, image_blend, image_alpha); 
    
    // Back to normal //
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    draw_surface_ext(surface, 0, 0, 1, 1, 0,c_white, 1);
    }
else
    {
    surface = surface_create(room_width, room_height);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>

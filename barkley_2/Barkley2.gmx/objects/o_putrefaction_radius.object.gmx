<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Zaubers</parentName>
  <maskName>mask_disk_64by64</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

target_radius = 32; //Alters based on charge
current_radius = 0;
sin_radius = 0;

draw_sin = 0;

lifetime = 40; //Alters based on charge
puffTimer = 0; //current progress of spawn puffery

dny = 200;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

// Set radius
sin_radius = min(sin_radius + .2*dt() * pi/2, pi/2)
current_radius = sin(sin_radius) * target_radius;

draw_sin += dt();

// Adjust hitmask size
image_xscale = current_radius / 32;
image_yscale = (current_radius * .8) / 32;

// Apply putrefraction to anyone within range
var me = id;
with (CombatActor) {
    if (place_meeting(x, y, me)) {
        scr_statusEffect_applyFromScriptToCombatActor(statusEffect_putrefaction, id);
    }
}

// Destroy zauber when touching Sanctuquarry
// TODO

// Spawn puff particles
puffTimer -= dt() * (current_radius / 32);
while (puffTimer &lt;= 0) {
    if (current_radius &gt; 4) {
        var dir = random(360);
        var dist = random(current_radius - 4);
        var puff = instance_create(x + lengthdir_x(dist, dir), y + lengthdir_y(dist, dir), o_effect_generic_animateOnce);
        puff.z = z;
        puff.sprite_index = s_putrefication_puff;
        with (puff) {
            scr_entity_animation_setSpeed(ANIMATION_DEFAULT, .5 + random(.5));
            move_z = 0 + random(1);
        }
    }
    
    puffTimer += .5;
}

// Time out
lifetime -= dt();
if (lifetime &lt;= 0) {
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var alpha = min(lifetime/50, .25) + sin(draw_sin * 4) * .03;

var outer_radius = current_radius + 4;
var inner_radius = current_radius * .9;

draw_set_blend_mode(bm_add);
draw_set_alpha(alpha);
draw_ellipse_colour(dx-(outer_radius),dy-(outer_radius*.8),dx+(outer_radius),dy+(outer_radius*.8),c_bio,c_bio,false);
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mg_elevator_frontpanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
shadow_radius = false;

// Get current floor and proper event //
instance_create(x + 8, y + 40, oDummy);
if (room == r_swp_cuchuelevator01) // room == r_chu_elevatorLobby01 || 
{
    floor_current = scr_quest_get_state("cuchu_elevator_floor");
    elevator_id = 0;
    scr_event_hook_onCommon(event_cinema);
script = "
MOVETO | o_cts_hoopz | oDummy | MOVE_NORMAL
WAIT   | 0
USEAT  | o_mg_elevator_call
IF room == r_swp_cuchuelevator01 | QUEST | cuchu_elevator_floor_goal = 0
IF room == r_chu_elevatorLobby01 | QUEST | cuchu_elevator_floor_goal = 665
Create | o_mg_elevator_persistent_transit
";
}

// Display number //
display = floor_current + 1;

// Animations
// Default Anim for moving up and down
scr_entity_animation_define("â€‹default",s_mg_elevator_frontpanel,0,2,ANIMATION_DEFAULT_SPEED);

//For the borking event
scr_entity_animation_define("borkRed", s_mg_elevator_frontpanel, 2, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("borkProcess", s_mg_elevator_frontpanel, 2, 5, ANIMATION_DEFAULT_SPEED);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit //
event_inherited();

// Pause //
if paused() exit;

// Check for the goal and current position //
if elevator_id = 0 then
    {
    floor_goal = scr_quest_get_state("cuchu_elevator_floor_goal");
    floor_current = scr_quest_get_state("cuchu_elevator_floor");
    }
else
    {
    floor_goal = scr_quest_get_state("pdt_elevator_floor_goal");
    floor_current = scr_quest_get_state("pdt_elevator_floor");
    }

// Elevator //
/*if timer_elevator &gt; 0 then
    {
    // Tick down //
    timer_elevator -= dt();
    
    // Event //
    if timer_elevator &lt;= 0 then
        {
        // Reset timer //
        timer_elevator = 1;

        // Open the doors // Bottom floor //
        if room = r_swp_cuchuelevator01 then
            {
            if floor_current = 0 then
                {
                timer_elevator = 0;
                with o_door_parent event_user(1);
                }
            }
            
        // Open the doors // Top floor //
        else 
            {
            if floor_current = 665 then
                {
                timer_elevator = 0;
                with o_door_parent event_user(1);
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Display the floor on the panel //
draw_set_alpha(1);
draw_set_font(global.fn_elevator);
if instance_exists(o_mg_elevator_persistent_transit) then draw_set_color(c_red); 
else draw_set_color(c_green);

// Lead zeroes //
if floor_current+1 &lt; 10 then display = "00" + string(floor(floor_current+1));
else if floor_current+1 &lt; 100 then display = "0" + string(floor(floor_current+1));
else display = string(floor(floor_current+1));

// Text //
draw_text(x + 3, y + 3, string(display));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>14,39</point>
    <point>21,21</point>
  </PhysicsShapePoints>
</object>

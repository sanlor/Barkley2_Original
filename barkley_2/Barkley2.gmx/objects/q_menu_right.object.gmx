<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2510000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wid = SCREEN_WIDTH/5;
hei = ((SCREEN_HEIGHT/4)*3)-20;
startX = SCREEN_WIDTH;
startY = (SCREEN_HEIGHT/4)-13;
targetX = SCREEN_WIDTH - wid + 10;
targetY = startY;
lerpSpeedShow = 0.2;
lerpSpeedHide = 0.4;

floatDuration = 1;
floatAmount = 0;
floatPoint = 0; //Radians

startScaleX = 0;
startScaleY = 1;
borderId = 21;

//No touch
Border("generate", borderId, wid, hei);
x = startX;
y = startY;
image_xscale = startScaleX;
image_yscale = startScaleY;
hiding = 0;

surf = 0;

with (o_hoopz){
    combat_gunwield_reset();
    scr_player_calculateWeight();
    scr_stats_genEffectiveStats();
    scr_stats_resetCurrentStats();
}
stats[0] = scr_savedata_get("player.stats.base." + STAT_BASE_GUTS);
stats[1] = scr_savedata_get("player.stats.base." + STAT_BASE_LUCK);
stats[2] = scr_savedata_get("player.stats.base." + STAT_BASE_AGILE);
stats[3] = scr_savedata_get("player.stats.base." + STAT_BASE_MIGHT);
stats[4] = scr_savedata_get("player.stats.base." + STAT_BASE_PIETY);
stats[5] = scr_stats_getEffectiveStat(o_hoopz, STAT_EFFECTIVE_MAX_HP);
stats[6] = floor(scr_savedata_get("player.xp.questxp"));
stats[7] = scr_stats_getEffectiveStat(o_hoopz, STAT_BASE_WEIGHT);
stats[8] = scr_stats_getEffectiveStat(o_hoopz, STAT_BASE_RESISTANCE_NORMAL);
if(Quest("mummysCurse") == 1) stats[9] = "Scourged";
else stats[9] = "Uncursed";
stats[10] = o_hoopz.list_status_effect;
stats[12] = scr_stats_getEffectiveStat(o_hoopz, STAT_BASE_SPEED);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>quickmenu2</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"killSurface"</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>surf</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hide animation;
    hiding = !global.quickmenuShown;

if(hiding == 1){
    if(x == startX and 
        y == startY and 
        image_xscale == startScaleX and
        image_yscale == startScaleY) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(not surface_exists(surf)){
    surf = surface_create(wid, hei);
}
    surface_set_target(surf);
    draw_clear_alpha(c_white,0);
    Border("draw", borderId, 0, 0);
    
    // DEFENSE   
    draw_sprite_ext(sMenuUtilityDefense, 0, 8, 10, 1, 1, 0, c_white, 0.8*global.quickmenuTextAlpha);
    quickmenu2("write", global.fn_1b, c_yellow, 26, 30, fa_center, fa_middle, stats[8] );
    
    quickmenu2("write", global.fn_7ocs, c_orange, 17, 108, fa_center, fa_middle, "G" );
    quickmenu2("write", global.fn_7oc, c_white, 17, 116, fa_center, fa_middle, stats[0] );
    quickmenu2("write", global.fn_7ocs, c_orange, 38, 108, fa_center, fa_middle, "L" );
    quickmenu2("write", global.fn_7oc, c_white, 38, 116, fa_center, fa_middle, stats[1] );
    quickmenu2("write", global.fn_7ocs, c_orange, 59, 108, fa_center, fa_middle, "A" );
    quickmenu2("write", global.fn_7oc, c_white, 59, 116, fa_center, fa_middle, stats[2] );
    quickmenu2("write", global.fn_7ocs, c_orange, 26, 127, fa_center, fa_middle, "M" );
    quickmenu2("write", global.fn_7oc, c_white, 26, 135, fa_center, fa_middle, stats[3] );
    quickmenu2("write", global.fn_7ocs, c_orange, 50, 127, fa_center, fa_middle, "P" );
    quickmenu2("write", global.fn_7oc, c_white, 50, 135, fa_center, fa_middle, stats[4] );
        
    quickmenu2("write", global.fn_7ocs, c_orange, 22, 48, fa_right, fa_middle, "LVL:" );
    quickmenu2("write", global.fn_7oc, c_white, 22, 48, fa_left, fa_middle, stats[6] );
    
    quickmenu2("write", global.fn_7ocs, c_orange, 48, 48, fa_right, fa_middle, "HP:" );
    quickmenu2("write", global.fn_7oc, c_white, 48, 48, fa_left, fa_middle, stats[5] );

    quickmenu2("write", global.fn_7oc, c_orange, 160, 40, fa_right, fa_middle, "W:" );
    quickmenu2("write", global.fn_7oc, c_white, 162, 40, fa_left, fa_middle, stats[7]);

    quickmenu2("write", global.fn_7ocs, c_orange, 10, 60, fa_left, fa_middle, "Malaises:" );
    if( ds_list_size(stats[10]) == 0) quickmenu2("write", global.fn_7ocs, c_yellow, 60, 60, fa_right, fa_middle, "N/A" );
    else for (i = 0; i &lt; ds_list_size(stats[10]); i += 1) {
        var map = ds_list_find_value(stats[10], i);
        var scr = ds_map_find_value(map, "script");
        quickmenu2("write", global.fn_7ocs, c_white, 10, 60+15*i, fa_left, fa_middle, script_get_name(scr) ); //TODO: funny names
    }
    //quickmenu2("write", global.fn_7ocs, c_yellow, 10, 60+13*1, fa_left, fa_middle, "Test malaise 1");
    //quickmenu2("write", global.fn_7ocs, c_yellow, 10, 60+13*2, fa_left, fa_middle, "Test malaise 2");

    quickmenu2("write", global.fn_7ocs, c_orange, 10, 98, fa_left, fa_middle, stats[9]);

    stats[12] = scr_stats_getEffectiveStat(o_hoopz, STAT_BASE_SPEED);
    //quickmenu2("write", global.fn_7ocs, c_orange, 20, 20, fa_center, fa_middle, stats[12]);

    draw_sprite_ext(s_qm_shiftBox01, 0, 50, 15, 1, 1, 0, c_yellow, global.quickmenuTextAlpha);
    var maxSpeed = 15;
    positionsX[0] = 1; positionsY[0] = 7;
    positionsX[1] = 7; positionsY[1] = 7;
    positionsX[2] = 11; positionsY[2] = 7;
    positionsX[3] = 3; positionsY[3] = 17;
    positionsX[4] = 9; positionsY[4] = 17;
    var index = floor((min(maxSpeed, stats[12])/maxSpeed) * 5)
        draw_sprite_ext(s_qm_shiftKnob01, 0, 50+positionsX[index]-4, 15+positionsY[index]-9, 1, 1, 0, c_white, global.quickmenuTextAlpha);

    surface_reset_target();

if(hiding == 0) {
    quickmenu2("showAnimation", self, targetX, targetY); 
} else if(hiding == 1){ 
    quickmenu2("hideAnimation", self, startX, startY, startScaleX, startScaleY);
}

draw_surface_ext(surf, view_xview[0]+x, view_yview[0]+y, image_xscale, image_yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

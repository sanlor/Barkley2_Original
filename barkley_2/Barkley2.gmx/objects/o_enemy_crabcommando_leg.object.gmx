<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_boss_crabcommander_leg_SW</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>BlockingCombatActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Combat stuff
displaysDamage = false;
scr_actor_setActorPushType(ACTOR_COLLISIONPUSH_IMMOBILE);
scr_actor_setActorPushDist(10);
scr_entity_setCollisionType(COLLISION_NONE); // I am hardcoded to not impact with walls
scr_entity_setZHitbox(0, 128);

scr_stats_hook_onHit_userEvent(15);
image_speed = 0;
image_index = 0;

gravity_z = 0;

// Leg rendering
render_flip = false;

// Rigids
rigids = false;
rigid1 = 0;
rigid2 = 0;
rigid3 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

if (!rigids and z &lt;= base_z) { 
    // Make me block things
    switch (sprite_index) {
        case s_boss_crabcommander_leg_NW:
            rigid1 = sat_make_shape_polygon(x, y, 75, -75, -15, -55, -5, -45);
            rigid2 = sat_make_shape_polygon(x, y, -15, -55, -55, -15, -25, -25);
            rigid3 = sat_make_shape_polygon(x, y, -75, 75, -55, -15, -45, -5);
            break;
            
        case s_boss_crabcommander_leg_NE:
            rigid1 = sat_make_shape_polygon(x, y, -75, -75, 15, -55, 5, -45);
            rigid2 = sat_make_shape_polygon(x, y, 15, -55, 55, -15, 25, -25);
            rigid3 = sat_make_shape_polygon(x, y, 75, 75, 55, -15, 45, -5);
            break;
            
        case s_boss_crabcommander_leg_SW:
            rigid1 = sat_make_shape_polygon(x, y, 75, 75, -15, 55, -5, 45);
            rigid2 = sat_make_shape_polygon(x, y, -15, 55, -55, 15, -25, 25);
            rigid3 = sat_make_shape_polygon(x, y, -75, -75, -55, 15, -45, 5);
            break;
            
        case s_boss_crabcommander_leg_SE:
            rigid1 = sat_make_shape_polygon(x, y, -75, 75, 15, 55, 5, 45);
            rigid2 = sat_make_shape_polygon(x, y, 15, 55, 55, 15, 25, 25);
            rigid3 = sat_make_shape_polygon(x, y, 75, -75, 55, 15, 45, 5);
            break;
        
        default:
            rigid1 = NULL;
            rigid2 = NULL;
            rigid3 = NULL;
            break;
    }
    if (is_array(rigid1)) {
        scr_collisionSystem_add_shape_semisolid(rigid1);
    }
    if (is_array(rigid2)) {
        scr_collisionSystem_add_shape_semisolid(rigid2);
    }
    if (is_array(rigid3)) {
        scr_collisionSystem_add_shape_semisolid(rigid3);
    }
    rigids = true;
}

if (rigids and z &gt; base_z) {
    if (is_array(rigid1)) {
        scr_collisionSystem_remove_shape_semisolid(rigid1);
        rigid1 = 0;
    }
    if (is_array(rigid2)) {
        scr_collisionSystem_remove_shape_semisolid(rigid2);
        rigid2 = 0;
    }
    if (is_array(rigid3)) {
        scr_collisionSystem_remove_shape_semisolid(rigid3);
        rigid3 = 0;
    }
    rigids = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EVENT HOOK: ON-HIT (Bounce back bullets)

// Never take damage
callback_allowDamage = false;


// Create bounce-back bullet
var atk = argument_attackId;
if (object_is_ancestor(atk.object_index, o_bullet)) {
    var n = instance_create(atk.x, atk.y - atk.z, o_fakeBullet);
    n.direction = atk.move_dir + 120+random(120);
    n.sprite_index = atk.sprite_index;
    n.image_xscale = atk.image_xscale;
    n.image_yscale = atk.image_yscale;
    n.image_index = atk.image_index;
    n.image_angle = n.direction;
    n.spd = atk.move_dist;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var frmMod = 0;

if (z&gt;2){frmMod = 0;}
else{frmMod = 1;}

draw_sprite_ext(sprite_index, image_index+frmMod, dx, dy, image_xscale, image_yscale, image_angle, image_blend, image_alpha);

var _y = 20;
while _y &lt;= 180 {
    draw_sprite_ext(sprite_index, image_index+frmMod, dx, dy - _y, image_xscale, image_yscale, image_angle, image_blend, image_alpha * .3);
    _y += 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,36</point>
    <point>20,20</point>
  </PhysicsShapePoints>
</object>

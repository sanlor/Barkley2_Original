<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_door_factoryElevator01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
side = -1;
open = 0;
Quest("factoryElevatorDoor", 0);
timer_collision = 5;
timer_open = 0;
locked_door = sat_make_shape_rect(x+sprite_width/2 - 24, y-4, sprite_width/2, 4);
process = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Image //
if side = -1 then image_index = 0;
else image_index = 1;

// Open the doors //
if process = true then
    {
    if scr_quest_get_state("factoryElevatorDoor") = 1 then
        {
        // Open up //
        if open &lt; 48 then 
            {
            open += 1;
            x += side;
            if open &gt;= 48 then
                {
                process = false;
                scr_collisionSystem_remove_shape_solid(locked_door); 
                }
            }
        }
    else
        {
        // Shut down //
        if open &gt; 0 then 
            {
            open -= 1;
            x -= side;
            if open &lt;= 0 then 
                {
                process = false;                
                scr_collisionSystem_add_shape_solid(locked_door);
                }
            }       
        }
    }
    
// Initial solids //
if timer_collision &gt; 0 then
    {
    // Tick down //
    timer_collision -= dt();
    
    // Event //
    if timer_collision &lt;= 0 then 
        {
        // Check if it should open or close //
        if instance_exists(o_hoopz) then
            {
            if y &gt; 700 and o_hoopz.y &gt; 700 then
                {
                if distance_to_object(o_hoopz) &lt;= 64 then timer_open = 15;
                else scr_collisionSystem_add_shape_solid(locked_door);  
                }            
            else if y &lt; 700 and o_hoopz.y &lt; 700 then
                {
                if distance_to_object(o_hoopz) &lt;= 64 then timer_open = 15;
                else scr_collisionSystem_add_shape_solid(locked_door); 
                }  
            }       
        }
    }
    
// Open //
if timer_open &gt; 0 then
    {
    // Tick down //
    timer_open -= dt();
    
    // Event //
    if timer_open &lt;= 0 then 
        {
        Quest("factoryElevatorDoor", 1);
        process = true;
        }
    }

// Depth //
scr_dny(0);

// Auto close doors //
if instance_exists(o_hoopz) then
    {        
    if y &gt; 700 and o_hoopz.y &gt; 700 and o_hoopz.y &gt; y + 80 then
        {
        Quest("factoryElevatorDoor", 0);
        process = true;
        }
    else if y &lt; 700 and o_hoopz.y &lt; 700 and o_hoopz.y &gt; y + 80 then
        {
        Quest("factoryElevatorDoor", 0);
        process = true;                  
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Door open/close process //
process = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>

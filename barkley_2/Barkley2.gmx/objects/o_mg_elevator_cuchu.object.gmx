<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-90000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// SETUP //
xpos = 20;
ypos = 10;
buttons = instance_create(xpos, ypos, o_mg_elevator_buttons);
buttons.button_number = 6;
buttons.button_row = 660;
floor_name = "";

for (i=0; i&lt;20; i+=1;) 
    {
    battons = instance_create(xpos, ypos + 10 + i * 10, o_mg_elevator_buttons);
    battons.button_row = 627 - 33 * i;
    }
    
floor_hover = 0;
floor_selected = 0;
button_clicked = false;

// Setup //
timer_end = -1;
timer_floor_clicked = 0;

// Cursor //
if !instance_exists(o_pointer) then instance_create(x, y, o_pointer);
global.cursor_visible = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Return to normal //
global.event = false;
global.cursor_visible = false;
with (o_mg_elevator_buttons) instance_destroy();
if instance_exists(o_pointer) then with o_pointer instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// FLOOR CLICKED //
if timer_floor_clicked &gt; 0 then
    {
    // TICK DOWN //
    timer_floor_clicked -= dt();
    
    // Event //
    if timer_floor_clicked &lt;= 0 then
        {
        // REMOVE BUTTONS //
        with o_mg_elevator_buttons instance_destroy();
        
        // DLC FLOORS //
        if floor_selected &gt; 0 and floor_selected &lt; 665 then
            {
            // Timer for removing this minigame //
            timer_end = 60;

            timer_assign = -1;
            
            // Play sound clip //
            audio_play_sound_at_xy("sn_debug_one", false, 10, view_xview + 192, view_yview + 120);
            }
            
        // BOTTOM //
        else if floor_selected = 0 then
            {
            // Timer for removing this minigame //
            timer_end = 30;
            
            // Close the doors //
            with (o_mg_elevator_door_light) event_user(0);
            
            // Set the goal //
            timer_assign = 0;
            
            // Make the persistent transit object //
            instance_create(x, y, o_mg_elevator_persistent_transit);
            
            // Select the base floor //
            with o_mg_elevator_persistent_transit timer_cuchu_elevator = 20;
            
            // Play sound clip // dbug
            audio_play_sound_at_xy("sn_debug_two", false, 10, view_xview + 192, view_yview + 120);
            Quest("elevatorFloorGoal", timer_assign); 
            Quest("elevatorTransit", 1); 
            SOUNDLOOP("sn_elevatorupsustain01");
            instance_destroy(); 
            }
            
        // TOP //
        else if floor_selected = 665 then
            {
            // Timer for removing this minigame //
            timer_end = 0;
            
            // Close the doors //
            with (o_mg_elevator_door_light) event_user(0);
            
            // Set the goal //
            timer_assign = 665;
            
            // Make the persistent transit object //
            instance_create(x, y, o_mg_elevator_persistent_transit);
            
            // Select the cuchu floor //
            with o_mg_elevator_persistent_transit timer_cuchu_elevator = 20;
            
            // Play sound clip //
            audio_play_sound_at_xy("sn_debug_three", false, 10, view_xview + 192, view_yview + 120);
            Quest("elevatorFloorGoal", timer_assign); 
            Quest("elevatorTransit", 1); 
            SOUNDLOOP("sn_elevatorupsustain01");
            instance_destroy(); 
            }
        }
    }

// Exit //   
if (MiniKeyPress("cancel")) instance_destroy();

// End //
if (timer_end &gt; 0)
{
    timer_end -= dt();
    if (timer_end &lt;= 0) { 
        if(timer_assign&gt;-1) Quest("elevatorFloorGoal", timer_assign); 
        instance_destroy(); 
    }
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vxv = view_xview[0];
vyv = view_yview[0];


draw_set_alpha(1);
draw_set_color(c_black);
draw_rectangle(view_xview, view_yview, view_xview + 384, view_yview + 240, false);
draw_set_color(c_white);
scr_font(global.fn_7ocs, c_white, 1, 1);
var name = string(floor_hover) + " - " + floor_name;
if(floor_hover == 0) name = "0 - Ground Floor";
if(floor_hover == 665) name = "665 - Chuchulainn's Lair";
draw_text(view_xview + 192, view_yview + 225, name);

if (timer_end &gt; 0)
{
    scr_font(global.fn_7ocs, c_white, 1, 1);
    drx = vxv + (SCREEN_WIDTH / 2);
    dry = vyv + (SCREEN_HEIGHT / 2);
    if (floor_selected &gt; 0 and floor_selected &lt; 665)
    {
        draw_text(drx, dry-12, "ERROR!");
        draw_text(drx, dry, "Please buy the Chuchulainn's Lair: " + floor_name +" DLC");
        draw_text(drx, dry+12, "In order to access floor "+string(floor_selected));
    }
}
scr_font(global.fn_7ocs, c_white, 0, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_duergarWizard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemygroup_duergars</parentName>
  <maskName>mask_rect_16by16</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////you get all the default variables from EnemyCombatActor
event_inherited();
name = "";

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

// Enemy configurations
scr_entity_setZHitbox(0, 32);
scr_entity_setMovementCollisionShape_circle(13);

anim = 0;
animSpd = 0.2;
animStrike = 0;

deathSound = "duergar_death";
damageSound = "duergar_grunt";

var conf, attacks, attack,guard;
guard = scr_AI_addPassiveState(scr_AI_passive_guard);
guard[? "sndAlertSound"] = "duergar_alert";

scr_AI_addActiveState(scr_AI_active_approach);
activeHangback = scr_AI_addActiveState(scr_AI_active_hangback);
activeHangback[? "switchPriority"] = 10;
activeHangback[? "switchRemoveMaxDist"] = 150;
activeHangback[? "switchAddMaxDist"] = 110;

// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Shot
var shot = scr_AI_addAction(scr_AI_action_shot);
shot[? "burst"] = 1;
shot[? "burstRnd"] = 2;
shot[? "beforeTime"] = 3.5;
shot[? "attackName"] = "fireball";
shot[? "afterTime"] = 1.5;
shot[? "motion"] = 18;
shot[? "bulletObject"] = o_enemyAttack_bullet_fireball;
shot[? "gunFlashShow"] = false;
shot[? "sndAttackWarn"] = "duergar_wizard_alert"; //attacking scream (desperate)
shot[? "sndAttackStrike"] = "duergar_wizard_fireball";
AI_util_action_setDamage(shot, 15, 0, 0, 1, 10, 60, STAGGER_HARDNESS_MEDIUM);

// Aim and shoot
attack = scr_AI_switch_standard("new_attack", conf);
var action = scr_AI_addAction(scr_AI_active_aimandshoot);
attack[? "action"] = action; 
action[? "action"] = shot; 

attack[? "distMin"] = 30;
attack[? "distMax"] = 150;
attack[? "cooldownTime"] = 20; 
attack[? "cooldownTimeRnd"] = 16.5;



//Initiate Animation Entities
scr_entity_animation_new("default");
_default_offset=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///On death execute the following...
if (duergarName != "") Duergar("kill", duergarName);
var _obj, _dx, _dy;
repeat (3) //Until there are "gibs" made, use a bunch of blood splatter for killing
{
    _dx = x - 8 + floor(random(16));
    _dy = y - 8 + floor(random(16));
    _obj = instance_create(_dx, _dy, o_FX);
    _obj.sprite_index = s_fx_bloodBurst;
    _obj.image_speed = 0.25;
    _obj.image_angle = choose(0,90,180,270);
}
/*
if(random(1)&gt;0.5)
{
    _obj = instance_create(x,y-4,o_gibs);
    _obj.sprite_index = s_cgremlin_small_gibs;
    _obj.image_index = 0;
}

if(random(1)&gt;0.5)
{
    _obj = instance_create(x,y+4,o_gibs);
    _obj.sprite_index = s_cgremlin_small_gibs;
    _obj.image_index = 1;
}

if(random(1)&gt;0.5)
{
    _obj = instance_create(x,y,o_gibs);
    _obj.sprite_index = s_cgremlin_small_gibs;
    _obj.image_index = 2;
}

if(random(1)&gt;0.5)
{
    _obj = instance_create(x,y,o_gibs);
    _obj.sprite_index = s_cgremlin_small_gibs;
    _obj.image_index = 3;
}
*/

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var _col,_hScale,_frm;
_col = image_blend;

if(a_attackName == "stagger")
{
    _default_offset = 24;
    scr_entity_animation_setSpeed("default", 0);
    scr_entity_animation_setRange("default", _default_offset, 1);
}
else
{
    if(a_walking)
    {
        _default_offset = 0;
    scr_entity_animation_setSpeed("default", 1);
    scr_entity_animation_setRange("default", _default_offset+1, 4);
    }
    else
    {
        _default_offset = 0;
    scr_entity_animation_setSpeed("default", 0);
    scr_entity_animation_setRange("default", _default_offset, 1);
    }
}

switch(a_attackName)
{
    case "fireball":
    switch(a_attackState)
    {
        case "before":
            _default_offset = 13 + a_attackAnim/10; //(2 frames)
            scr_entity_animation_setSpeed("default", 0);
            scr_entity_animation_setRange("default", _default_offset, 1);
        break;
        
        case "attack":
            _default_offset = 15;
            scr_entity_animation_setSpeed("default", 0);
            scr_entity_animation_setRange("default", _default_offset, 1);
        break;
           
        case "after":
            _default_offset = 15 + a_attackAnim/4; ///2 frames
            scr_entity_animation_setSpeed("default", 0);
            scr_entity_animation_setRange("default", _default_offset, 1);
        break;    
    }
    break;
}

_dirdir = ((faceDir+360)mod 360) div 90;

switch(_dirdir)
{
    case 0: _hScale = -1;  _default_offset= 18; break;
    case 1: _hScale = 1;  _default_offset= 18; break;
    case 2: _hScale = -1;  _default_offset=0; break;
    case 3: _hScale = 1; _default_offset=0; break;
}

draw_sprite_ext(sprite_index,scr_entity_animation_getImage("default"),dx,dy,_hScale,1,0,_col,1);

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>19,18</point>
    <point>20,20</point>
  </PhysicsShapePoints>
</object>

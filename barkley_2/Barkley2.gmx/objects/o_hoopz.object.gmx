<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_HoopzWalkSE</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>PlayerCombatActor</parentName>
  <maskName>mask_hoopz</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();

dny = 4;
dodgeTime = 0;

instance_create(0, 0, o_hoopz_aiming);
scr_player_init()

deathTimer = -1; //for stagger blocking death error
saveTimer = 50;

//GZ ADDED Footstep controls
stepAlt = 0;
stepCou = 0;
stepDo = 0;

//GZ ADDED Wading waves
waveCou = 0;
facingPrevious = 0;
faceCount = 0;
cursor_distance_from_player = 0;

//For Matthias
scr_entity_animation_define("matthias", s_matthias_walk_up, 0, 6, ANIMATION_DEFAULT_SPEED);

// Ailment totem coordinates //
ailmentTotem_define(self.id, 0, 16, 24, 48); // Some fairly sensible defaults

/* directional animation keys
scr_event_interactive_animation_set(ANIMATION_UP, s_HoopzWalkN);
scr_event_interactive_animation_set(ANIMATION_DOWN, s_HoopzWalkS);
scr_event_interactive_animation_set(ANIMATION_LEFT, s_HoopzWalkW);
scr_event_interactive_animation_set(ANIMATION_RIGHT, s_HoopzWalkE);
*/

//TEST BOSS ALIGNMENT
alignment_ethical = Quest("playerCCAlignmentEthical");
alignment_moral = Quest("playerCCAlignmentMoral");;

// Exceptions
tableRoll = 0;
vapeSecond = 5; // 5 vapes a second
vapeCount = 0;
vapeHold = 0;
vapeSize = 0;
vapeBoost = 0;

manchurianProgress = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Player overrides data cleanup because his data is persistent</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy audio emitter - PERSISTENT GUN
audio_emitter_free(sound_emitter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Footsteps &amp; Wading Wave
event_inherited(); //Need to update audio emitter
if paused() exit;

// Wading wave
var current = scr_statusEffect_getFromCombatActor(id, statusEffect_wading);
if (current &gt; 0)
{
    var _tmr = ds_map_find_value(current, "timer");
    if(_tmr &gt; 9)
    {
        if (move_x != 0 || move_y != 0) waveCou += dt();
        if (waveCou &gt; 4) //.75
        {
            waveCou -= 4;
            instance_create(x, y, o_hoopz_wave);
        }
    }
    else waveCou = 0;
}
else waveCou = 0;

// Footsteps
if (instance_exists(sys_collision) == 0) exit;
if (move_x != 0 || move_y != 0)
{
    stepDo = ds_grid_get(sys_collision.c_footgrid, round(o_hoopz.x / 16), round(o_hoopz.y / 16));
    if (is_undefined(stepDo)) stepDo = 0;
    stepCou += (stepDo * dt());
    if (stepCou &gt;= 1)
    {
        stepCou -= 1;
        stepAlt = !stepAlt;
        obj = instance_create(x, y, o_hoopz_footstep);
        obj.image_single = (stepAlt * 8) + facing;
    }
    if (stepDo == 0) stepCou = 0.99;
}
else stepCou = 0;

// Exceptions
if (tableRoll)
{
    depth = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute player scripts
event_inherited();
if paused() || _active==false {exit;}

if (Quest("mountainCooldown") &gt; 0)
{
    Quest("mountainCooldown", Quest("mountainCooldown") - dt_sec());
    if (Quest("mountainCooldown") &lt; 0) Quest("mountainCooldown", 0);
}

// Prison HUD Hide
if (BodySwap() == "prison")
{
    if (instance_exists(o_hud_stealther) == 0)
    {
        instance_create(0, 0, o_hud_stealther);
    }
}

scr_player_step_executePipeline();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Autosave when not in combat
if paused() exit;

saveTimer -= dt();
if (saveTimer &lt;= 0) {

    // If not in combat and not in any event
    var inEvent = global.event;
    var inCombat = false;
    with (EnemyCombatActor) {
        if (AI_stateTopType != AI_STATETYPE_PASSIVE) {
            inCombat = true;
        }
    }
    
    if (!inEvent &amp;&amp; !inCombat) {
        scr_savedata_put("map.room", room_get_name(room));
        scr_savedata_put("map.x", x);
        scr_savedata_put("map.y", y);
        if (Quest("saveDisabled") == 0) scr_savedata_save();
        saveTimer = 50;
    }
    else  {
        saveTimer = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set camera
event_inherited();
if paused() exit;
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update camera cursor
var camera_cursor_x, camera_cursor_y;
camCurX = o_curs.x - (SCREEN_WIDTH / 2);
camCurY = o_curs.y - ((SCREEN_HEIGHT - HUD_HEIGHT) / 2);
if (global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE) {
    if (global.event == 0) { // || instance_exists(ustation)) {
        camera_cursor_x = camCurX;
        camera_cursor_y = camCurY;
    } else {
        camera_cursor_x = 0;
        camera_cursor_y = 0;
    }
}
else {
    camera_cursor_x = look_x * ((SCREEN_WIDTH) / (SCREEN_WIDTH + camera_move_dist_x));
    camera_cursor_y = look_y * ((SCREEN_HEIGHT - HUD_HEIGHT) / (SCREEN_HEIGHT - HUD_HEIGHT + camera_move_dist_y));
    camCurX = camera_cursor_x;
    camCurY = camera_cursor_y;
}
cursor_distance_from_player = point_distance(x, y, view_xview[0] + o_curs.x, view_yview[0] + o_curs.y);
camera_cursor_x /= SCREEN_WIDTH / 2
camera_cursor_y /= (SCREEN_HEIGHT - HUD_HEIGHT) / 2
camCurX /= SCREEN_WIDTH / 2
camCurY /= (SCREEN_HEIGHT - HUD_HEIGHT) / 2
// GZ WHIPLASH FIX
global.whiplash = Goto(global.whiplash, 0, dt_sec() * 2);
var twn = abs(global.whiplash - 1);
camera_target_x = round((camera_cursor_x * camera_move_dist_x) * twn) + round(x);
camera_target_y = round((camera_cursor_y * camera_move_dist_y) * twn) + round(y) - global.cursorShift;

camTarX = round((camCurX * camera_move_dist_x) * twn) + round(x);
camTarY = round((camCurY * camera_move_dist_y) * twn) + round(y) - global.cursorShift;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quest time update
event_inherited();

//Must be done here as doing it in o_world is before a save exists.
if (scr_savedata_get("quest.time") != scr_savedata_get("quest.timeDestination"))
{
    scr_savedata_put("quest.time", scr_savedata_get("quest.timeDestination"));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
event_inherited();

var drwExe = 1;
if (Quest("mountainCooldown") &gt; 0)
{
    if (lengthdir_x(1, Quest("mountainCooldown") * 3600) &gt; 0) drwExe = 0;
}

BlueFace("begin");
if (drwExe) scr_player_draw_executePipeline();
BlueFace("end");

combatActor_draw_post();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,41</point>
    <point>25,25</point>
  </PhysicsShapePoints>
</object>

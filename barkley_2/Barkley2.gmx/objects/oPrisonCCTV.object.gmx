<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPrisonCCTV</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();
_interactive = 0;
_disableOutline = 1;
shadow_radius = 0;
Animation("define", "off", sprite_index, 0, 1, 0);
Animation("define", "shutdown", sprite_index, 1, 8, ANIMATION_DEFAULT_SPEED);
Animation("define", "monitor", sprite_index, 9, 16, ANIMATION_DEFAULT_SPEED * (0.1 + random(0.05)));
Animation("set", id, "monitor");
fuzTimMin = 2;
fuzTimMax = 4;
fuzDurMin = 0.1;
fuzDurMax = 0.3;
fuzTim = lerp(fuzTimMin, fuzTimMax, random(1));
fuzDur = 0;
for (xxx = 0; xxx &lt; sprite_width - 2; xxx += 1)
{
    for (yyy = 0; yyy &lt; sprite_height - 2; yyy += 1)
    {
        fuzSpt[xxx, yyy] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
if (paused() == 0)
{
    if (fuzDur &gt; 0)
    {
        for (xxx = 0; xxx &lt; sprite_width - 2; xxx += 1)
        {
            for (yyy = 0; yyy &lt; sprite_height - 2; yyy += 1)
            {
                fuzSpt[xxx, yyy] = choose(0, 0, 0, 0, 0, 1);
            }
        }
        fuzDur -= dt_sec();
        if (fuzDur &lt;= 0)
        {
            for (xxx = 0; xxx &lt; sprite_width - 2; xxx += 1)
            {
                for (yyy = 0; yyy &lt; sprite_height - 2; yyy += 1)
                {
                    fuzSpt[xxx, yyy] = 0;
                }
            }
        }
    }
    else
    {
        fuzTim -= dt_sec();
        if (fuzTim &lt;= 0)
        {
            fuzTim = lerp(fuzTimMin, fuzTimMax, random(1));
            fuzDur = lerp(fuzDurMin, fuzDurMax, random(1));
        }
    }
}
event_inherited();
if (fuzDur &gt; 0 &amp;&amp; Animation("current", id) == "monitor")
{
    for (xxx = 0; xxx &lt; sprite_width - 2; xxx += 1)
    {
        for (yyy = 0; yyy &lt; sprite_height - 2; yyy += 1)
        {
            if (fuzSpt[xxx, yyy]) draw_sprite_ext(s1x1, 0, x + 1 + xxx, y + 1 + yyy, 1, 1, 0, c_white, 0.66);
        }
    }
}
draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, c_white, 0.2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

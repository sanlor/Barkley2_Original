<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cuchu_elevator_door01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Does this door exist or has it been borked? //
if Quest("wiglafMission") &gt;= 3 then 
    {
    open = true;
    timer_solid = 0;
    image_index = 12;
    }
else 
    {
    open = false;
    timer_solid = 1;
    }

// Other shit //
image_speed = 0;
shaper = sat_make_shape_rect(x, y - 8, 32, 8);
timer_check = 1;

// Locked //
if Quest("wiglafMission") &gt;= 2 then locked = false;
else locked = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Checl //
if timer_check &gt; 0 then
    {
    // Tick down //
    timer_check -= dt();
    
    // Event //
    if timer_check &lt;= 0 then
        {
        if instance_exists(o_hoopz) then
            {
            if distance_to_object(o_hoopz) &lt;= 64 then 
                {
                open = true;
                image_index = 12;
                scr_collisionSystem_remove_shape_solid(shaper);
                }
            }
        if instance_exists(o_cts_hoopz) then
            {
            if distance_to_object(o_cts_hoopz) &lt;= 64 then 
                {
                open = true;
                image_index = 12;
                scr_collisionSystem_remove_shape_solid(shaper);
                }
            }
        }
    }

// Check //
if locked = false then
    {
    // Open up //
    if instance_exists(o_hoopz) then
        {
        if distance_to_object(o_hoopz) &lt;= 64 then open = true;
        }
    if instance_exists(o_cts_hoopz) then
        {
        if distance_to_object(o_cts_hoopz) &lt;= 64 then open = true;
        }
    }

// Open //
if open = true then
    {    
    if image_index &lt; 12 then image_index += 6 * dt_sec();
    else
        {
        image_index = 12;
        scr_collisionSystem_remove_shape_solid(shaper);
        }
    }

// Depth //
scr_dny(64);

// Elevator move //
if Quest("elevatorFloor") &lt; Quest("elevatorFloorGoal") then Quest("elevatorFloor", Quest("elevatorFloor") + round(global.elevatorBorkSpeed * dt_sec()));
else if Quest("elevatorFloor") &gt; Quest("elevatorFloorGoal") then Quest("elevatorFloor", Quest("elevatorFloor") - round(global.elevatorBorkSpeed * dt_sec()));

// Elevator limits //
if Quest("elevatorFloor") &lt;= 0 and Quest("elevatorFloorGoal") == 0 then 
    {
    Quest("elevatorFloor", 0); 
    if room = r_swp_cuchuelevator01 then locked = false;
    }
if Quest("elevatorFloor") &gt;= 665 and Quest("elevatorFloorGoal") == 665 then 
    {
    Quest("elevatorFloor", 665); 
    if room = r_chu_entrance02 then locked = false;
    }
    
// Doors are closed //
if timer_solid &gt; 0 then
    {
    // Tick down //
    timer_solid -= dt();
    
    // Event //
    if timer_solid &lt;= 0 then scr_collisionSystem_add_shape_solid(shaper);        
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw self //
draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, 1);

// Display the floor on the panel //
draw_set_alpha(1);
draw_set_font(global.fn_elevator);
//if instance_exists(o_mg_elevator_persistent_transit) then draw_set_color(c_red); 
draw_set_color(c_aqua);

// Lead zeroes //
var floor_current = Quest("elevatorFloor");
var floor_display = "0";
if floor_current + 1 &lt; 10 then floor_display = "00" + string(floor(floor_current + 1));
else if floor_current + 1 &lt; 100 then floor_display = "0" + string(floor(floor_current + 1));
else floor_display = string(floor(floor_current + 1));

// Text //
draw_text(o_cinema31.x - 7, o_cinema31.y - 5, floor_display);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

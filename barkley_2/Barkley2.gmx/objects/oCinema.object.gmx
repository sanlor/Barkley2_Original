<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_skipping = false;
_events_active = 0;
_event_list = ds_list_create();
_type = EVENT_MAIN;
_paused = 0;
_lists = ds_list_create();
_events = ds_list_create();
_active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset event stuff
scr_deltatime_setModifier(1);
global.event = false;
ds_list_destroy(_event_list);
for (i = 0; i &lt; ds_list_size(_lists); i += 1)
{
    if (ds_exists(_lists[| i], ds_type_list)) ds_list_destroy(_lists[| i]);
}
for (i = 0; i &lt; ds_list_size(_events); i += 1)
{
    if (ds_exists(_events[| i], ds_type_list)) ds_list_destroy(_events[| i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event = true
//if (instance_exists(global.cinObj) == 0) 
//{
//    global.cinObj = -999;
//}
global.event = true;

if (instance_exists(ustation) == 0)
{
    if paused() exit;
}

for (i = 0; i &lt; ds_list_size(global.dslCinKid); i += 1)
{
    if (instance_exists(global.dslCinKid[| i]) == 0)
    {
        ds_list_delete(global.dslCinKid, i);
        i -= 1;
    }
}
if (global.cinWai == 1 &amp;&amp; Cinema("kids") == 0)
{
    show_debug_message("oCinema - Child event finished, continuing event.");
    global.cinWai = 0;
    Cinema("process");
}
if (global.cinFin == 1)
{
    if (Cinema("kids") == 0)
    {
        //global.whiplash = 1;
        show_debug_message("Cinema() - Destroy...");
        Camera("enable", o_camera_hoopz);
        o_hoopz.camera_cursor_x = o_hoopz.camCurX;
        o_hoopz.camera_cursor_y = o_hoopz.camCurY;
        o_hoopz.camera_target_x = o_hoopz.camTarX;
        o_hoopz.camera_target_y = o_hoopz.camTarY;
        o_camera_hoopz.x = o_hoopz.camTarX;
        o_camera_hoopz.y = o_hoopz.camTarY;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cinema Skipper
if (MiniKeyHeld("cancel"))
{
    if (instance_exists(oShop) == 0 &amp;&amp; instance_exists(oLockpicking) == 0 &amp;&amp; instance_exists(o_minigame) == 0)
    {
        scr_deltatime_setModifier(4);
    }
}
else
{
    //if (instance_exists(o_hoopz) &amp;&amp; o_hoopz.lastFreezeFrameTime &gt; current_time ) x = x;
    //else 
    scr_deltatime_setModifier(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
//Cinema("step");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_enemy_rat_dark</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemygroup_rat</parentName>
  <maskName>mask_disk_24by24</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

combatActor_setRenderSurfSize(64);

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

// Enemy configurations
scr_entity_setZHitbox(0, 24);
scr_entity_setMovementCollisionShape_circle(10);
ailmentTotem_define(id, 0, 0, 0, 0);

deathSound = "explosiverat_death";
damageSound = "explosiverat_hurt";

scr_AI_aggro_configure(220, 380, 1000);

var walk = scr_AI_movement_init(scr_AI_movementType_standard);

var conf, guard;
guard = scr_AI_addPassiveState(scr_AI_passive_guard);
guard[? "sndAlertSound"] = "explosiverat_alert";

conf = scr_AI_addActiveState(scr_AI_active_approach);
conf[? "walkScript"] = walk;

// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Charge
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_kamikaze);
attack[? "action"] = action; 

attack[? "distMin"] = 0;
attack[? "distMax"] = 30;
attack[? "rechargeTime"] = 0;
attack[? "rechargeTimeRnd"] = 0;
attack[? "cooldownTime"] = 0;
attack[? "cooldownTimeRnd"] = 0;
attack[? "coneAngleMin"] = 0;
attack[? "coneAngleMax"] = 180;
attack[? "rechargeTime"] = 0;
attack[? "rechargeTimeRnd"] = 0;

// Randomly look around
attack = scr_AI_switch_standard("new_attack", conf);
look_anim = scr_AI_addAction(scr_AI_action_animation);
attack[? "action"] = look_anim; 

look_anim[? "attackName"] = "look";
look_anim[? "time"] = 3;
look_anim[? "snd"] = "explosiverat_stopandlook";

attack[? "distMin"] = 0;
attack[? "distMax"] = 9999;
attack[? "coneAngleMin"] = 0;
attack[? "coneAngleMax"] = 180;
attack[? "cooldownTime"] = 9;
attack[? "cooldownTimeRnd"] = 15;
attack[? "rechargeTime"] = 0;
attack[? "rechargeTimeRnd"] = 0;

/// Create animations

scr_entity_animation_define_ext("idle", s_enemy_rat_dark, 1, 1, 0, 0, 0, 0);
scr_entity_animation_define_ext("walk", s_enemy_rat_dark, 2, 2, 0, 0.08, 1, 0);
scr_entity_animation_define_ext("look", s_enemy_rat_dark, 0, 1, 0, 0, 0, 0);

event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Bones
repeat(irandom(2) + 2)
{
    var _obj = instance_create(x,y,o_gibs);
    _obj.z = z + 8;
    _obj.sprite_index = s_enemy_rat_bones;
    _obj.image_index = 0;
    _obj.timer = 600;
    _obj.move_z = 8 + random(8);
    _obj.bloodburst = noone;
    _obj.shadow_visible = 0;
}

var _obj = instance_create(x,y,o_gibs);
_obj.z = z + 8;
_obj.sprite_index = s_enemy_rat_bones;
_obj.image_index = 1;
_obj.timer = 600;
_obj.move_z = 8 + random(8);
_obj.bloodburst = noone;
_obj.shadow_visible = 0;

// Blood drops
var dir = 0;
/*repeat(6)
{
    var _dir = dir + 30 -random(60);
    var _dist = 2 + random(8);
    var _obj = instance_create(x + lengthdir_x(_dist, _dir),y + lengthdir_y(_dist, _dir),o_enemy_explosiveRat_bloodDrop);
    with _obj scr_entity_setDirSpd(_dir, move_dist);
    dir += 360/6;
} */

// Blood spurts
repeat(3 + irandom(3)) {
    _obj = instance_create(x,y,o_FX);
    _obj.z = z + random(hitbox_z_top);
    _obj.sprite_index = s_fx_bloodBurst;
    _obj.image_speed = 0.25;
    _obj.image_angle = choose(0,90,180,270);
}

// Check to see if I should explode
event_user(14);
if (doExplode == 0) exit;

// Detonation damage
var n = instance_create(x, y, o_enemyAttack_melee_static);
n.lifetime = 1.0;
n.mask_index = mask_disk_64by64;
ds_list_clear(n.target_list);

statusSlow = scr_statusEffect_addToCombatAttack(statusEffect_slow, n);
statusSlow[? "timer"] = 4;

// TODO Wire in damages more nicely....
scr_stats_setAttackStat(n, STAT_ATTACK_DMG_NORMAL, 10);
scr_stats_setAttackStat(n, STAT_ATTACK_KNOCKBACK, 20);
n.knockback_type = KNOCKBACKTYPE_FROM_CENTER;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var drawDir = ((faceDir+360+22.5) mod 360) div 45;

var shift;
var mirror;

if (drawDir == 0) {
    shift = 8;
    mirror = false;
} else if (drawDir == 1) {
    shift = 12;
    mirror = false;
} else if (drawDir == 2) {
    shift = 16;
    mirror = false;
} else if (drawDir == 3) {
    shift = 12;
    mirror = true;
} else if (drawDir == 4) {
    shift = 8;
    mirror = true;
} else if (drawDir == 5) {
    shift = 4;
    mirror = true;
} else if (drawDir == 6) {
    shift = 0;
    mirror = false;
} else {
    shift = 4;
    mirror = false;
}

var animName;
if(a_attackName == "look") {
    animName = "look";
} else if (a_walking) {
    animName = "walk";
} else {
    animName = "idle";
}

scr_entity_animation_setShift(animName, shift);
var sprite = scr_entity_animation_getSpriteIndex(animName);
var image = scr_entity_animation_getImage(animName);

if (mirror) {
    draw_sprite_ext(sprite, image, dx, dy, -1, 1, 0, c_white, 1);
} else {
    draw_sprite(sprite, image, dx, dy);
}

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,15</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>

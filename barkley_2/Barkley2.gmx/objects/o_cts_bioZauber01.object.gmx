<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_growth_zauberTurn01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1215752192</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
image_speed = 0;
phase = 0;
timer = 20;
alpha = 0;
draw = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// pause //
if paused() exit;

// Phases //
if timer &gt; 0 then 
    {
    timer -= dt();
    if timer &lt;= 0 then 
        {
        phase += 1;
        if phase = 1 then timer = 15;
        else if phase = 2 then timer = 5;
        else if phase = 3 then 
            {
            timer = 30;
            xSpeed = 0.75 * choose(1, -1);
            ySpeed = 0.75 * choose(1, -1);
            }
        else if phase = 4 then timer = 15;
        else if phase = 5 then timer = 55;
        else if phase = 6 then timer = 20;
        }
    }
    
// Shake //
if phase = 1 then
    {
    x = xstart + choose(1, 0, -1);
    y = ystart + choose(1, 0, -1);
    }
    
// Glow //
else if phase = 2 then
    {
    if alpha &lt; 1 then alpha += 1.5 * dt_sec();
    }
    
// Lift up //
else if phase = 3 then
    {
    if y &gt; o_cinema1.y then y -= 26 * dt_sec();
    }
    
// Go to Hoopz //
else if phase = 4 then
    {
    path_start(pBioZauber, 3, path_action_stop, true);
    }
    
// Disappear //
else if phase = 6 then
    {
    depth = -1000;
    alpha -= 1.5 * dt_sec();
    image_alpha -= 0.5 * dt_sec();
    if draw = true then draw = false;
    else draw = true;
    }
    
// Gone //
else if phase = 7 then instance_destroy();

// Turn //
if phase &gt;= 1 then 
    {
    if image_index &lt; image_number - 1 then image_index += 4 * dt_sec();
    }

// Speed of the flight animation //
path_speed = 20 * dt();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Zauber effect //
if phase &gt;= 1 then EffectZauber(sprite_index, image_index, x, y, 1, 1, c_green, alpha);
    
// Self //
draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

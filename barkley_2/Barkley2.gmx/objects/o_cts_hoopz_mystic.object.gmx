<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cts_hoopz_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
image_speed = 0;
image_index = 6;
timerDelay = 0;
timerSpinStart = 0.4;
timerSpinEnd = 0;
timerSpinStop = 0;
timerStart = 7.5;
interval_guplur = 0;
yPos = 0;
ySpeed = 0;
stoppe = false;
startte = false;
x = o_cts_hoopz.x;
y = o_cts_hoopz.y;
//o_cts_hoopz.visible = false;
yOne = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.event = false;
with (o_cts_hoopz) visible = 1;
instance_activate_object(o_hoopz);
with (o_hoopz) visible = 1;
//instance_deactivate_object(o_hoopz);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Invisible hoopz //
if instance_exists(o_cts_hoopz) then 
{
    x = o_cts_hoopz.x;
    with o_cts_hoopz visible = false;
}
else if instance_exists(o_hoopz) then 
{
    x = o_hoopz.x;
    with o_hoopz visible = false;
}
if (yOne)
{
    y = o_hoopz.y;
    yOne = 0;
}

if (timerDelay &gt; 0) { timerDelay -= dt_sec(); exit; }

// Start //
if timerStart &gt; 0 then timerStart -= dt();
else startte = true;

// Spin //
if timerSpinStart &gt; 0 then
    {
    timerSpinStart -= dt();
    if timerSpinStart &lt;= 0 then 
        {
        image_index += 1;
        if startte = true then ySpeed = -6;
        timerSpinStart = 0.25;
        }
    }
    
// End //
if timerSpinEnd &gt; 0 then
    {
    timerSpinEnd -= dt();
    if timerSpinEnd &lt;= 0 then
        {
        image_index += 1;
        timerSpinEnd = 0.25;
        }
    }

// Stop //
if timerSpinStop &gt; 0 then timerSpinStop -= dt();
else if stoppe = true and image_index = 6 then instance_destroy();
     
        
// Move //
yPos += ySpeed * 60 * dt_sec();

// Off the screen //
if yPos &lt; -300 and ySpeed &lt; 0 then
    {
    ySpeed = +6;
    interval_guplur = 0;
    timerSpinEnd = 1;
    timerSpinStart = 0;
    timerSpinStop = 15;
    stoppe = true;
    }

// Landing //
if yPos &gt; 0 and ySpeed &gt; 0 then 
    {
    yPos = 0;
    ySpeed = 0;    
    }
    
// Depth //
scr_dny(0);



     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Teleport into map
timerDelay = 1;
yOne = 1;
script = "
FADE   | 0 | 1
WAIT   | 3
EXIT   |";
Cinema("run", script);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
base_z = 0;
z = -yPos;
var shadow_alpha = 0.4 * image_alpha;
var _radius = 12;
_radius = _radius * (1 / (1 + ((z - base_z) / 40))) // Scale shadow with Z height 
var dvv = (1 / 64) * 2; // so i don't have to muck with radius
var vis = 0;
with (o_cts_hoopz) vis = visible;
if (_radius &gt; 0 &amp;&amp; vis == 0)
{
    draw_sprite_ext(s_lensflare, 0, round(x), round(y - base_z), 
        _radius * dvv, (_radius * 0.5) * dvv, 0, c_black, shadow_alpha);
}
            
draw_sprite_ext(sprite_index, image_index, x, y + yPos, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

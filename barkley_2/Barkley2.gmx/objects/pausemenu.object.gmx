<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-280000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if instance_exists(o_hoopz_death_grayscale) then instance_destroy();
menu = menu_create();
//menu_decal_add(menu, ustation_textdecal_create(384/2, 60, "IN STASIS", fa_center, global.fn_1, c_white));
menu_item_add(menu, pausemenu_lightupbutton_create(0, 75, 384, 20, "Resume Reality", global.fn_1, pausemenu_action_resume));
//menu_item_add(menu, pausemenu_lightupbutton_create(0, 105, 384, 20, "Hack the files", global.fn_1, pausemenu_action_exit));
menu_item_add(menu, pausemenu_lightupbutton_create(0, 135, 384, 20, "End The Pain", global.fn_1, pausemenu_action_exit));
menu_addKeyAction(menu, KEYID_HOLSTER, pausemenu_action_resume, NULL, scr_soundbank_pickSound("pausemenu_click"));
menu_addKeyAction(menu, KEYID_PAUSE, pausemenu_action_resume, NULL, scr_soundbank_pickSound("pausemenu_click"));

paused(true);

timer = 2;
kill = false;

audio_pause_all();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Resume game
paused(false);
audio_resume_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Timer ticks down //
timer -= dt();

// If this should be destroyed //
if (kill) 
    {
    instance_destroy();
    }
else if (timer &lt;= 0) 
    {
    if (instance_exists(o_debugMode)) 
        {
        // When debug modes are active, no debug menu and ESC unpauses
        if (keyboard_check_pressed(vk_escape)) 
            {
            instance_destroy()
            }
        } 
    else 
        {
        // Do step events for menus
        menu_step(menu, 0, 0);
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(.7);
draw_set_color(c_black);
//draw_set_blend_mode(bm_subtract);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
//draw_set_blend_mode(bm_normal);
draw_set_alpha(1);
draw_set_color(c_white);

if (!instance_exists(o_debugMode)) {
    menu_draw(menu, view_xview, view_yview);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mosquito</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
x_origin = instance_nearest(x, y, o_critter_firefly_core).x;
y_origin = instance_nearest(x, y, o_critter_firefly_core).y;
speed_x = random_range(-1, 1);
speed_y = random_range(-1, 1);
x += random_range(-96, 96);
y += random_range(-96, 96);
sub = 0;
//image_speed = 0.25 + random(0.25);
image_alpha = 0.4;
alpha = random(0.4) + 0.5;
timer_follow = 3 + irandom(3);
follow = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

sub += dt_sec() * 15;
if (sub &gt; sprite_get_number(sprite_index)) sub -= sprite_get_number(sprite_index);

// Orbit, fly around the invisible core //
if follow = true then
    {
    // If moving too far from the origin, go closer //
    if distance_to_point(x_origin, y_origin) &gt;= 80 then
        {
        speed_x += lengthdir_x(0.05, point_direction(x, y, x_origin, y_origin));
        speed_y += lengthdir_y(0.05, point_direction(x, y, x_origin, y_origin));
        }
    speed_x += lengthdir_x(0.05, point_direction(x, y, x_origin, y_origin));
    speed_y += lengthdir_y(0.05, point_direction(x, y, x_origin, y_origin));
    }
    
// Move //
x += speed_x;
y += speed_y;

// Move limits //
if speed_x &gt; 1 then speed_x = 1;
if speed_y &gt; 1 then speed_y = 1;
if speed_x &lt; -1 then speed_x = -1;
if speed_y &lt; -1 then speed_y = -1;

// Origin of the core // It moves around so this needs to be updated //
//x_origin = instance_nearest(x, y, o_critter_firefly_core).x;
//y_origin = instance_nearest(x, y, o_critter_firefly_core).y;

// Randomize the patterns a bit with this //
if timer_follow &gt; 0 then
    {
    timer_follow -= dt();
    if timer_follow &lt;= 0 then
        {
        timer_follow = 30;
        follow = irandom(1);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
draw_sprite_ext(sprite_index, sub, x, y, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

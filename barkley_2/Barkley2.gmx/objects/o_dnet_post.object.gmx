<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
width = o_dnet_control.dnet_width - 30; // was 320
height = 160;

// Post content //
post_name = "";
post_name_color = c_white;
post_color = c_white;
post_text = "";
post_text_2 = "";
post_quote = "";
post_quote_2 = "";
post_quote_author = "";
post_quote_author_2 = "";
post_signature = "";
post_timestamp = "";
post_postcount = 0;
post_pips = 7;
post_avatar = sDNETAvatarL;
post_avatar_image = 0;
post_avatar_min = 0;
post_avatar_max = 0;
post_avatar_speed = 0.25;
post_warning = "";
moderator = false;
banned = false;
post_primo = false;

// Allowed Text Widths //
width_text_field = width - 60;
width_name_field = width - 20;
width_quote_field = width - 80;

// Sizes //
size_name = 0;
size_text = 0;
size_text_2 = 0;
size_quote = 0;
size_quote_2 = 0;
size_quote_box = 0;
size_quote_box_2 = 0;
size_signature = 0;
size_message_exceed = 0;
image_speed = 0;

// Overall content tone //
tone = global.dnet_color_variation; 
draw_set_font(global.fn_dnet);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Image //
post_avatar_image += post_avatar_speed * dt();
if post_avatar_image &gt; post_avatar_max then post_avatar_image = post_avatar_min;
if post_avatar_image &lt; post_avatar_min then post_avatar_image = post_avatar_min;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calc height
sizTop = 20 - 1;
//sizTxt = max(110 - 16, sizTxt + 10);
sizBot = sizSig - 1;
minSiz = 110 - 45 + sprite_get_height(post_avatar);
actSiz = max(minSiz - 18, sizTxt + sizTxt2 + sizQuo + 34)
height = sizTop + actSiz + sizBot - 1; //(143 - 0) + size_name * 10 + size_signature * 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get text heights //
draw_set_font(global.fn_dnet);
txtHei = 11;
sizTxt = string_height_ext(post_text, txtHei, width_text_field); // was -1
sizSig = string_height_ext(post_signature, txtHei, width_name_field);
sizQuo = string_height_ext(post_quote, txtHei, width_quote_field);
sizTxt2 = string_height_ext(post_text_2, txtHei, width_text_field);
if (sizQuo &gt; 0) sizQuo += 22;
size_name = string_height_ext(post_name, -1, width_name_field) / 10;
size_text = string_height_ext(post_text, -1, width_text_field) / 10;
size_signature = string_height_ext(post_signature, -1, width_name_field) / 10;
size_quote = string_height_ext(post_quote, -1, width_quote_field) / 10;
if size_quote &gt; 0 then size_quote_box = 30;
else size_quote_box = 0;

// Get text heights for secondary text/quote //
size_text_2 = string_height_ext(post_text_2, -1, width_text_field) / 10;
size_quote_2 = string_height_ext(post_quote_2, -1, width_quote_field) / 10;
if size_quote_2 &gt; 0 then size_quote_box_2 = 30;
else size_quote_box_2 = 0;

// Exceeding message //
if size_text + size_text_2 + size_quote + size_quote_2 + (size_quote_box / 10) + (size_quote_box / 10) &gt; 7 then size_message_exceed = size_text + size_text_2 + size_quote + size_quote_2 + (size_quote_box / 10) + (size_quote_box / 10) - 7;
else size_message_exceed = 0;

// Calculate height //
// 140 == height with nothing in it //
event_user(2);

// Add in height to overall thread height // 10 = gap between posts //
o_dnet_control.scrolling_position += height + global.dnet_vspace;
o_dnet_control.scrolling_max = o_dnet_control.scrolling_position;

// Mod or banned //
if (moderator) post_color = global.dnetColorPostMod;
else if (post_primo) post_color = global.dnetColorPostPre;
else if (banned) post_color = global.dnetColorPostBan;
else post_color = global.dnetColorPostReg;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set font //
drx = x;
dry = y;
dry -= (o_dnet_control.totHei / o_dnet_control.use_height) * o_dnet_control.slider_y;
ory = dry;

draw_set_font(global.fn_dnet);

// Backdrop //
MiniSprite9(sDNETBorder0, 0, drx, dry, width, height + 3, 1, post_color, 1);

// Name field //
MiniSprite9(sDNETBorder0, 7, drx + 4, dry + 4, width - 8, 11 + size_name * 10, 1, post_color, 1); //wide

// Signature field //
var pyy = dry + actSiz + 18 - 4 - 16 + sizTop - 10 - 1; // was 106
//if ((size_text + size_text_2 + size_quote + size_quote_2) + ((size_quote_box + size_quote_box_2) / 10) &lt; 8) x = x;
//else pyy = dry + 32 + (size_name + size_text + size_text_2 + size_quote + size_quote_2) * 10 + size_quote_box + size_quote_box_2;
siz = 22 + sizSig - 11;
sigY = pyy;
MiniSprite9(sDNETBorder0, 7, drx + 4, pyy, width - 8, siz - 1, 1, post_color, 1);

// Text field // 49 pixels
siz = pyy - dry - 31 + 2;
//if (size_quote_box &gt; 0) siz -= 10;
if (size_quote_box_2 &gt; 0) siz -= 10; 
MiniSprite9(sDNETBorder0, 7, drx + 44, dry + sizTop + 8, width - 48, siz, 1, post_color, 1);
// Text // Text //
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_ext(drx + 52, dry + sizTop + 8 + 5, post_text, txtHei, width_text_field);

// Timestamp field //
/*
if ((size_text + size_text_2 + size_quote + size_quote_2) + ((size_quote_box + size_quote_box_2) / 10) &lt; 8) siz = dry + 120 + (size_name + size_signature) * 10;
else siz = dry + 46 + (size_name + size_text + size_text_2 + size_quote + size_quote_2 + size_signature) * 10 + size_quote_box + size_quote_box_2;
MiniSprite9(sDNETBorder0, 7, x + 4, siz, width - 8, 22, 1, post_color, 1);
*/
    
// Quote boxes //
quoY = dry + sizTop + sizTxt + 17; //dry + 28 + sizTop + sizTxt
var plu = 2;
if size_quote &gt; 0 then 
    MiniSprite9(sDNETBorder0, 6, drx + 50, quoY + 12, width - 70, 7 + sizQuo - 22, 1, c_black, 1);
if size_quote_2 &gt; 0 then 
    MiniSprite9(sDNETBorder0, 6, drx + 50, dry + plu + 42 + (size_name + size_text + size_quote + size_text_2) * 10 + size_quote_box, width - 70, 7 + (size_quote_2 * 10), 1, c_black, 1);

// Text // Name //
if (moderator) draw_set_color(global.dnetColorNameMod);
else if (post_primo) draw_set_color(global.dnetColorNamePre);
else if (banned) draw_set_color(global.dnetColorNameBan);
else draw_set_color(global.dnetColorNameReg);
draw_text_ext(drx + 10, dry + 9, post_name, -1, width_name_field);



// Text // Quote //
draw_set_color(c_aqua);
draw_text_ext(drx + 58, quoY + 14, post_quote, txtHei, width_quote_field);
draw_set_color(c_white);

// Text // Quote author //
if size_quote &gt; 0 then 
    {
    draw_set_color(make_color_rgb(255, 100, 100));
    draw_text(drx + 52, quoY, string(post_quote_author) + "Quote:");
    draw_set_color(c_white);
    }
    
// Text // Text2 //
draw_text_ext(drx + 56, dry + 24 + (size_name + size_text + size_quote) * 10 + size_quote_box, post_text_2, -1, width_quote_field);

// Text // Quote2 //
draw_set_color(c_aqua);
draw_text_ext(drx + 58, dry + plu + 45 + (size_name + size_text + size_quote + size_text_2) * 10 + size_quote_box, post_quote_2, -1, width_quote_field);
draw_set_color(c_white);

// Text // Quote2 author //
if size_quote_2 &gt; 0 then 
    {
    draw_set_color(make_color_rgb(255, 100, 100));
    draw_text(drx + 52, dry + plu + 30 + (size_name + size_text + size_quote + size_text_2) * 10 + size_quote_box, string(post_quote_author_2) + "Quote:");
    draw_set_color(c_white);
    }
    
// Text // Signature //
draw_set_color(make_color_rgb(190, 190, 190));
draw_set_alpha(0.75);
siz = (size_name + size_text + size_quote + size_text_2 + size_quote_2) * 10 + size_quote_box + size_quote_box_2;
//if size_message_exceed != 0 then draw_text_ext(x + 10, dry + 37 + (size_name + size_text + size_quote + size_text_2 + size_quote_2) * 10 + size_quote_box + size_quote_box_2, post_signature, -1, width_name_field);
//else 
//dry + (size_name * 10) + max(110 - 16, sizTxt + 8)
draw_text_ext(drx + 10, sigY + 4, post_signature, txtHei, width_name_field);
// 16 + 110 + size_name * 10

// Text // Timestamp //
draw_set_font(global.fn_5c);
draw_set_halign(2);
if (string_length(post_warning) == 0)
    draw_text(drx + width - 10, dry + 9 + 3, string_upper(post_timestamp));
else
{
    draw_set_color(c_red);
    draw_text(drx + width - 10, dry + 9 + 3, string_upper(post_warning));
}
draw_set_halign(0);

// Avatar
MiniSprite9(sDNETBorder0, 7, x + 4, dry + sizTop + 8, 38, sprite_get_height(post_avatar) + 3, 1, post_color, 1);
draw_sprite_ext(post_avatar, post_avatar_image, drx + 6, dry + sizTop + 8 + 2, 1, 1, 0, c_white, 1);
if (banned) draw_sprite_ext(post_avatar, 0, drx + 6, dry + sizTop + 8 + 2, 1, 1, 0, c_white, 0.75);

// POST COUNT //
ory = ory - 45 + sprite_get_height(post_avatar) - 1;
// Border
MiniSprite9(sDNETBorder0, 7, drx + 4, ory + 50 + 18 + size_name * 10, 38, 35 - 16, 1, post_color, 1);
// Text
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(drx + 23, ory - 2 + 74 + size_name * 10, post_postcount);

// Pips
if (post_primo == 0)
{
    for (i = 0; i &lt; post_pips; i += 1) 
    {
        draw_sprite_ext(sDNETMisc, 0, drx + 9 + i * 4, ory - 11 + 90 + size_name * 10, 1, 1, 0, global.dnetColorPip[user_status], 1);
    }
}
else
{
    draw_set_color(make_color_rgb(224, 192, 64));
    draw_text(drx + 23, ory + 7 - 2 + 74 + size_name * 10, "PRIMO");
}
draw_set_halign(fa_left);
// BANNED! //
if (banned) 
{
    draw_sprite_ext(s1x1, 0, drx + 6, ory - 19 + 89 + size_name * 10, 35, 16, 0, c_black, 1);
    scr_font(global.fn_5c, c_red, 1, 1);
    draw_text(drx + 6 + 17, ory - 19 + 7 + 89 + size_name * 10, "BANNED");
}
scr_font(global.fn_dnet, c_black, 0, 0);

// Quote box sizes //
if size_quote &gt; 0 then size_quote_box = 30;
else size_quote_box = 0;

// Quote box sizes //
if size_quote_2 &gt; 0 then size_quote_box_2 = 30;
else size_quote_box_2 = 0;

// Calculate height //
// 143 == height with nothing in it //
event_user(2);

draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

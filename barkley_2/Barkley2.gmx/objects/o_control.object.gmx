<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
//scr_setup_focus();
global.curs_x = mouse_x;
global.curs_y = mouse_y;
global.cursor_fx = 1;
paused(0);

oxd = mouse_x;
oyd = mouse_y;
mxd = 0;
myd = 0;

cursor_sensitivity = 1;
scale_ratio = 1 / global.screen_scale;

text = "";

scr_init_keycodes();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// wip control object

canpause = 1;
t_fullscreen = 0;
t_window = 0;
t_albhed_toggle = 0;
t_setscale = 0;
t_winscale = 0;

screen_w = view_wview;
screen_h = view_hview;

k_esc = 1;
first = 1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// build cursor
instance_create(mouse_x,mouse_y,o_curs)
    
// Init cursor variables
cursor_captured = false;
cursor_captured_prev = false;

oxd = 0;
oyd = 0;
mxd = 0;
myd = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw test
x = 0
y = 0
show_controls = false;


/*
if file_exists('bg.png')
    background_replace(bg,'bg.png',0,0)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.DEBUGMODE and keyboard_check(vk_end) // GOD DAMN IT STOP REMOVING THE DEBUGMODE CHECK
        game_end();

// Pause on ESC if applicable
var pause_allowed = ( Minigame() == 0 and
        !instance_exists(o_cc_wizard) and
        !instance_exists(ustation) and
        !instance_exists(oTitle) and
        !instance_exists(pausemenu) and
        !instance_exists(oMap) and
        !instance_exists(o_hoopz_death_grayscale));

var isDying = (
        instance_exists(oTitle) or 
        instance_exists(o_hoopz_death_grayscale) or 
        instance_exists(scr_player_stance_death)
    );

if (pause_allowed)
    k_esc = scr_input_check_pressed(KEYID_PAUSE, PLAYER1);
    if(k_esc) {
        if(quickmenu2()) quickmenu2("destroy");
        if(instance_exists(q_menu_inventory)) instance_destroy(q_menu_inventory);
    }
else 
    k_esc = 0;

// pause on lose focus
if (!window_has_focus()) paused(true);

if(!paused() and pause_allowed and k_esc and !isDying) paused(true);

if (paused() and pause_allowed and !quickmenu2()) {
    // Paused but no pause menu created - create it
    instance_create(0, 0, pausemenu);
}

if(paused() and isDying) paused(false);
//if(paused() and !pause_allowed and window_has_focus()) paused(false);
if(paused() and !pause_allowed and window_has_focus() and !quickmenu2() and !instance_exists(pausemenu)) paused(false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse capture
       
window_width = window_get_width();
window_height = window_get_height();

screen_width = (SCREEN_WIDTH * global.screen_scale);
screen_height = (SCREEN_HEIGHT * global.screen_scale);

if(!window_get_fullscreen() &amp;&amp; (window_width != screen_width || window_height != screen_height)) {
    scr_rendermode_reset();
}

scale_ratio = 1 / global.screen_scale;
// Determine if capturing mouse or not
cursor_captured_prev = cursor_captured;

if (window_get_fullscreen()) {
    cursor_captured = false;
} else {
    if (paused() || !ENABLE_CURSOR_CAPTURE) {
        cursor_captured = false;
    }
    else {
        cursor_captured = true;
    }
}

buffer = 5;

// We should here check if the mouse was properly centered.
// At the moment there is no way to do this.

// Mouse Free
if (!cursor_captured) {
    // Handle case when was previously captured
    if (cursor_captured_prev) {
        window_mouse_set((oxd / scale_ratio) + (mxd / scale_ratio), (oyd / scale_ratio) + (myd / scale_ratio))
    }
    
    oxd = window_mouse_get_x() * scale_ratio;
    oyd = window_mouse_get_y() * scale_ratio;
    mxd = 0;
    myd = 0;
    
    global.curs_x = max(buffer, min( view_wview-buffer, round(oxd + mxd) ))
    global.curs_y = max(buffer, min( view_hview-buffer, round(oyd + myd) ))
} else { 
    // Mouse Captured
    if (!cursor_captured_prev) {
        window_mouse_set(screen_width/2, screen_height/2); 
    }    
    
    oxd = global.curs_x;
    oyd = global.curs_y;
    oxd = max(buffer, min(view_wview-buffer, oxd))
    oyd = max(buffer, min(view_hview-buffer, oyd))
    mxd = (window_mouse_get_x() - (screen_width/2)) * scale_ratio;
    myd = (window_mouse_get_y() - (screen_height/2)) * scale_ratio;

    //cull excess
    if round(oxd + mxd) &gt; view_wview-buffer
        mxd = mxd - ((oxd+mxd) - (view_wview-buffer));
    else if round(oxd + mxd) &lt; buffer
        mxd = mxd + (buffer - (oxd+mxd));
        
    if round(oyd + myd) &gt; view_hview-buffer
        myd = myd - ((oyd+myd) - (view_hview-buffer));
    else if round(oyd + myd) &lt; buffer
        myd = myd + (buffer - (oyd+myd));
        
    if instance_exists(o_hoopz) {
        if (!scr_player_getGunHolstered() &amp;&amp; !global.enemyPlacementMode ) and round(oyd + myd) &gt; (o_hud.y - view_yview - buffer)
            myd = myd - ((oyd+myd) - (o_hud.y - view_yview - buffer))
    }

    window_mouse_set(screen_width/2, screen_height/2); 
    
    global.curs_x = max(buffer, min( view_wview-buffer, round(oxd + mxd) ))
    global.curs_y = max(buffer, min( view_hview-buffer, round(oyd + myd) ))
}

// toggle windows cursor
if window_mouse_get_x() &gt;= 0 and 
        window_mouse_get_y() &gt;= 0 and
        window_mouse_get_x() &lt;= window_get_width() and 
        window_mouse_get_y() &lt;= window_get_height() {
    // Within window
    o_curs.visible = 1;
    if window_get_cursor() != cr_none {
        window_set_cursor(cr_none);
    }
}
else {
    // Outside window
    o_curs.visible = 0;
    if window_get_cursor() != cr_default {
        window_set_cursor(cr_default);
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// input
//HOTKEYS CODE IS NOW IN o_qmenu_perst

/// debug
if (keyboard_check(vk_shift) and keyboard_check_pressed(ord('R'))) {
    if instance_exists(o_hoopz_death_grayscale) then with o_hoopz_death_grayscale instance_destroy();
    with (o_hoopz) persistent = 0;
    scr_game_reset();
}

didScl = 0;
if keyboard_check_pressed(vk_f1) didScl = 1;
if keyboard_check_pressed(vk_f2) didScl = 2;
if keyboard_check_pressed(vk_f3) didScl = 3;
if keyboard_check_pressed(vk_f4) didScl = 4;

if (didScl != 0) event_user(5);

if (keyboard_check_pressed(vk_f5)) 
{
    global.vsync = !global.vsync;
    scr_rendermode_reset();
}

if keyboard_check_pressed(vk_f6) {
    if(global.fullscreen == 1){t_window = 1;}
    else{t_fullscreen = 1;}
}

if keyboard_check_pressed(vk_f7)
    global.scanlines = !global.scanlines;

if keyboard_check_pressed(vk_tab)
    show_controls = !show_controls

if t_setscale then event_user(0); 
if t_winscale then event_user(1);    
if t_fullscreen and !window_get_fullscreen() then event_user(2);    
if t_window and (window_get_fullscreen()) then event_user(3); 
if (t_albhed_toggle) {
    //TODO
    //global.AlBhed = !global.AlBhed;
}

t_fullscreen = 0;
t_window = 0;
t_albhed_toggle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   show_debug_message("F" + string(didScl) + ": Scale " + string(didScl) + "x"); 
    global.screen_scale = didScl;
    scr_rendermode_reset();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    show_debug_message("o_control: Setting windowed"); 
    global.fullscreen = 0;
    global.screen_scale = 2;
    scr_rendermode_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    show_debug_message("o_control: Setting fullscreen");
    global.fullscreen = 1;
    global.screen_scale = 4;
    scr_rendermode_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Screen scale change
    show_debug_message("o_control: Changing screen_scale");
    global.screen_scale = t_setscale;
    if(window_get_fullscreen()) then event_user(3);
    t_setscale = 0;
    scr_rendermode_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

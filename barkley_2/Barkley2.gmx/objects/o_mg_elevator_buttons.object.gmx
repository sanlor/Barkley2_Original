<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-900000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// SETUP //
namePrefix[0] = "Land of ";
namePrefix[1] = "Swamp of ";
namePrefix[2] = "Labyrinth of ";
namePrefix[3] = "Castle of ";
namePrefix[4] = "Factory of ";
namePrefix[5] = "Palace of ";
namePrefix[6] = "Tower of ";
namePrefix[7] = "Necromalignant ";
namePrefix[8] = "Blood's ";
namePrefix[9] = "Incredible ";
namePrefix[10] = "Empowering ";
namePrefix[11] = "Incredible ";
namePrefix[12] = "BBall ";
namePrefix[13] = "Darkness' ";
namePrefix[14] = "Dwarven ";
namePrefix[15] = "Gnome ";
namePrefix[16] = "Laser ";
namePrefix[17] = "Black ";
namePrefix[18] = "Bloodrose ";
namePrefix[19] = "Raventear ";
namePrefix[20] = "Goremonger's ";
namePrefix[21] = "Scrotchy Scratchy ";
namePrefix[22] = "Grave of ";
namePrefix[23] = "Tomb of ";
namePrefix[24] = "Dank ";
namePrefix[25] = "Assassin's ";

nameMiddle[0] = "Judgement ";
nameMiddle[1] = "Anguish ";
nameMiddle[2] = "Power ";
nameMiddle[3] = "Chuchulainn ";
nameMiddle[4] = "Laser ";
nameMiddle[5] = "Stink ";
nameMiddle[6] = "Trials ";
nameMiddle[7] = "Chuchulainn ";
nameMiddle[8] = "Slasher ";
nameMiddle[9] = "Dwarfland ";
nameMiddle[10] = "Pig-cow union ";
nameMiddle[11] = "Utradeath ";
nameMiddle[12] = "Slayer ";
nameMiddle[13] = "Snarky ";
nameMiddle[14] = "Mangusta ";
nameMiddle[15] = "Doggie ";
nameMiddle[16] = "Skulltrolls ";
nameMiddle[17] = "Ripper ";
nameMiddle[18] = "Grunge ";
nameMiddle[19] = "Dank ";
nameMiddle[20] = "Creed ";
nameMiddle[21] = "Megakill ";
nameMiddle[22] = "Pentafrag ";
nameMiddle[23] = "Holy Woolen Mammoth ";
nameMiddle[24] = "Sacred ";
nameMiddle[25] = "Unholy ";

nameSuffix[0] = "Chef";
nameSuffix[1] = "Disgust";
nameSuffix[2] = "Colossus";
nameSuffix[3] = "Chuchulainn";
nameSuffix[4] = "Laser";
nameSuffix[5] = "Ultimate Hell";
nameSuffix[6] = "Flames";
nameSuffix[7] = "Trip";
nameSuffix[8] = "Grunt";
nameSuffix[9] = "of the Dwarf";
nameSuffix[10] = "Omniscience";
nameSuffix[11] = "that Never Returned";
nameSuffix[12] = "Pool";
nameSuffix[13] = "of the Forever Lost";
nameSuffix[14] = "Impalement";
nameSuffix[15] = "Church";
nameSuffix[16] = "Floor";
nameSuffix[17] = "Conunundrum";
nameSuffix[18] = "Peak";
nameSuffix[19] = "Dank";
nameSuffix[20] = "BoneCrush";
nameSuffix[21] = "Hill";
nameSuffix[22] = "Server Room";
nameSuffix[23] = "Zenith";
nameSuffix[24] = "Throne";
nameSuffix[25] = "Temple";

namePrefixLength = array_length_1d(namePrefix)-1;
nameMiddleLength = array_length_1d(nameMiddle)-1;
nameSuffixLength = array_length_1d(namePrefix)-1;

for (i=0; i&lt;33; i+=1;)
    {
    button_names[i] = namePrefix[ irandom_range(0,namePrefixLength) ] 
      + nameMiddle[ irandom_range(0, nameMiddleLength) ] 
      + nameSuffix[ irandom_range(0, nameSuffixLength) ];
    button_floor_hover[i] = false;
    button_floor_pressed[i] = false;
    }
    
button_row = 0;
button_number = 33;
//namePrefix = 0;
//nameMiddle = 0;
//nameSuffix = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ROW of BUTTONS //
if o_mg_elevator_cuchu.button_clicked = false then
    {
    if o_curs.y &gt;= y and o_curs.y &lt;= y + 8 then
        {
        for (i=0; i&lt;button_number; i+=1;)
            {
            if o_curs.x &gt;= 10 + i * 10 and o_curs.x &lt;= 18 + i * 10 then 
                {
                o_mg_elevator_cuchu.floor_name = button_names[i];
                o_mg_elevator_cuchu.floor_hover = i + button_row;
                button_floor_hover[i] = true;
                }
            else button_floor_hover[i] = false;
            }
        }
    else for (i=0; i&lt;button_number; i+=1;) button_floor_hover[i] = false;   

    // CLICK ON A BUTTON //
    if (MiniKeyPress("action"))
        {
        for (i=0; i&lt;button_number; i+=1;)
            {
            if button_floor_hover[i] = true then 
                {
                o_mg_elevator_cuchu.button_clicked = true;
                o_mg_elevator_cuchu.floor_selected = i + button_row;
                o_mg_elevator_cuchu.timer_floor_clicked = 20;
                button_floor_pressed[i] = true;
                }
            }
        }
    }
else
    {
    for (i=0; i&lt;button_number; i+=1;) button_floor_hover[i] = false; 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_red);
for (i=0; i&lt;button_number; i+=1;)
    {
    if button_floor_pressed[i] = true then draw_set_color(c_blue);    
    else if button_floor_hover[i] = true then draw_set_color(c_black);
    else draw_set_color(c_red);
    draw_rectangle(view_xview + 10 + i * 10, y + view_yview, view_xview + 18 + i * 10, y + view_yview + 8, false);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2510000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
wid = SCREEN_WIDTH/4+15;
hei = SCREEN_HEIGHT-27;
startX = -10;
startY = -10;
targetX = startX;
targetY = startY;
lerpSpeedShow = 0.2;
lerpSpeedHide = 0.4;

floatDuration = 1;
floatAmount = 0;
floatPoint = 0; //Radians


startScaleX = 0;
startScaleY = 1;
borderId = 20;

showGunName = 0;
gunNameWidth = 200;
gunNameHeight = 40;
gunNameX = 0;
gunNameStartX = -90;
gunNameTargetX = 0;
gunWidth = 100;
gunHeight = 16;
gunSeparation = 2;
ammoX = 70;
weightX = 97;
gunBagGunWidth = 8;
gunBagGunHeight = 16;

Border("generate", borderId, wid, hei);
Border("generate", borderId-1, gunNameWidth, gunNameHeight);

x = startX;
y = startY;
image_xscale = startScaleX;
image_yscale = startScaleY;
hiding = 0;

surf = 0;
gunFromBag = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>quickmenu2</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"killSurface"</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>surf</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hide animation;
    hiding = !global.quickmenuShown;

if(hiding == 1){
    if(x == startX and 
        y == startY and 
        image_xscale == startScaleX and
        image_yscale == startScaleY) instance_destroy();
}

if (scr_input_check_pressed(KEYID_GUNBAG, PLAYER1)) scr_player_equip("gunbag", true);
if (scr_input_check_pressed(KEYID_WEAPON_NEXT, PLAYER1)) scr_player_equip("next", true);
if (scr_input_check_pressed(KEYID_WEAPON_PREV, PLAYER1)) scr_player_equip("prev", true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(not surface_exists(surf)){
    surf = surface_create(wid+(gunNameWidth-wid)+30, hei); //+30 because of corner cases
}
    surface_set_target(surf);
    draw_clear_alpha(c_white,0);
    Border("draw", borderId, 0, 0);
    
    var currentGunId = Gun("current");
    var baseX = 4;
    var baseY = 14;
    var color = c_orange;
    var viewX = x+view_xview[0];
    var viewY = y+view_yview[0];
    var hoverMenu = scr_mouse_rect(viewX, viewY, viewX+wid, viewY+hei);
    var hover = 0;
    showGunName = hoverMenu;
    
    baseY += 8;
    
    for (i = 0; i &lt; Gun("amount"); i += 1)
    {   
        var ammoColor = c_gray;
        if(Gun("ammo", i) == 0) ammoColor = c_red;
          
        if(currentGunId == i){ //Current gun
            color = c_white;
            var bgColor = c_black;
            if(ammoColor == c_gray) ammoColor = color;
            hover = scr_mouse_rect(viewX+baseX, viewY+baseY, viewX+baseX+gunWidth, viewY+baseY+(gunHeight*2));
            //Bg Color
            if(hover) {
                //scr_draw_rect(baseX, baseY, gunWidth, gunHeight*2, c_gray, 0.5);
                color = c_yellow;
                if(Gun("ammo", i) == 0) ammoColor = c_orange;
                else ammoColor = c_yellow;
            }
            scr_draw_rect(baseX, baseY-1, gunWidth, gunHeight*2, color, global.quickmenuTextAlpha);
            scr_draw_rect(baseX, baseY, gunWidth, gunHeight*2, bgColor, 1);

            //Gun
            Gun("draw index", i, baseX+25, baseY-2, 1, 1, 0, c_white, global.quickmenuTextAlpha);
            scr_draw_rect(baseX, baseY+gunHeight, gunWidth, gunHeight, bgColor, 1);
            if(hover) scr_draw_rect(baseX, baseY+gunHeight, gunWidth, gunHeight, c_gray, 0.5);
            Gun("draw index", i, baseX+25, baseY-2, 1, 1, 0, c_white, global.quickmenuTextAlpha * 0.5);

            quickmenu2("write", global.fn_7oc, color, baseX+7, baseY+gunHeight/2, fa_left, fa_middle, Gun("name", i));       
            quickmenu2("write", global.fn_7ocs, ammoColor, baseX+ammoX, baseY+gunHeight/2, fa_center, fa_middle, Gun("ammo", i));
            quickmenu2("write", global.fn_7ocs, color, baseX+weightX, baseY+gunHeight/2, fa_right, fa_middle, ceil(Gun("weight", i)));

            quickmenu2("write", global.fn_7ocs, c_orange, baseX+7, baseY+gunHeight+1+gunHeight/2, fa_left, fa_bottom, "PTS");
            quickmenu2("write", global.fn_7ocs, c_orange, baseX+33, baseY+gunHeight+1+gunHeight/2, fa_center, fa_bottom, "DMG");
            quickmenu2("write", global.fn_7ocs, c_orange, baseX+55, baseY+gunHeight+1+gunHeight/2, fa_center, fa_bottom, "RTE");
            quickmenu2("write", global.fn_7ocs, c_orange, baseX+75, baseY+gunHeight+1+gunHeight/2, fa_center, fa_bottom, "SPC");
            quickmenu2("write", global.fn_7ocs, c_orange, baseX+97, baseY+gunHeight+1+gunHeight/2, fa_right, fa_bottom, "CAP");

            quickmenu2("write", global.fn_7ocs, color, baseX+7, baseY+gunHeight+gunHeight/2, fa_left, fa_top, round(Gun("value", i)));
            quickmenu2("write", global.fn_7ocs, color, baseX+33, baseY+gunHeight+gunHeight/2, fa_center, fa_top, round(Gun("damage", i)));
            quickmenu2("write", global.fn_7ocs, color, baseX+55, baseY+gunHeight+gunHeight/2, fa_center, fa_top, Gun("rate", i));
            quickmenu2("write", global.fn_7ocs, color, baseX+75, baseY+gunHeight+gunHeight/2, fa_center, fa_top, round(Gun("special", i)));
            quickmenu2("write", global.fn_7ocs, color, baseX+97, baseY+gunHeight+gunHeight/2, fa_right, fa_top, round(Gun("capacity", i)));
                     
            baseY += (gunSeparation+gunHeight*2);
            gunFromBag = 0;
        } else { //Other guns
            color = c_orange;
            var bgColor = c_gray;
            hover = scr_mouse_rect(viewX+baseX, viewY+baseY, viewX+baseX+gunWidth, viewY+baseY+gunHeight)
            if(hover) {
                if(mouse_check_button_pressed(mb_left)){
                    bgColor = c_white;
                    scr_equipment_guns_bandolier_equip(i);
                    //scr_player_equip("swap");
                } else bgColor = c_gray;
                color = c_yellow;
                //scr_draw_rect(baseX, baseY, gunWidth, gunHeight*2, bgColor, 0.5);
            } else color = c_orange;
            //Bg Color
            scr_draw_rect(baseX, baseY-1, gunWidth, gunHeight, color, global.quickmenuTextAlpha);
            scr_draw_rect(baseX, baseY, gunWidth, gunHeight, c_black, 1);

            //Gun
            Gun("draw index", i, baseX+15, baseY-2, 1, 1, 0, c_white, global.quickmenuTextAlpha * 0.5);
            quickmenu2("write", global.fn_7ocs, color, baseX+8, baseY+gunHeight/2, fa_left, fa_middle, Gun("name", i));           
            
            if(hover){
                if(Gun("ammo", i) == 0) quickmenu2("write", global.fn_7ocs, c_orange, baseX+ammoX, baseY+gunHeight/2, fa_center, fa_middle, Gun("ammo", i));
                else quickmenu2("write", global.fn_7ocs, c_yellow, baseX+ammoX, baseY+gunHeight/2, fa_center, fa_middle, Gun("ammo", i));
                quickmenu2("write", global.fn_7ocs, c_yellow, baseX+weightX, baseY+gunHeight/2, fa_right, fa_middle, ceil(Gun("weight", i)));
            } else {
                quickmenu2("write", global.fn_7ocs, ammoColor, baseX+ammoX, baseY+gunHeight/2, fa_center, fa_middle, Gun("ammo", i));
                quickmenu2("write", global.fn_7ocs, c_gray, baseX+weightX, baseY+gunHeight/2, fa_right, fa_middle, ceil(Gun("weight", i)));
            }

            baseY += (gunSeparation+gunHeight);
        }
    }

    if(Gun("gunbag")){
        baseY = 128;
        quickmenu2("write", global.fn_7ocs, c_yellow, baseX+15, baseY, fa_left, fa_top, "GUN'S BAG:");
        baseY += 10;
        scr_draw_rect(baseX+10, baseY, gunBagGunWidth*10, gunBagGunHeight*2, c_black, 1);
        for (i = 0; i &lt; Gun("gunbag amount"); i += 1)
        {   
            baseX = 16+(8*(i%10));

            var hover = scr_mouse_rect(viewX+baseX+2, viewY+baseY+2, viewX+baseX+gunBagGunWidth-2, viewY+baseY+gunBagGunHeight-2); 
            scr_draw_rect(baseX, baseY, gunBagGunWidth, gunBagGunHeight, c_black, 1);
            if(hover){
                scr_draw_rect(baseX, baseY, gunBagGunWidth, gunBagGunHeight, c_gray, 0.5);
                if(mouse_check_button_pressed(mb_left)){
                    scr_draw_rect(baseX, baseY, gunBagGunWidth, gunBagGunHeight, c_white, 1);
                    scr_equipment_guns_bag_equip(i);
                    //scr_player_equip("swap");
                }
            }

            if(Gun("current") == i+5) {
                if(Gun("ammo", i+5) == 0) color = c_orange;
                else color = c_white;
                gunFromBag = 1;
            }
            else if(Gun("ammo", i+5) == 0) color = c_red;
            else color = c_gray;
            //show_debug_message(Gun("type sub", i+5) );
            draw_sprite_ext(sMenuUtilityBlip, Gun("type sub", i+5) + 1, baseX, baseY, 1, 1, 0, color, 0.9*global.quickmenuTextAlpha);
 
            if(i==9) baseY += 16; //Could be better, but alas I CBA
        }
    }
    
    if(showGunName) gunNameX = lerp(gunNameX, gunNameTargetX, 0.1);
    else gunNameX = lerp(gunNameX, gunNameStartX, 0.1);

    quickmenu2("write", global.fn_7ocs, c_orange, ammoX+4, 14, fa_center, fa_top, "AMMO");
    quickmenu2("write", global.fn_7ocs, c_orange, weightX+4, 14, fa_right, fa_top, "WGT");

    Border("draw", borderId-1, gunNameX, 173);
    draw_set_color(c_white);
    draw_set_alpha(global.quickmenuTextAlpha);
    DrawGunName(gunNameX+gunNameWidth/2, 185, 
        Gun("prefix1", currentGunId), 
        Gun("prefix2", currentGunId), 
        Gun("material", currentGunId), 
        Gun("type", currentGunId), 
        Gun("suffix", currentGunId), 
        1,
        gunFromBag);
    surface_reset_target();
//}

if(hiding == 0) {
    quickmenu2("showAnimation", self, targetX, targetY); 
} else if(hiding == 1){ 
    quickmenu2("hideAnimation", self, startX, startY, startScaleX, startScaleY);
}

draw_surface_ext(surf, view_xview[0]+x, view_yview[0]+y, image_xscale, image_yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

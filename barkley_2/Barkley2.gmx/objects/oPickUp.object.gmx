<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Entity</parentName>
  <maskName>mask_hud_gunicon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();

shadow_visible = 0;
visible = false;
timer_delay = 1;
candy = NULL;
gun = NULL;
timer = scr_item_getDisappearTimer();
flash = 0;

move_z = 25;
z = -16;
gravity_z = 7;

//scr_entity_setMovementCollisionShape_rectangle(48, 24);
scr_entity_setMovementCollisionShape_circle(12);
scr_entity_setDirSpd(random(360), 6+random(8));

pickable = false;
grabbed = 0;
colorSin = 0;
hoverSin = 0;

bouncesLeft = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Pause //
if paused() exit;

// A delay timer for visibility to prevent "snapping" caused by collisions with others in the first few frames of the objects lifespan //
if timer_delay &gt; 0 then
    {
    // Tick down //
    timer_delay -= dt();
    
    // Become visible //
    if timer_delay &lt;= 0 then visible = true;
    }

// When not pickable //
if (!pickable) then
    {
    // Bounce off the ground
    if (z &lt;= base_z &amp;&amp; move_z &lt;= 0) 
        {
        if (move_z &lt;= -2) 
            {
            if (bouncesLeft &lt;= 0) 
                {
                scr_entity_setDirSpd(move_dir, 0);
                z = base_z;
                pickable = true;
                } 
            else 
                {
                bounceFactor = 10;
                if (gun != NULL) bounceFactor += gun[? "pWeight"];
                bounceRatio = min(((10/bounceFactor) * .65), 0.8);
                move_z *= -bounceRatio;
                scr_entity_setDirSpd(move_dir, move_dist * bounceRatio);
                bouncesLeft--;
                }
            } 
        else 
            {
            pickable = true;
            }
        }
    } 
else 
    {
    // Hover
    move_z = 0;
    gravity_z = 0;
    scr_entity_setDirSpd(move_dir, 0);
    z = base_z + 6 - sin(hoverSin)*4;
    hoverSin += dt() * .15;
}

// Handle bouncing
if (movement_hit) {
    // Bounce and slightly reduce speed
    var hitdir = point_direction(0, 0, movement_hit_vx, movement_hit_vy);
    var flip = vector_reflection(-move_x, -move_y, movement_hit_vx, movement_hit_vy);
    scr_entity_setMoveXY(flip[0] * 0.75, flip[1] * 0.75);
    flip = 0 // free array
}

flash += dt() * 5;
colorSin += dt() * .6;

// Destroy object and MAP after timeout
if(timer&gt;0){timer-=dt();}
else{pickable = false;  instance_destroy();}

// Can I pick up?
_obj = PlayerCombatActor;
if (_obj != noone &amp;&amp; point_distance(x, y, _obj.x, _obj.y) &lt;= 18)
{
    if (pickable) event_user(0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

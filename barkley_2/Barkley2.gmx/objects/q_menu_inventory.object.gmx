<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2510000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
paused(true);

wid = SCREEN_WIDTH;
hei = SCREEN_HEIGHT-30;
startX = 0;
startY = -5;
targetX = 0;
targetY = 0;
lerpSpeedShow = 0.2;
lerpSpeedHide = 0.4;

floatDuration = 1;
floatAmount = 0;
floatPoint = 0; //Radians

startScaleX = 1;
startScaleY = 0;
borderId = 25;

nextPageBtnX = 294;
nextPageBtnY = 157;
prevPageBtnX = 294;
prevPageBtnY = 15;
pageBtnWidth = 20;
pageBtnHeight = 20;

hideBtnX = 320;
hideBtnY = 165;
hideBtnWidth = 48;
hideBtnHeight = 28;
visibleItems = 9;
itemHeight = 18;
boxWidth = 280;
itemWidth = boxWidth-2;
boxHeight = itemHeight*visibleItems+2;

//No touch
Border("generate", borderId, wid, hei);
x = startX;
y = startY;
image_xscale = startScaleX;
image_yscale = startScaleY;
hiding = 0;
surf = 0;
curPage = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>quickmenu2</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"killSurface"</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>surf</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>quickmenu2</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"destroy"</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hide animation;
    //hiding = !global.quickmenuShown;
if(scr_input_check_pressed(KEYID_QUICKMENU, PLAYER1)) hiding = 1;

if(hiding == 1){
    if(x == startX and 
        y == startY and 
        image_xscale == startScaleX and
        image_yscale == startScaleY) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(not surface_exists(surf)){
    surf = surface_create(wid, hei);
}
    surface_set_target(surf);
    draw_clear_alpha(c_white,0);
    Border("draw", borderId, 0, 0);
    var viewX = x+view_xview[0];
    var viewY = y+view_yview[0];
    var click = mouse_check_button_pressed(mb_left);
    var hover = 0;
    var baseX = 12;
    var baseY = 14;

    var boxColor = c_orange;
    var textColor = c_orange;

    scr_draw_rect(baseX, baseY, boxWidth, boxHeight, boxColor, 1);
    scr_draw_rect(baseX+1, baseY+1, boxWidth-2, boxHeight-2, c_black, 1);

    var itemCount = Item("unique");
    var item = 0;
    var itemName = "";
    var maxPage = floor(itemCount/visibleItems);
    var hoverY = 0;
    var hoverItem = "";
    baseX += 1;
    baseY += 1;
    var count = min(visibleItems, itemCount);
    for (i = 0; i &lt; count; i += 1) {
      hover = scr_mouse_rect(viewX+baseX, viewY+baseY, viewX+baseX+itemWidth, viewY+baseY+itemHeight-1);
      if(hover) boxColor = c_yellow;
      else boxColor = c_orange;
      itemName = Item("name", i+(curPage*visibleItems));
      if(string(itemName) == "undefined") continue;

      scr_draw_rect(baseX+1, baseY+1, itemWidth-2, itemHeight-2, boxColor, global.quickmenuTextAlpha);
      scr_draw_rect(baseX+2, baseY+2, itemWidth-4, itemHeight-4, c_black, 1);

      if(hover) {
        //if(click) scr_draw_rect(baseX+2, baseY+2, itemWidth-4, itemHeight-4, c_white, 1);
        hoverY = baseY;
        hoverItem = itemName;
      }

      Item("draw name", itemName, baseX+2, baseY, 1, 1, 0, c_white, 1);
      quickmenu2("write", global.fn_7oc, boxColor, baseX+18, baseY+itemHeight/2, fa_left, fa_middle, itemName);       
      quickmenu2("write", global.fn_7ocs, boxColor, baseX+itemWidth-3, baseY+itemHeight/2, fa_right, fa_middle, "x"+string(Item("count", itemName)));       

      baseY += itemHeight;
    }

    if(hoverItem != ""){
      scr_draw_rect(baseX+1, hoverY+itemHeight-4, itemWidth-2, itemHeight-2, c_yellow, global.quickmenuTextAlpha);
      scr_draw_rect(baseX+2, hoverY+itemHeight-4, itemWidth-4, itemHeight-4, c_black, 1);
      Item("draw name", hoverItem, baseX+2, hoverY, 1, 1, 0, c_white, 1);
      quickmenu2("write", global.fn_7ocs, c_yellow, baseX+3, hoverY+itemHeight+itemHeight/2-5, fa_left, fa_middle, Item("description", hoverItem));       
    }

    //NEXT PAGE
    hover = scr_mouse_rect(viewX+nextPageBtnX, viewY+nextPageBtnY, viewX+nextPageBtnX+pageBtnWidth, viewY+nextPageBtnY+pageBtnHeight);
    if(hover) boxColor = c_yellow;
    else boxColor = c_orange;
    if(hover and click) {
      curPage = curPage + 1;
      if(maxPage &lt; curPage) curPage = 0;
    }
    scr_draw_rect(nextPageBtnX, nextPageBtnY, pageBtnWidth, pageBtnHeight, boxColor, global.quickmenuTextAlpha);
    scr_draw_rect(nextPageBtnX+1, nextPageBtnY+1, pageBtnWidth-2, pageBtnHeight-2, c_black, 1);
    quickmenu2("write", global.fn_7oc, boxColor, nextPageBtnX+pageBtnWidth/2, nextPageBtnY+pageBtnWidth/2, fa_center, fa_middle, "\/");       

    //PREV PAGE
    hover = scr_mouse_rect(viewX+prevPageBtnX, viewY+prevPageBtnY, viewX+prevPageBtnX+pageBtnWidth, viewY+prevPageBtnY+pageBtnHeight);
    if(hover) boxColor = c_yellow;
    else boxColor = c_orange;
    if(hover and click) {
      curPage = curPage - 1;
      if(curPage &lt; 0) curPage = maxPage;

    }
    scr_draw_rect(prevPageBtnX, prevPageBtnY, pageBtnWidth, pageBtnHeight, boxColor, global.quickmenuTextAlpha);
    scr_draw_rect(prevPageBtnX+1, prevPageBtnY+1, pageBtnWidth-2, pageBtnHeight-2, c_black, 1);
    quickmenu2("write", global.fn_7oc, boxColor, prevPageBtnX+pageBtnWidth/2, prevPageBtnY+pageBtnWidth/2, fa_center, fa_middle, "/\");       
    
    // PAGE COUNTER
    quickmenu2("write", global.fn_7oc, c_orange, nextPageBtnX+pageBtnWidth/2, (pageBtnWidth/2) + (prevPageBtnY+nextPageBtnY)/2, fa_center, fa_middle, string(curPage+1)+"/"+string(maxPage+1));       

    //CLOSE
    hover = scr_mouse_rect(viewX+hideBtnX, viewY+hideBtnY, viewX+hideBtnX+hideBtnWidth, viewY+hideBtnY+hideBtnHeight);
    if(hover){
      if(click){
        hiding = 1;
        quickmenu2("destroy");
      }
      boxColor = c_yellow;
    } else {
      boxColor = c_orange;
    }

    scr_draw_rect(hideBtnX, hideBtnY, hideBtnWidth, hideBtnHeight, boxColor, global.quickmenuTextAlpha);
    scr_draw_rect(hideBtnX+1, hideBtnY+1, hideBtnWidth-2, hideBtnHeight-2, c_black, 1);
    if(hover and click) scr_draw_rect(hideBtnX+1, hideBtnY+1, hideBtnWidth-2, hideBtnHeight-2, c_white, 1);
    quickmenu2("write", global.fn_7oc, boxColor, hideBtnX+hideBtnWidth/2, hideBtnY+(hideBtnHeight/2), fa_center, fa_middle, "CLOSE");       

   //draw_sprite_ext(sMenuUtilityDefense, 0, 8, 10, 1, 1, 0, c_white, 0.8);
    surface_reset_target();

if(hiding == 0) {
    quickmenu2("showAnimation", self, targetX, targetY); 
} else if(hiding == 1){ 
    quickmenu2("hideAnimation", self, startX, startY, startScaleX, startScaleY);
}

draw_surface_ext(surf, view_xview[0]+x, view_yview[0]+y, image_xscale, image_yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

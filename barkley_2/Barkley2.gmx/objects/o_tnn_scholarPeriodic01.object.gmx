<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cyberScholar01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
scr_event_hook_onInteract(event_cinema);
scr_entity_animation_define("default", sprite_index, 3, 1, 0);
gossip = -999;
gosAct = 1;
gosTim = 2;
gosCou = 0;

script = "
DIALOG | Cyber Scholar | Did you know that gun's that different gun's types have different ways of gathering `kw`Periodic Power?`rt` That's right, I'm not lying. For example, a simple pistol will get a small amount of `kw`Periodic Power`rt` with each shot fired, whereas a `kw`shotgun`rt` will gain more `kw`Periodic Power`rt` with every bullet that lands on a foe. There are many other types of ways to gain more `kw`Periodic Power,`rt` just as there are many other types of gun's.
DIALOG | Cyber Scholar | Anyways, once your `kw`Periodic Meter`rt` is full you can brast a `kw`Special Shot`rt` from your gun's, but only if your gun's is blessed with a suitable `kw`Prefix.`rt` This will deplete your `kw`Periodic Power`rt` however so use it with caution...
";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance and pause //
event_inherited()
if paused() exit;

// Pacify toggle //
if instance_exists(o_hoopz) then
    {
    // Non pacify //
    if o_hoopz.y &gt;= 706 and o_hoopz.y &lt;= 1024 then global.gunPacify = false;       
        
    // Pacify //
    else if global.gunPacify = false then
        {
        global.gunPacify = true;
        if (o_hoopz.stance != scr_player_stance_standard) then o_hoopz.stance = scr_player_stance_standard;           
        }
    }
    
/// Gossip
if (scr_time_db("tnnCurfew") == "during") exit;
if (gosAct)
{
    if (global.event)
    {
        if (instance_exists(gossip)) { Destroy(gossip); }
        exit;
    }
    gosCou = Goto(gosCou, 0, dt_sec());
    if (gosCou &lt;= 0)
    {
        gossip = instance_create(x, y, o_entity_indicatorGossip); // 45 DT life
        gossip.text = "Periodic Shot!";
        gosCou += gosTim + (gossip.timer / 10);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>14,45</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>

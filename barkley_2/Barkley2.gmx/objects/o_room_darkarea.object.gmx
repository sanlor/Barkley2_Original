<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_darkareaControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2500000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
surface = -1;
light = 0.25;
light_goal = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Paused //
if paused() exit;

// Change light level //
if light &lt; light_goal then light += 0.4 * dt_sec();
else if light &gt; light_goal then light -= 0.4 * dt_sec();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Roundmound Darkness
light_goal = 0.2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Full lightness
light_goal = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Full darkness
light_goal = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Free surface //
surface_free(surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
if (instance_exists(o_debugMode)) exit;

if surface_exists(surface) then
{
    // Do addition
    draw_set_blend_mode(bm_add);
    //show_debug_message("LIGHTS = " + string(ds_list_size(global.dslLightObject)));
    for (i = 0; i &lt; ds_list_size(global.dslLightObject); i += 1) Light("draw", i);
    //draw_set_blend_mode(bm_normal);
    
    with (o_kelpster01) draw_sprite_ext(sprite_index, 1, x, y, 1, 1, 0, eyeCol, 1);
    
    // Surface dickery mode //
    surface_set_target(surface);
    draw_clear_alpha(c_black, (1 - light));
    //surface_reset_target();
    //surface_set_target(surface);
    draw_set_blend_mode(bm_subtract);
    
    with (o_kelpster01) draw_sprite_ext(sprite_index, 1, x, y, 1, 1, 0, eyeCol, 1);
    
    // Dj spotlight always on //
    if instance_exists(o_cts_hoopz) then 
        {
        draw_sprite_ext(s_mg_booty_light_orbit, 0, o_cts_hoopz.x, o_cts_hoopz.y - 18, 1, 1, 0, c_white, 0.85);
        //draw_sprite_ext(s_mg_booty_light_orbit, 0, o_curs.x + view_xview, o_curs.y + view_yview, 1, 1, 0, c_white, 0.45);
        }
        
    // Player lights //
    else if instance_exists(PlayerCombatActor) then 
        {
        var dir = point_direction(PlayerCombatActor.x, PlayerCombatActor.y, o_curs.x + view_xview, o_curs.y + view_yview);
        if (global.keyinput_type == KEYINPUT_GAMEPAD)
            dir = point_direction(0, 0, PlayerCombatActor.look_x, PlayerCombatActor.look_y);
        //draw_sprite_ext(s_mg_booty_light_orbit, 0, PlayerCombatActor.x, PlayerCombatActor.y - 10, 1, 1, 0, c_white, 0.85);
        //draw_sprite_ext(s_hoopz_lightcone, 0, PlayerCombatActor.x + lengthdir_x(38, dir), PlayerCombatActor.y - 2 + lengthdir_y(38, dir), 1, 1, dir, c_white, 0.85);
        draw_sprite_ext(s_hoopz_lightcone, 0, PlayerCombatActor.x, PlayerCombatActor.y, 1, 1, dir, c_white, 0.85);
        }
    
    // Environs and whatever casting light in dark areas //    
    if instance_exists(o_biotek_hardware01) then with o_biotek_hardware01 draw_sprite_ext(s_mg_booty_light_orbit, image_index, x, y - 24, 1, 1, 0, image_blend, 0.2);
    if instance_exists(o_biotek_hardware02) then with o_biotek_hardware02 draw_sprite_ext(s_mg_booty_light_orbit, image_index, x, y - 24, 1, 1, 0, image_blend, 0.2);
    if instance_exists(o_biotek_hardware03) then with o_biotek_hardware03 draw_sprite_ext(s_mg_booty_light_orbit, image_index, x, y - 16, 1, 1, 0, image_blend, 0.2);
    if instance_exists(o_biotek_computer01) then with o_biotek_computer01 draw_sprite_ext(s_mg_booty_light_orbit, image_index, x + 36, y - 24, 1, 1, 0, image_blend, 0.8);
    if instance_exists(o_critter_firefly) then with o_critter_firefly draw_sprite_ext(s_effect_firefly_light, image_index, x, y, 1, 1, 0, image_blend, alpha);
    if instance_exists(o_effect_fary_spark) then with o_effect_fary_spark draw_sprite_ext(s_effect_firefly_light, image_index, x, y, 1, 1, 0, image_blend, alpha);
    
    //if instance_exists(o_mg_finding_zs_z_houseofz) then with o_mg_finding_zs_z_houseofz if visible = true then draw_sprite_ext(s_mg_booty_light_orbit, 0, x, y, 1, 1, 0, image_blend, 0.95);
    if instance_exists(o_effect_pdt_candle) then with o_effect_pdt_candle draw_sprite_ext(s_effect_candle_light, 0, x, y, 1, 1, 0, image_blend, 0.95);

    // Draw added lights
    for (i = 0; i &lt; ds_list_size(global.dslLightObject); i += 1) Light("draw", i);
    
    // Back to normal //
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    draw_surface_ext(surface, 0, 0, 1, 1, 0,c_white, 1);
    
    
}
else
{
    surface = surface_create(room_width, room_height);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>

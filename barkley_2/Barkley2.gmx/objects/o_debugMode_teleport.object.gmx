<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2100000</depth>
  <persistent>0</persistent>
  <parentName>o_debugMode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make map of rooms
scl = display_get_gui_width() / 384;
selZon = 0; //zone select
selRom = -1;
selTxtVspMan = 10; // was 15
selRowSub = 20;

mapRoom = ds_map_create();
ds_map_add(mapRoom, "air", "AI Ruins");
ds_map_add(mapRoom, "bct", "Brain City");
ds_map_add(mapRoom, "chu", "Cuchu Lair");
ds_map_add(mapRoom, "dth", "Death Tower");
ds_map_add(mapRoom, "est", "Eastelands");
ds_map_add(mapRoom, "fct", "Factory");
ds_map_add(mapRoom, "far", "Fary Forest");
ds_map_add(mapRoom, "pea", "Gilbert's Peak");
ds_map_add(mapRoom, "pri", "The Hoosegow");
ds_map_add(mapRoom, "ice", "Icelands");
ds_map_add(mapRoom, "min", "Mines");
ds_map_add(mapRoom, "sw1", "Sewers1");
ds_map_add(mapRoom, "sw2", "Sewers2");
ds_map_add(mapRoom, "swp", "Swamps");
ds_map_add(mapRoom, "tnn", "Tir Na Nog");
ds_map_add(mapRoom, "usw", "Undersewer");
ds_map_add(mapRoom, "wst", "Westelands");
ds_map_add(mapRoom, "pdt", "Ys-Kolob");
ds_map_add(mapRoom, "gau", "Gauntlet");
ds_map_add(mapRoom, "etc", "Etcetera");

mapShort = ds_map_create(); //Shorthand for all maps

mapOrder = ds_list_create();

ds_list_add(mapOrder, "AI Ruins");
ds_list_add(mapOrder, "Brain City");
ds_list_add(mapOrder, "Cuchu Lair");
ds_list_add(mapOrder, "Death Tower");
ds_list_add(mapOrder, "Eastelands");
ds_list_add(mapOrder, "Factory");
ds_list_add(mapOrder, "Fary Forest");
ds_list_add(mapOrder, "Gilbert's Peak");
ds_list_add(mapOrder, "The Hoosegow");
ds_list_add(mapOrder, "Icelands");
ds_list_add(mapOrder, "Mines");
ds_list_add(mapOrder, "Sewers1");
ds_list_add(mapOrder, "Sewers2");
ds_list_add(mapOrder, "Swamps");
ds_list_add(mapOrder, "Tir Na Nog");
ds_list_add(mapOrder, "Undersewer");
ds_list_add(mapOrder, "Westelands");
ds_list_add(mapOrder, "Ys-Kolob");
ds_list_add(mapOrder, "Gauntlet");
ds_list_add(mapOrder, "Etcetera");

///Load up all rooms into these lists
for (i = 0; i &lt; 2000; i += 1)
{
    if (room_exists(i))
    {
        //Get three character identifier
        nam = room_get_name(i);
        idn = string_copy(nam, 3, 3);
        if (ds_map_exists(mapRoom, idn) == 0) idn = "etc";
        anm = ds_map_find_value(mapRoom, idn); //Area name as string
        if (ds_map_exists(mapRoom, anm) == 0)
        {
            lst = ds_list_create();
            ds_map_add_list(mapRoom, anm, lst);
        }
        else { lst = ds_map_find_value(mapRoom, anm); }
        ds_list_add(lst, i);
        //rid = ds_list_find_value(lst, i);
        rid = room_get_name(i);
        if (idn != "etc") rid = string_copy(rid, 7, string_length(rid) - 6);
        ds_map_add(mapShort, i, rid);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy map
ds_map_destroy(mapRoom);
ds_map_destroy(mapShort);
ds_list_destroy(mapOrder);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step - Input
paused(true);
dx = 0 * scl;
dy = 0 * scl;
dw = 100 * scl;
dh = selTxtVspMan * scl;
dy += dh;
for (i = 0; i &lt; ds_list_size(mapOrder); i += 1)
{
    if (scr_mouse_area(dx, dy, dx + dw, dy + dh)) selZon = i;
    dy += dh;
}

//Room from zone picker
selRom = -1;
dx += dw;
dy = 2 * scl;
dw = 100 * scl;
dh = 10 * scl;
h = 0;
lst = ds_map_find_value(mapRoom, ds_list_find_value(mapOrder, selZon));
if (!is_undefined(lst)) {
    for (i = 0; i &lt; ds_list_size(lst); i += 1)
    {
        if (scr_mouse_area(dx, dy, dx + dw, dy + dh)) selRom = i;
        dy += dh;
        h += 1;
        if (h &gt;= selRowSub) { h = 0; dx += 100 * scl; dy = 2 * scl; }
    }
}

///Teleport
if (selRom == -1) exit;
if(mouse_check_button(mb_left))///teleport code!
{
    mouse_clear(mb_left);
    paused(false);
    global.eventTeleport = 1;
    global.fadeRoomTemp = -1;
    Teleport(ds_list_find_value(lst, selRom), 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw gui
draw_clear(c_fuchsia);


//On sidebar draw
scr_font(fnt_debugSml, c_black, 0, 0);
//draw_text_transformed(0, 0, "ROOM = " + room_get_name(room), 1, 1, 0);
draw_text_transformed(2, 1, "" + room_get_name(room), scl * .5, scl * .5, 0);
draw_set_color(c_white);

dx = 0 * scl;
dy = 0 * scl;
dw = 100 * scl;
dh = selTxtVspMan * scl;
dy += selTxtVspMan * scl;
for (i = 0; i &lt; ds_list_size(mapOrder); i += 1)
{
    if (selZon == i) draw_sprite_ext(s_1, 0, dx, dy, dw, dh, 0, c_orange, 1);
    draw_text_transformed(dx + 2, dy + 1, ds_list_find_value(mapOrder, i), scl * .5, scl * .5, 0);
    dy += dh;
}

//draw sub rooms
dx += dw;
dy = 2 * scl;
dw = 100 * scl;
dh = 10 * scl;
h = 0;
lst = ds_map_find_value(mapRoom, ds_list_find_value(mapOrder, selZon));
if (!is_undefined(lst)) {
    for (i = 0; i &lt; ds_list_size(lst); i += 1)
    {
        if (selRom == i) draw_sprite_ext(s_1, 0, dx, dy, dw, dh, 0, c_orange, 1);
        rid = ds_map_find_value(mapShort, ds_list_find_value(lst, i));
        draw_text_transformed(dx, dy, rid, scl / 2, scl / 2, 0);
        dy += dh;
        h += 1;
        if (h &gt;= selRowSub) { h = 0; dx += 100 * scl; dy = 2 * scl; } // was 23
    }
}

///Draw mouse
draw_set_color(c_black);
draw_circle(window_mouse_get_x(), window_mouse_get_y(), scl * 2, 0);












exit;
draw_set_halign(1);
draw_set_valign(1);
draw_set_font(font0);

draw_text(room_width / 2, room_height / 2, "salutations#(empty project file)");

draw_set_halign(0);
draw_set_valign(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

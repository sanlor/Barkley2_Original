<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_effect_affix_restoring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup, inherit from parent //
event_inherited();
image_index=0;
image_speed=0;
ty=y;
tx=x;

dx=x;
dy=y;
sinx=0;
amp=0;

zoffset=0.1;
zoffset_total=0;

count=0;
spawncount=0;
shadow_visible=false;

if instance_exists(o_hoopz) then target = o_hoopz;
else target = NULL;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit from parent //
event_inherited();

// Pause //
if paused() exit;

// As long as target exists, perform this //
if instance_exists(target) then
    {
    // Get target position //
    x = target.x;
    y = target.y;
    z = target.z + zoffset_total;
    
    // Some garbage I dont understand //
    sinx+=amp;
    
    // Timer //
    spawncount += dt();
    
    // Spawn stuff when timer reaches 1 or more //
    while (spawncount &gt;= 1) 
        {
        a = instance_create(x,y,o_effect_affix_heal2);
        a.y = y + random_range(-24,24);
        a.x = x + random_range(-24,24);
        a.z = z;
        spawncount--;
        }
        
    // Dont know what these are used for //
    amp+=0.0003;
    
    zoffset_total += zoffset * dt();        
    zoffset += 0.2 * dt();
    
    // Animation, based on the count variable here //
    count += dt();    
    if (count&lt;10) {image_index=0;}
    else if (count&lt;15) {image_index=1;}
    else if (count&lt;16) {image_index=2;}
    else {instance_destroy();} //destroy self after 1.6 seconds
    }
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

draw_sprite(sprite_index, image_index, dx, dy);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>

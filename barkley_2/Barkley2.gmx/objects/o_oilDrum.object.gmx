<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_oilDrum</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>DestructibleCombatActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////you get all the default variables from EnemyCombatActor
event_inherited();

// Enemy stats
scr_stats_setBaseStat(self, STAT_BASE_HP, 2)

// Enemy configurations
scr_entity_setZHitbox(0, 24);

///that function fills in the monster's default resistances
///based on its monster type.

p_AI_passive = -1;
p_AI_active = -1;
p_action[0] = -1;

// LAZ TEST //
deathSound = "oildrum_death";
damageSound = "oildrum_hurt";


// Set rigid
scr_actor_setRigid(self)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _obj;

_obj = instance_create(x,y,o_enemyAttack_explosion);
_obj.sprite_index = s_oilDrumExplode;
_obj.image_speed = 0.25;
_obj.deathSound=deathSound;
with (_obj)
    {
    // Create a sound emitter for explosion
    sound_emitter = audio_emitter_create();
    audio_emitter_falloff(sound_emitter,
            AUDIO_FALLOFF_REF,
            AUDIO_FALLOFF_MAX,
            AUDIO_FALLOFF_FACTOR);
    audio_play_sound_AI(deathSound);
    }
scr_stats_setAttackStat(_obj, STAT_ATTACK_DMG_NORMAL, 80);
scr_stats_setAttackStat(_obj, STAT_ATTACK_KNOCKBACK, 100);

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _frm;

_frm = 0;

if(scr_stats_getCurrentStat(self, STAT_CURRENT_KNOCKBACK) &gt; 0)
{
    _frm = 1;
}
else
{
   _frm = 0;
}

scr_draw_spr(s_oilDrum,_frm,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,20</point>
    <point>14,14</point>
  </PhysicsShapePoints>
</object>

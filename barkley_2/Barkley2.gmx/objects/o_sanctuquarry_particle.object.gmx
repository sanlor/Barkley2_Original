<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>Particle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

///Create
type = "";
surX = x;
surY = y;
wid = 38 - 19 + random(38);
hei = 24 - 12 + random(24);
wid = 32 - 16 + random(32);
hei = 32 - 16 + random(32);
wid=wid/2;
hei=hei/2;
desX = -999;
desY = -999;

blend = bm_normal;
double = 0;

didHit = choose(1, 0, 0, 0, 0, 0);

grow = 1;
growMax = 2;
growSpd = (growMax - grow) / (60 + random(30));

life = 500;
lifeSpd = -2;//2;//1;


//211, 112
direction = point_direction(211, 112, mouse_x, mouse_y);

ggg = random(100);
if (ggg &lt; 10) //killed by last command - CHECK BELOW
{
    direction += - 30 + random(60); //random(360);
}
else if (ggg &lt; 30)
{
    direction += - 25 + random(50);
}
else if (ggg &lt; 999)
{
    direction += - 20 + random(40);
}
direction += -20 + random(40);
speed = 5 + random(5); //5 + 5
//speed = speed / 10;
alp = choose(0.5);//, 0.75); //1);

dv = 1.5 + random(1.5); //for moving push
dv = mean(2, dv);
dvx = 1.2 + random(.2);
dvy = 1.2 + random(.2);
dv = mean(dvx, dvy);

col = c_purple;
col2 = col;
col = merge_color(col, c_fuchsia, .5); //was .5

//Wave
waveDis = 0;
waveDisSpd = 0.1;
waveDir = random(360);
waveDirSpd = 15 + random(10);

wave2 = 0;
wave2Dis = 0;
wave2DisSpd = 0.1;
wave2Dir = random(360);
wave2DirSpd = 15 + random(10);

noise = 0;
dir=irandom_range(0,360);
life = 100;
growSpd *= 2.0;
grow += growSpd;
wid *=  2;//2;
hei *=  2;//2;
wave2 = 1;
dvx = 0.8 + random(0.1); //1.2
dvy = 0.8 + random(0.1);
rotate=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(source)
    {
    direction = dir - 5 + random(10);
    speed=speed/2;
    wid = wid / 1.1;
    hei = hei / 1.1;
    ///Draw
    depth = -1000;
    //x = x + 0.1;
    //x = mouse_x;
    //y = mouse_y;
    //distributed color
    
    //col = make_color_rgb(random(255), random(255), random(255));
    //col = merge_color(col, c_white, .5);
    
    //Wave
    waveDis += waveDisSpd;
    waveDir += waveDirSpd;
    waveD = lengthdir_x(waveDis, waveDir);
    waveX = lengthdir_x(waveD, direction - 90);
    waveY = lengthdir_y(waveD, direction - 90);
    
    if (wave2)
    {
        wave2Dis += wave2DisSpd;
        wave2Dir += wave2DirSpd;
        wave2D = lengthdir_x(wave2Dis, wave2Dir);
        wave2X = lengthdir_x(wave2D, direction);
        wave2Y = lengthdir_y(wave2D, direction);
    }
    else { wave2X = 0; wave2Y = 0; }
    
    alp = choose(0.50, 0.75, 1.00);
    //alp = 1;
    if (life != 1000) alp = alp * (life / 100);
    if (blend == bm_add) alp = 1; //alp = alp / 20;
    life += lifeSpd*dt();
    //alp = choose(0.8, 0.9, 1.0);
    //alp = choose(0.99, 1.0, 1.0);
    //alp = 1;
    rx = x + waveX + wave2X;
    ry = y + waveY + wave2Y;
    newX = surX - ((surX - rx) / dvx);
    newY = surY - ((surY - ry) / dvy);
    surface_set_target(source.surDisplay);
    draw_set_blend_mode(blend);
    dsp(source.surDisplay, newX, newY, wid * grow, hei * grow, rx, ry);
    {
        draw_set_blend_mode(bm_add);
        colo = col;
        col = col2;
        dsp(source.surDisplay, newX, newY, wid * grow, hei * grow, rx, ry);
        col = colo;
        draw_set_blend_mode(bm_normal);
    }
    //draw_sprite_ext(sMiniNeedleHay, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 1);
    //draw_self();
    //draw_sprite(sprite_index, 0, x, y);
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    
    
    widG = wid * grow;
    heiG = hei * grow;
    if (x + (widG / 2) &lt; -9) instance_destroy();
    if (x - (widG / 2) &gt; room_width + 9) instance_destroy();
    if (y + (heiG / 2) &lt; -9) instance_destroy();
    if (y - (heiG / 2) &gt; room_height + 9) instance_destroy();
    if (point_distance(x, y, desX, desY) &lt;= speed) instance_destroy();
    if (life &lt;= 0) instance_destroy();
    
    
    grow = max(0.1, grow);
    
    image_xscale = widG / 2;
    image_yscale = heiG / 2;
    }
else
    {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,rotate,col,alp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>

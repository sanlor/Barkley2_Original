<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mg_collect_guts</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// No animation // 
image_speed = 0;
shadow_radius = 3;

// Friction //
move_z = -3;
move_x = choose(1, -1) * irandom(3);
move_y = choose(1, -1) * irandom(2);
move_friction = .2;

// Sprite Rotation //
rotation = 0;
rotationSpeed = 0;

// Float //
floatz = 0;

// Other shit //
canPickUp = false;
timerPickup = 0;
dny = -4;
flash = 0;
timer = scr_item_getDisappearTimer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Pause //
if paused() exit;

// Sprite Rotation amount //
if rotationSpeed &gt; 0.6 then rotationSpeed -= 0.6 * dt();   
else if rotationSpeed &lt; -0.6 then rotationSpeed += 0.6 * dt();
else rotationSpeed = 0;
    
// Process the Rotation
rotation += rotationSpeed * dt();

// Hit the ground //
if z &lt;= base_z &amp;&amp; move_z &lt;= 0 then
    {
    // Ground has been hit //
    z = base_z;
    move_z = 0;
    gravity_z = 0;
    
    // Start floating, stop rotating //    
    floatz += 0.6 * dt();
    rotation = 0;
    
    // Candy can be picked up after this timer passes //
    if timerPickup &lt; 1.5 then timerPickup += dt();        
    else canPickUp = true;       
    }
    
// Animation //
image_index += 4 * dt_sec();

// Lifespan timer //
if timer &gt; 0 then timer -= dt();
else instance_destroy();

flash+=1;

// Pick it up //
if instance_exists(o_hoopz) then
    {
    if distance_to_object(o_hoopz) &lt;= 12 then
        {
        audio_play_sound_on_actor(o_hoopz.id, "catfish_guts_pickup", false, 70);
        if !instance_exists(o_mg_collect_notice) then instance_create(x, y, o_mg_collect_notice);
        else
            {
            notice = instance_nearest(x, y, o_mg_collect_notice);    
            notice.show = true;
            notice.xItem = x - view_xview;
            notice.yItem = y - view_yview;
            notice.moveItem = true;
            notice.timerNoShow = 40;
            }   
        Item("gain", "Fiscian Gut's");
        instance_destroy();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Float //
var zh = z-2-(sin(floatz)*2);

// Shadow radius //
shadow_radius = 3 * (1 / (1 + (zh / 100))) // Scale shadow with Z height 

// Start blinking when near demise //
if (scr_item_blink(timer,flash)) then
    {
    // Inheritance // 
    draw_sprite_ext(sprite_index, image_index, x, y, shadow_radius * 0.1, shadow_radius * 0.1, 0, c_black, 0.3);
    draw_sprite_ext(sprite_index, image_index, x, y-zh, 1, 1, rotation, c_white, 1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,10</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>

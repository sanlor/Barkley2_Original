<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-727379968</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
timer_start = 70;
timer_count = 20;
timer_victory = 0;
timer_flicker = 5;
timer_party = 0;
flicker = 1;
count = 4;
count_alpha = 0.3;
count_alpha_goal = 0.3;
victory = false;
enemy_count = 0;

// All the foes //
instance_create(o_cinema10.x, o_cinema10.y, o_enemy_kobold_small);
instance_create(o_cinema11.x, o_cinema11.y, o_enemy_kobold_small);
instance_create(o_cinema12.x, o_cinema12.y, o_enemy_kobold_small);
instance_create(o_cinema13.x, o_cinema13.y, o_enemy_kobold_medium);
instance_create(o_cinema14.x, o_cinema14.y, o_enemy_kobold_medium);
instance_create(o_cinema15.x, o_cinema15.y, o_enemy_kobold_medium);

// Aggro off //
with EnemyCombatActor scr_AI_aggro_configure(1, 1, 1);

// Music //
audio_set_bgm("mus_blankTEMP");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Flicker //
if timer_flicker &gt; 0 then
    {
    // Tick down //
    timer_flicker -= dt();
    
    // EVent //
    if timer_flicker &lt;= 0 then
        {
        // Victoly ... //
        if flicker = 1 then flicker = 0.5;
        else flicker = 1;
        timer_flicker = 5;
        if victory = true then 
            {
            instance_create(view_xview + irandom(view_wview), view_yview + irandom(view_hview), o_effect_zhangConfettiBlast);
            }
        }
    }

// Countdown alpha //
if count_alpha &gt; count_alpha_goal then count_alpha -= dt_sec();
if count_alpha &lt; count_alpha_goal then count_alpha += dt_sec();

// Countdown //
if timer_count &gt; 0 then
    {
    // Tick down //
    timer_count -= dt();
    
    // Event //
    if timer_count &lt;= 0 then
        {
        count -= 1;
        if count = 3 then audio_play_sound_at_xy("sn_mg_wait_clock07", false, 1, view_xview + view_wview / 2, view_yview + view_hview / 2);
        if count = 2 then audio_play_sound_at_xy("sn_mg_wait_clock07", false, 1, view_xview + view_wview / 2, view_yview + view_hview / 2);
        if count = 1 then audio_play_sound_at_xy("sn_caravan_here_they_come", false, 1, view_xview + view_wview / 2, view_yview + view_hview / 2);
        if count &lt;= 0 then count_alpha_goal = 0;
        else 
            {
            timer_count = 10;
            count_alpha += 0.3;     
            }
        }
    }

// Start //
if timer_start &gt; 0 then
    {
    // Tick down //
    timer_start -= dt();
    
    // Event //
    if timer_start &lt;= 0 then
        {
        with EnemyCombatActor scr_AI_aggro_configure(9999, 9999, 9999);
        audio_set_bgm("mus_carpfrug");
        }
    }
    
// Victory countdown //
if timer_victory &gt; 0 then
    {
    // Tick down //
    timer_victory -= dt();
    
    // Event //
    if timer_victory &lt;= 0 then
        {
        Quest("arenaSwamp", 2);
        with (o_arenaPoster_swamp01) Cinema("run", script);
        instance_destroy();
        }
    }
    
// Enemy count //
enemy_count = instance_number(o_enemy_kobold_small) + instance_number(o_enemy_kobold_medium);
    
// Victory trigger //
if enemy_count &lt;= 0 and timer_victory = 0 then 
    {
    audio_set_bgm("mus_blankTEMP");
    timer_victory = 60;
    timer_party = 20;
    }
    
// PARTY //
if timer_party &gt; 0 then
    {
    // Tick down //
    timer_party -= dt();
    
    // Event //
    if timer_party &lt;= 0 then 
        {
        victory = true;
        // TODO victory jingle goes here
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Countdown on screen //
draw_set_alpha(count_alpha);
draw_set_color(c_black);
draw_rectangle(view_xview - 2, view_yview + view_hview / 2 - 10, view_xview + view_wview + 2, view_yview + view_hview / 2 + 10, false);

// Ready, steady, Brast! //
draw_set_font(global.fn_1);
draw_set_color(c_aqua);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
if count = 3 then draw_text(view_xview + view_wview / 2, view_yview + view_hview / 2, "GET READY...");
if count = 2 then draw_text(view_xview + view_wview / 2, view_yview + view_hview / 2, "GET STEADY...");
if count = 1 then draw_text(view_xview + view_wview / 2, view_yview + view_hview / 2, "HERE THEY COME!");

// VICTORY //
if victory = true then 
    {
    draw_set_alpha(0.45);
    draw_set_color(c_black);
    draw_rectangle(view_xview - 2, view_yview + view_hview / 2 - 10, view_xview + view_wview + 2, view_yview + view_hview / 2 + 10, false);
    draw_set_font(global.fn_1);
    draw_set_color(c_purple);
    draw_set_alpha(flicker);
    draw_text(view_xview + view_wview / 2, view_yview + view_hview / 2, "VICTOLY!");
    }
else
    {
    // Showcase enemy count //
    draw_set_color(c_black);
    draw_set_alpha(0.35);
    draw_rectangle(view_xview - 2, view_yview + 4, view_xview + 386, view_yview + 12, false);
    draw_set_font(global.fn_small);
    draw_set_color(c_white);
    draw_set_alpha(0.8);
    draw_set_halign(1);
    draw_set_valign(fa_top);
    draw_text(view_xview + 192, view_yview + 6, "FOES REMAINING: " + string(enemy_count));
    }
    
// Reset font alignment //
draw_set_halign(fa_left);
draw_set_valign(fa_top);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

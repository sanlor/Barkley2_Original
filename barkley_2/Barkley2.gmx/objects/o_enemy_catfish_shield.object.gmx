<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_catfish_large_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemygroup_catfish</parentName>
  <maskName>mask_disk_32by32</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();
scr_enemyDB_statsGet(enemyBuild);
scr_entity_setShadowCircle(16);
ailmentTotem_define(self.id, -9, 18, 25, 55);
scr_entity_setZHitbox(0, global.settingEnemyBigHeight);
scr_entity_setMovementCollisionShape_circle(18);
scr_entity_setShadowCircle(14);
scr_path_setWalldist(24);
scr_path_setMovementType(scr_path_movementType_standard_offset);
scr_path_setWalldist(12+random(10));

shield_equipped = true;
shield_shake = 0;

shieldPick = choose(0, 1, 2); // used to disable 3 = No shield
helmPick = choose(0, 1, 2);
pipePick = 0; //choose(0,1,2);

var sh = instance_create(x, y, o_enemy_catfish_shield_shield);
sh.parent = id;

deathSound = "catfishshield_death";
damageSound = "catfishshield_grunt";
hook_hitfx = enemy_hitfx_catfish;

var conf, guard;
guard = scr_AI_addPassiveState(scr_AI_passive_guard);
guard[? "sndAlertSound"] = "catfishshield_alert";

// Active state in water
activeMoveTowardsLand = scr_AI_addActiveState(scr_AI_active_moveTowardsLand);
activeMoveTowardsLand[? "switchPredicate"] = predicate_AI_isWading;

// Active state on land
activeApproach = scr_AI_addActiveState(scr_AI_active_approach);
activeApproach[? "stopAtDistance"] = 42;
activeApproach[? "switchPredicate"] = predicate_AI_isNotWading;

activeHangback = scr_AI_addActiveState(scr_AI_active_hangback);
activeHangback[? "switchPredicate"] = predicate_AI_catfish_targetIsNotNetted;
activeHangback[? "switchPriority"] = 10;
activeHangback[? "switchRemoveMaxDist"] = 150 - 30; // 150
activeHangback[? "switchAddMaxDist"] = 110 - 30; // 110

var movement = scr_AI_movement_init(scr_AI_movementType_standard_strafing);
activeApproach[? "walkScript"] = movement;
activeHangback[? "walkScript"] = movement;

// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Jump action
var jump = scr_AI_addAction(scr_AI_action_jump);
jump[? "jumpHeightBase"] = 45;

activeMoveTowardsLand[? "jumpAction"] = jump;

// Net shot
attack = scr_AI_switch_standard("new_attack", conf);
var action = scr_AI_addAction(scr_AI_action_net);
attack[? "action"] = action; 
action[? "dmg"] = 0;
action[? "motion"] = 34;
action[? "precision"] = 25;
action[? "burst"] = 1;
action[? "beforeTime"] = 8;
action[? "afterTime"] = 4;
action[? "burstRnd"] = 0;
action[? "gunRange"] = 14;
action[? "attackName"] = "net";
action[? "sndAttackWarn"] = "catfishshield_netswing"; //attacking scream (desperate)
action[? "sndAttackStrike"] = "catfishshield_netthrow";
attack[? "distMax"] = 150;
attack[? "cooldownTime"] = 400; 
attack[? "cooldownTimeRnd"] = 50;
attack[? "prepTime"] = 4;
/// Ammo recharge time
attack[? "ammo"] = 2;
attack[? "rechargeTime"] = 25;
attack[? "rechargeTimeRnd"] = 10;
attack[? "predicate"] = predicate_AI_catfish_targetIsNotNetted;
ai_net = action;

// Swipe
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_slash);
Attack("assign", action, "smash", 0.5, 0.5, 0.0, 0.0, 0.0, 0.0);
attack[? "action"] = action;
conf[? "stateAfterStop"] = action;
action[? "mask"] = mask_crescent_64_32;
action[? "range"] = 0;
action[? "beforeTime"] = 4;
action[? "afterTime"] = 6;
action[? "attackName"] = "swipe";
action[? "sndAttackWarn"] = "catfishshield_attack";
action[? "sndAttackStrike"] = "catfishshield_strike";
attack[? "distMax"] = 64;
attack[? "cooldownTime"] = 10;
attack[? "cooldownTimeRnd"] = 0;
attack[? "prepTime"] = 40; // ??? not used?
attack[? "rechargeTime"] = 25;
attack[? "rechargeTimeRnd"] = 15;
attack[? "predicate"] = predicate_AI_isNotWading;
ai_smash = action;

// ACRO TIME
time0 = AI_decisionFrequency;
time1 = ai_smash[? "beforeTime"];
time2 = ai_smash[? "afterTime"];
time3 = ai_net[? "beforeTime"];
time4 = ai_net[? "afterTime"];
deviate = 1;

// Animations
Animation("define", "catfish_Stand", s_catfish_large_body, 0, 1, 0);
Animation("define", "catfish_Walk", s_catfish_large_body, 1, 4, 0.2);
scr_entity_animation_setSpeedPerPixel("catfish_Walk", 1/16);
Animation("define", "catfish_Swing_before", s_catfish_large_body, 5, 2, 1);
Animation("define", "catfish_Swing_attack", s_catfish_large_body, 7, 1, 0);
Animation("define", "catfish_Swing_after", s_catfish_large_body, 7, 5, 0);
Animation("define", "catfish_Stagger", s_catfish_large_body, 12, 2, 0);
Animation("define", "catfish_Jump", s_catfish_large_body, 12, 1, 0);
Animation("define", "catfish_Netspin", s_catfish_netSpin, 0, 4, 1);
Animation("define", "water", s_watershadow_medium, 0, 4, 0.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
event_inherited();
if paused() exit;

// ACRO TIME
deviate = scr_stats_getEffectiveStat(id, STAT_BASE_AGILE) / scr_stats_getBaseStat(id, STAT_BASE_AGILE);
AI_decisionFrequency = time0 / deviate;
ai_smash[? "beforeTime"] = time1 / deviate;
ai_smash[? "afterTime"] = time2 / deviate;
ai_net[? "beforeTime"] = time3 / deviate;
ai_net[? "afterTime"] = time4 / deviate;

scr_entity_setShadowVisible(predicate_AI_isNotWading(id));

switch(a_attackName)
{
    case "net":        
    case "swipe":
    case "stagger":
        is_blocking = false;
        break;
        
    default:
        is_blocking = true;
        break;
}

// Reduce shield shake
shield_shake = max(0, shield_shake - 0.5 * dt());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Fish guts //
if (Quest("fishgutQuest") &gt;= 1 &amp;&amp; Quest("fishgutQuest") &lt;= 4) then
{
    repeat (2)
    {
        instance_create(x - 4 + random(8), y - 8 + random(8), o_mg_collect_guts);
    }
}

var _obj,_reps;

_obj = instance_create(x,y,o_FX);
_obj.sprite_index = s_catfish_blood;
_obj.image_speed = 0.25;
_obj.image_angle = choose(0,90,180,270);

_reps = 0;
var repeats = 5 + irandom(10);
repeat(repeats)
{
    _obj = instance_create(x-8+random(16),y-8+random(16),o_FX);
    _obj.z = z + random(hitbox_z_top);
    _obj.sprite_index = s_catfish_bloodsmall;
    _obj.image_speed = 0.25;
    _obj.image_angle = choose(0,90,180,270);
    _reps +=1;
    _obj.delay = _reps*2;
}

_obj = instance_create(x,y,o_gibs);
_obj.sprite_index = s_catfish_gibs;
_obj.shadow_radius = 5;
_obj.bloodburst = s_catfish_bloodsmall;
_obj.image_index = irandom(11);
    
//Head or Instestines
if(random(1)&gt;0.2)
{
    _obj = instance_create(x,y-16,o_gibs);
    _obj.sprite_index = s_catfish_LrgGibs;
    _obj.bloodburst = s_catfish_bloodsmall;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(0,10,11);
}

//Fins 1
if(random(1)&gt;0.2)
{
    _obj = instance_create(x,y+8,o_gibs);
    _obj.sprite_index = s_catfish_LrgGibs;
    _obj.bloodburst = s_catfish_bloodsmall;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(4,6,8);
}

//Fins 2
if(random(1)&gt;0.2)
{
    _obj = instance_create(x-16,y-8,o_gibs);
    _obj.sprite_index = s_catfish_LrgGibs;
    _obj.bloodburst = s_catfish_bloodsmall;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(3,5,7);
}

//Eyes and things
if(random(1)&gt;0.2)
{
    _obj = instance_create(x+16,y-8,o_gibs);
    _obj.sprite_index = s_catfish_LrgGibs;
    _obj.bloodburst = s_catfish_bloodsmall;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(1,2,8,9);
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (scr_actor_isWading(id)) {
    // In water, draw water shadow only
    var sprite = scr_entity_animation_getSpriteIndex("water");
    var image = scr_entity_animation_getImage("water");
    draw_sprite(sprite, image, dx, dy)
    
} else {
        
    var _dir,_frameOff,_itemOff,_yshift,_shieldX,_shieldY,_shieldFrame,_shieldBack;
    var _helmetX,_helmetY,_helmetFrame,_helmetBack,_weapX,_weapY,_weapFrame,_netX,_netY;
    
    var _showNet = false;
    
    _dir = ((faceDir+360)mod 360) div 90;
    _yshift = 0;
    _netX = 20; _netY = 20;
    var image = 0;
    switch(_dir)
    {
        case 0: 
            _hScale = -1;
            _itemOff = 3;
            break;
        case 1: 
            _hScale = 1;
            _itemOff = 3;
            break;
        case 2: 
            _hScale = -1; 
            _frameOff = 0;
            _itemOff = 0;
            break;
        case 3: 
            _hScale = 1;
            _frameOff = 0;
            _itemOff = 0;
            break;
    }
    
    // Set animation shifts
    if (_dir == 2 or _dir == 3) {
        // Facing downwards
        scr_entity_animation_setShift("catfish_Stand", 0);
        scr_entity_animation_setShift("catfish_Walk", 0);
        scr_entity_animation_setShift("catfish_Swing_before", 0);
        scr_entity_animation_setShift("catfish_Swing_attack", 0);
        scr_entity_animation_setShift("catfish_Swing_after", 0);
        scr_entity_animation_setShift("catfish_Stagger", 0);
        scr_entity_animation_setShift("catfish_Jump", 0);
    }
    else
    {
        // Facing upwards
        scr_entity_animation_setShift("catfish_Stand", 14);
        scr_entity_animation_setShift("catfish_Walk", 14);
        scr_entity_animation_setShift("catfish_Swing_before", 14);
        scr_entity_animation_setShift("catfish_Swing_attack", 14);
        scr_entity_animation_setShift("catfish_Swing_after", 14);
        scr_entity_animation_setShift("catfish_Stagger", 14);
        scr_entity_animation_setShift("catfish_Jump", 14);
    }
    
    switch(a_attackName)
    {
        case "net":
            switch(a_attackState)
            {
            case "before":
                image = scr_entity_animation_getImage("catfish_Swing_before");
                _showNet = true;
                break;
                
            case "attack":
                image = scr_entity_animation_getImage("catfish_Swing_attack");
                break;
            
            case "after":
                image = scr_entity_animation_imageByRatio("catfish_Swing_after", a_attackAnim, I_atk_shot_intAfter);
                break;
            }
            break;
            
        case "swipe":
            switch(a_attackState)
            {
            case "before":
                image = scr_entity_animation_imageByRatio("catfish_Swing_before", a_attackAnim, I_atk_slsh_intBefore);
                break;
                
            case "attack":
                image = scr_entity_animation_getImage("catfish_Swing_attack");
                break;
            
            case "after":
                image = scr_entity_animation_imageByRatio("catfish_Swing_after", a_attackAnim, I_atk_slsh_intAfter);
                break;
            }
            break;
            
        case "stagger":
            image = scr_entity_animation_getImage("catfish_Stagger");
            break;
            
        default:
            if (z - base_z &gt;= 1) {
                image = scr_entity_animation_getImage("catfish_Jump");
            }
            else if(a_walking)
            {
                image = scr_entity_animation_getImage("catfish_Walk");
                if(image==0 || image==2){_yshift = 1;}else{_yshift = 0;}
            }
            else
            {
                image = scr_entity_animation_getImage("catfish_Stand");
            }
            break;
    }
    
    
    
    
    _shieldBack = false;
    _helmetBack = false;
    switch(image)
    {
        ///standing south
        case 0: _shieldX = -7; _shieldY = -7; _shieldFrame = 0;
                _helmetX = 2; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 0;
                break;
        ///walking south
        case 1: _shieldX = -7; _shieldY = -6; _shieldFrame = 0;
                _helmetX = 2; _helmetY = -33; _helmetFrame = 0;
                _weapX = 0; _weapY = -13; _weapFrame = 0;
                break;
        case 2: _shieldX = -7; _shieldY = -7; _shieldFrame = 0;
                _helmetX = 2; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 0;
                break;
        case 3: _shieldX = -7; _shieldY = -6; _shieldFrame = 0;
                _helmetX = 2; _helmetY = -33; _helmetFrame = 0;
                _weapX = 0; _weapY = -13; _weapFrame = 0;
                break;
        case 4: _shieldX = -7; _shieldY = -7; _shieldFrame = 0;
                _helmetX = 2; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 0;
                break;
        ///attacking south
        case 5: _shieldX = 2; _shieldY = -12; _shieldFrame = 1;
                _helmetX = -7; _helmetY = -38; _helmetFrame = 1;
                _weapX = 0; _weapY = -14; _weapFrame = 1;
                _netX = 13; _netY = -48;
                break;
        case 6: _shieldX = 1; _shieldY = -13; _shieldFrame = 1;
                _helmetX = -8; _helmetY = -39; _helmetFrame = 1;
                _weapX = 0; _weapY = -14; _weapFrame = 2;
                _netX = 8; _netY = -53;
                break;
        case 7: _shieldX = -4; _shieldY = -34; _shieldFrame = 2;
                _helmetX = 21; _helmetY = -18; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 3;
                break;
        case 8: _shieldX = 4; _shieldY = -33; _shieldFrame = 3;
                _helmetX = 23; _helmetY = -17; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 4;
                break;
        case 9: _shieldX = 5; _shieldY = -32; _shieldFrame = 3;
                _helmetX = 22; _helmetY = -16; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 5;
                break;
        case 10: _shieldX = -4; _shieldY = -24; _shieldFrame = 4;
                _helmetX = 19; _helmetY = -21; _helmetFrame = 3;
                _weapX = 0; _weapY = -14; _weapFrame = 6;
                break;
        case 11: _shieldX = -3; _shieldY = -5; _shieldFrame = 5;
                _helmetX = 15; _helmetY = -29; _helmetFrame = 1;
                _weapX = 0; _weapY = -14; _weapFrame = 7;
                break;
        ///stagger south
        case 12: _shieldX = 3; _shieldY = -9; _shieldFrame = 2;
                _helmetX = -27; _helmetY = -50; _helmetFrame = 2; _helmetBack = true;
                _weapX = 0; _weapY = -14; _weapFrame = 1;
                break;
        case 13: _shieldX = 2; _shieldY = -8; _shieldFrame = 4;
                _helmetX = -28; _helmetY = -54; _helmetFrame = 5; _helmetBack = true;
                _weapX = -1; _weapY = -15; _weapFrame = 1;
                break;
        
        ///standing north
        case 14: _shieldX = -14; _shieldY = -10; _shieldFrame = 6; _shieldBack = true;
                _helmetX = -3; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 8;
                break;
                
        ///walking north
        case 15: _shieldX = -14; _shieldY = -9; _shieldFrame = 6; _shieldBack = true;
                _helmetX = -3; _helmetY = -33; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 8;
                break;
        case 16: _shieldX = -14; _shieldY = -10; _shieldFrame = 6; _shieldBack = true;
                _helmetX = -3; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -13; _weapFrame = 8;
                break;
        case 17: _shieldX = -14; _shieldY = -9; _shieldFrame = 6; _shieldBack = true;
                _helmetX = -3; _helmetY = -33; _helmetFrame = 0;
                _weapX = 0; _weapY = -14; _weapFrame = 8;
                break;
        case 18: _shieldX = -14; _shieldY = -10; _shieldFrame = 6; _shieldBack = true;
                _helmetX = -3; _helmetY = -34; _helmetFrame = 0;
                _weapX = 0; _weapY = -13; _weapFrame = 8;
                break;
                
        ///attacking north
        case 19: _shieldX = -17; _shieldY = -13; _shieldFrame = 4;
                _helmetX = 6; _helmetY = -28; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 9;
                _netX = 16; _netY = -32;
                break;
        case 20: _shieldX = -16; _shieldY = -13; _shieldFrame = 4;
                _helmetX = 7; _helmetY = -27; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 10;
                _netX = 23; _netY = -36;
                break;
        case 21: _shieldX = -10; _shieldY = -27; _shieldFrame = 3;
                _helmetX = -32; _helmetY = -27; _helmetFrame = 5;  _helmetBack = true;
                _weapX = 0; _weapY = -14; _weapFrame = 11;
                break;
        case 22: _shieldX = -13; _shieldY = -29; _shieldFrame = 2;
                _helmetX = -33; _helmetY = -28; _helmetFrame = 5;  _helmetBack = true;
                _weapX = 0; _weapY = -14; _weapFrame = 12;
                break;
        case 23: _shieldX = -16; _shieldY = -33; _shieldFrame = 4;
                _helmetX = -34; _helmetY = -28; _helmetFrame = 5;  _helmetBack = true;
                _weapX = 0; _weapY = -14; _weapFrame = 13;
                break;
        case 24: _shieldX = -6; _shieldY = -16; _shieldFrame = 2;
                _helmetX = -30; _helmetY = -28; _helmetFrame = 4;  _helmetBack = true;
                _weapX = 0; _weapY = -14; _weapFrame = 14;
                break;
        case 25: _shieldX = -18; _shieldY = -13; _shieldFrame = 2;
                _helmetX = -7; _helmetY = -33; _helmetFrame = 1;
                _weapX = 0; _weapY = -14; _weapFrame = 15;
                break;
                
        ///stagger north
        case 26: _shieldX = -11; _shieldY = -20; _shieldFrame = 5;
                _helmetX = 32; _helmetY = -39; _helmetFrame = 2;
                _weapX = 0; _weapY = -14; _weapFrame = 9;
                break;
        case 27: _shieldX = -14; _shieldY = -16; _shieldFrame = 5;
                _helmetX = 33; _helmetY = -40; _helmetFrame = 2;
                _weapX = 1; _weapY = -13; _weapFrame = 9;
                break;
    }
    
    // Shield shake
    var shield_yoffset = -round(shield_shake * 3);
    
    // Draw
    
    if(a_attackName=="net")
    {
        draw_sprite_ext(s_catfish_large_fin,_weapFrame,dx+_weapX*_hScale,dy-6+_weapY,_hScale,1,0,c_white,1);
    }
    else
    {
        draw_sprite_ext(s_catfish_large_pipe,pipePick*16+_weapFrame,dx+_weapX*_hScale,dy-6+_weapY,_hScale,1,0,c_white,1);
    }
    
    if(_shieldBack &amp;&amp; shieldPick &lt; 3 &amp;&amp; is_blocking) // GZ BLOCK
    {
        draw_sprite_ext(s_catfish_large_shield,shieldPick*7+_shieldFrame,dx+_shieldX*_hScale,dy-6+_shieldY+shield_yoffset,_hScale,1,0,c_white,1);
        if (shield_shake &gt; 0)
        {
            d3d_set_fog(true, make_color_rgb(255, 255, 255), 0, 0); 
            draw_sprite_ext(s_catfish_large_shield,shieldPick*7+_shieldFrame,dx+_shieldX*_hScale,dy-6+_shieldY+shield_yoffset,_hScale,1,0,c_white,shield_shake);
            d3d_set_fog(false, 0, 0, 0); 
        }
    }
    
    if(_helmetBack &amp;&amp; helmPick&lt;2)
    {draw_sprite_ext(s_catfish_large_helmet,helmPick*6+_helmetFrame,dx+_helmetX*_hScale,dy-6+_helmetY,_hScale,1,0,c_white,1);}
    
    
    draw_sprite_ext(s_catfish_large_body,image,dx,dy,_hScale,1,0,c_white,1);
    
    
    if(!_helmetBack &amp;&amp; helmPick&lt;2)
    {draw_sprite_ext(s_catfish_large_helmet,helmPick*6+_helmetFrame,dx+_helmetX*_hScale,dy-6+_helmetY,_hScale,1,0,c_white,1);}
    
    if(!_shieldBack &amp;&amp; shieldPick &lt; 3 &amp;&amp; is_blocking) // GZ BLOCK
    {
        draw_sprite_ext(s_catfish_large_shield,shieldPick*7+_shieldFrame,dx+_shieldX*_hScale,dy-6+_shieldY+shield_yoffset,_hScale,1,0,c_white,1);
        if (shield_shake &gt; 0)
        {
            d3d_set_fog(true, make_color_rgb(255, 255, 255), 0, 0); 
            draw_sprite_ext(s_catfish_large_shield,shieldPick*7+_shieldFrame,dx+_shieldX*_hScale,dy-6+_shieldY+shield_yoffset,_hScale,1,0,c_white,shield_shake);
            d3d_set_fog(false, 0, 0, 0); 
        }
    }
    
    if(_showNet)
    {draw_sprite_ext(s_catfish_netSpin,scr_entity_animation_getImage("catfish_Netspin"),dx+_netX*_hScale,dy-6+_netY,_hScale,1,0,c_white,1);}
    
}

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,21</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>

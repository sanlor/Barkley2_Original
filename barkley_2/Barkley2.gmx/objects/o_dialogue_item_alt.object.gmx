<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2510002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
text = "GUTS increased. GUTS increased. GUTS increased.";
couRet = 0; //for counting the blink
bob = 0;
spd = .5; //1 seconds
pct = 0;
event = NULL;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
var pause = paused() or Minigame();
if (pause) exit;

pct += dt_sec() / spd;
pct = clamp(pct, 0, 1);

if (pct &gt;= 1 &amp;&amp; spd &gt; 0)
{
    var confirm_pressed = scr_input_check_held(KEYID_DIALOGUE, PLAYER1) or 
                     (scr_input_check_held(KEYID_ACTION, PLAYER1) and 
                      global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE);
    if (confirm_pressed)
    {
        spd = -spd;
    }
}
if (pct &lt;= 0 &amp;&amp; spd &lt; 0)
{
    if (event != NULL) { scr_event_advance(event); }
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

pctBgn = min(pct * 2, 1);
pctTxt = clamp((pct * 2) - 1, 0, 1);
alpIco = pctTxt;

y = 240 / 2;
hei = (2 * 12) + 44; //was (4 * 12) + 44;
hei -= 3; //gz add
hei = round(hei * pctBgn);
y -= hei / 2;

x = view_xview[0];
y += view_yview[0];
x = round(x);
y = round(y);
wid = 384 + 1; //to be safe add 1
midX = x + (wid / 2);
midY = y + round(hei / 2);

draw_spr_tiled(x, y, x + wid, y + hei, global.dialogBGalt, 0, 0.75 * pctBgn);

//draw_set_halign(1);
draw_set_valign(1);
draw_set_font(global.fn_1);
draw_set_alpha(pctTxt);
draw_set_color(c_white);
txtWid = string_width_ext(text, -1, 280);
draw_text_ext(x + floor(wid / 2) - floor(txtWid / 2), y + round(hei * .5), text, -1, 280);
draw_set_alpha(1);
//draw_set_halign(0);
draw_set_valign(0);

// Draw return sprite - 12x14
if (alpIco &gt;= 1) 
{
    bob = (bob + (0.3 * dt())) mod 2; //24
    if (couRet &lt; .75) draw_sprite_ext(s_return, 0, x + wid - 16 - 2, y + hei - 16 - 2 + bob, 1, 1, 0, c_white, alpIco);
    //couRet += dt_sec();
    if (couRet &gt; 1) couRet -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

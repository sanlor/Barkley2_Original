<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2610000</depth>
  <persistent>0</persistent>
  <parentName>oMiniDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
//window_set_size(global.miniWidthS, global.miniHeightS);
//window_center();
//display_reset(0, 0);
//time
//movement
//dying
//gameover
//pause
//punch key
global.miniDanmakuPause = 0;
instance_create(0, 0, oMiniDanmakuBG);

bulletReset = 15;
bulletResetO = bulletReset;
bulletCou = bulletReset;
bulletMin = 4;
bulletTime = 0;

bulletCou = bulletMin;

titleSub = 0;
invert = 0;

event_user(0);
//generate field
for (i = 0; i &lt; 50; i += 1)
{
    instance_create(floor(random(global.miniWidth)), floor(random(global.miniHeight)), oMiniDanmakuBullet);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
image_alpha = 0.6 + random(0.2);

if (MiniKeyPress("cancel")) 
{
    Minigame("stop"); 
    with (oMiniDanmaku) instance_destroy();
}

if (state == 0) //title screen
{
    cooldown -= 1;
    if (MiniKeyPress("any") &amp;&amp; cooldown &lt; 0) 
    {
        with (oMiniDanmakuBullet) instance_destroy();
        state = 1;
        instance_create(0, 0, oMiniDanmakuShip);
        bulletReset = bulletResetO;
    }
}

if (instance_exists(oMiniDanmakuShip) &amp;&amp; instance_exists(oMiniDanmakuPause) == 0) bulletTime += 1;
global.miniDanmakuBest[invert] = max(global.miniDanmakuBest[invert], floor(bulletTime / 60));
if (instance_exists(oMiniDanmakuPause) == 0)
{
    bulletCou -= 1;
    bulletReset -= 0.025;
}
bulletReset = max(bulletReset, bulletMin);
if (bulletCou &lt;= 0)
{
    bulletCou = bulletReset;
    if (random(100) &lt; 50)
    {
        by = choose(0, global.miniHeight);
        bx = random(global.miniWidth);
    }
    else
    {
        bx = choose(0, global.miniWidth);
        by = random(global.miniHeight);
    }
    instance_create(bx, by, oMiniDanmakuBullet);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset game
state = 0;
bulletTime = 0;
//io_clear();
cooldown = 0;//15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (invert == 0) image_blend = c_white; else image_blend = c_black;
if (state == 0) //title screen
{

spr = sMiniDanmakuTitle;
x = global.miniWidth / 2;
y = global.miniHeight / 2;
ox = global.miniX + (round(x) * global.miniScale);
oy = global.miniY + (round(y) * global.miniScale);
os = global.miniScale;
draw_sprite_ext(spr, titleSub, ox, oy, os, os, image_angle, image_blend, image_alpha);

//
alp = image_alpha / 3;
draw_sprite_ext(spr, titleSub, ox + os, oy + 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(spr, titleSub, ox - os, oy - 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(spr, titleSub, ox - 0, oy + os, os, os, image_angle, image_blend, alp);
draw_sprite_ext(spr, titleSub, ox - 0, oy - os, os, os, image_angle, image_blend, alp);

}

if (instance_exists(oMiniDanmakuPause)) //pause screen
{
    sub = 2;
    x = 5;
    y = 5;
    ox = global.miniX + (round(x) * global.miniScale);
    oy = global.miniY + (round(y) * global.miniScale);
    os = global.miniScale;
    draw_sprite_ext(sMiniDanmakuTime, sub, ox, oy, os, os, image_angle, image_blend, image_alpha);
    
    //
    alp = image_alpha / 3;
    draw_sprite_ext(sMiniDanmakuTime, sub, ox + os, oy + 0, os, os, image_angle, image_blend, alp);
    draw_sprite_ext(sMiniDanmakuTime, sub, ox - os, oy - 0, os, os, image_angle, image_blend, alp);
    draw_sprite_ext(sMiniDanmakuTime, sub, ox - 0, oy + os, os, os, image_angle, image_blend, alp);
    draw_sprite_ext(sMiniDanmakuTime, sub, ox - 0, oy - os, os, os, image_angle, image_blend, alp);
    exit;
}

//BEST or TIME
sub = state;
x = 5;
y = 5;
ox = global.miniX + (round(x) * global.miniScale);
oy = global.miniY + (round(y) * global.miniScale);
os = global.miniScale;
draw_sprite_ext(sMiniDanmakuTime, sub, ox, oy, os, os, image_angle, image_blend, image_alpha);

//
alp = image_alpha / 3;
draw_sprite_ext(sMiniDanmakuTime, sub, ox + os, oy + 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuTime, sub, ox - os, oy - 0, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuTime, sub, ox - 0, oy + os, os, os, image_angle, image_blend, alp);
draw_sprite_ext(sMiniDanmakuTime, sub, ox - 0, oy - os, os, os, image_angle, image_blend, alp);

//BEST or TIME value
ox = ox + (13 * global.miniScale) + (47 * global.miniScale);
oy = oy;
if (state == 0) str = string(global.miniDanmakuBest[invert]);
else str = string(floor(bulletTime / 60));
draw_set_color(image_blend); //c_white);
draw_set_font(global.fn_danmaku);
draw_set_alpha(image_alpha);
draw_text_transformed(ox, oy, str, os, os, 0);

//
draw_set_alpha(image_alpha / 3);
draw_text_transformed(ox + os, oy + 0, str, os, os, 0);
draw_text_transformed(ox - os, oy - 0, str, os, os, 0);
draw_text_transformed(ox - 0, oy + os, str, os, os, 0);
draw_text_transformed(ox - 0, oy - os, str, os, os, 0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>

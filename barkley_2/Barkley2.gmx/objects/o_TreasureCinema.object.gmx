<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_TreasureDwarfChained</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2410000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
//show_debug_message("o_TreasureCinema : Create 0");
//Restrict - fixed in out fade object
o_curs.toggleCursor = false;
//global.miniPlaying = 1;
global.event = true;

// Store current music into memory and then stop the music //
global.miniMusic = audio_bgm_get_current();
audio_set_bgm(NULL_STRING); //noone);
//show_debug_message("o_TreasureCinema : Create 1");

fall = 0;
state = 0;
sub = 0;
fade = 0;
cou = 0;
col = make_color_rgb(140, 180, 200);
//scr_deltatime_init();

state = 1;
depth = -2610000;

// Decide which side the dwarf crawls to //
if (x &gt; view_xview[0] + (384 / 2)) spd = -1; else spd = 1;

chains = 24;
for (i = 0; i &lt; chains; i += 1)
{
    chainY[i] = y - 36;
    if (i &lt; chains / 2)
    {
        chainX[i] = x - 7;
    }
    else
    {
        chainX[i] = x + 6;
    }
    chainX[i] += -2 + floor(random(5));
    chainY[i] += -1 + floor(random(3));
    chainDir[i] = 180 - 40 + random(80);
    chainSpd[i] = (0.7 + random(0.2)) * choose(1, -1);
    chainAlp[i] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dummy create
//global.miniPlaying = 0;
obj = instance_create(view_xview[0], view_yview[0], o_dummy);
obj.depth = -2410000;
obj.sprite_index = s1x1;
obj.image_xscale = 384 + 1;
obj.image_yscale = 240 + 1;
obj.image_blend = c_black;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin
//scr_deltatime_update();

// Pause /
if paused() exit;

// Fade screen to black //
if (state == 1)
{
    //sprite_index = sTreasureDwarfFree;
    fade += dt() / 10;
    fade = clamp(fade, 0, 1);
    if (fade == 1)
    {
        state = 2;
        cou = 0;
    }
}

// Break the chains //
else if (state == 2)
{
    cou += dt();
    if (cou &gt; 5) { cou = 0; state = 3; audio_play_sound_ext("sn_dwarfchain", 10, 0); }
}

// Chains are gone //
else if (state == 3)
{
    sprite_index = s_TreasureDwarfFree;
    image_single = 0;
    cou += dt();
    if (cou &gt; 15) { cou = 0; state = 4; }
}

// Drawf hits the floor //
else if (state == 4)
{
    sub += dt() / 3;
    if (sub &gt;= 2) { if (fall == 0) audio_play_sound_ext("sn_dwarfimpactland", 10, 0); fall = 1; }
    if (sub &gt;= 4) { sub = 3; state = 5; }
    image_single = floor(sub);
}

// Choboni //
else if (state == 5)
{
    cou += dt();
    if (cou &gt; 7.5) { cou = 0; state = 6; audio_play_sound_ext("sn_choboni", 10, 0); } //2
}

// Choboni animation //
else if (state == 6)
{
    cou += dt();
    if (cou &lt; 3 + 1) image_single = 4;
    else if (cou &lt; 6 + 2) image_single = 5;
    else if (cou &lt; 9 + 3) image_single = 4;
    else if (cou &gt; 15 + 4) 
    { 
        y += 7; 
        sprite_index = s_TreasureDwarfFlee; 
        image_single = 0; 
        state = 7; 
        sub = 0; 
        if (spd &gt; 0) image_xscale = -1;
    }
    //else if (cou &lt; 8) image_single = 3;
    //else if (cou &lt; 10) image_single = 4;
}

// Drawf bolts out //
else if (state == 7)
{
    sub += dt() / 1.5;
    image_single = floor(sub);
    image_alpha -= dt_sec() * 0.2;
    
    x += (dt() * 13) * spd;
    if (x &lt; view_xview[0] - 64 || x &gt; view_xview[0] + 384 + 64) { state = 8; }
    if image_alpha &lt;= 0 then state = 8;
}

// End //
else if (state == 8)
{
    //fade -= dt() / 10;
    //fade = clamp(fade, 0, 1);
    //if (fade == 0)
    //{
        with o_Treasure scr_event_interactive_deactivate();
        instance_destroy();
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (fade != 0)
{
    draw_set_color(c_black);
    draw_set_alpha(fade);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + 385, view_yview[0] + 241, 0);
    draw_set_alpha(1);
}
//draw_self();
draw_sprite_ext(sprite_index, image_single, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
if (state == 3)
{
    for (i = 0; i &lt; chains; i += 1)
    {
        draw_sprite_ext(s1x1, 0, chainX[i], chainY[i], 1, 1, 0, col, chainAlp[i]);
        chainAlp[i] -= dt() / 15;
        chainX[i] += lengthdir_x(chainSpd[i] * dt(), chainDir[i]);
        chainY[i] += lengthdir_y(chainSpd[i] * dt(), chainDir[i]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,46</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>o_debugMode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw height values
// depth was -2100000
//draw_set_alpha(0.5);
//draw_set_color(c_white);
//draw_set_halign(fa_center);
//draw_set_valign(fa_middle);
//draw_set_font(global.fn_small);

if(!ds_exists(sys_collision.height_grid, ds_type_grid)) exit;

var col = c_white;
var z = 0;

for (var _x = view_xview - (view_xview mod ZHEIGHT_GRID_W); _x &lt; view_xview + SCREEN_WIDTH; _x += ZHEIGHT_GRID_W) 
{
    for (var _y = view_yview - (view_yview mod ZHEIGHT_GRID_W) - 32; _y &lt; view_yview + SCREEN_HEIGHT + 112; _y += ZHEIGHT_GRID_W) 
    {
        z = scr_collision_zheight(_x, _y);
        if (!is_undefined(z)) 
        {
            if (z == 0) col = c_white; else if (z &gt; 0) col = c_lime; else col = c_red;
            draw_sprite_ext(sZHeight, min(15, floor(abs(z) / 8)), _x, _y - z, 1, 1, 0, col, 0.5);
        }
        //else draw_sprite_ext(sZHeight, 16, _x, _y, 1, 1, 0, c_white, 0.5);
        //_x + ZHEIGHT_GRID_W/2, _y + ZHEIGHT_GRID_W/2
    }
}

//draw_set_alpha(1);

draw_set_font(global.fn_2);
draw_set_color(c_white);

for(var i = 0; i &lt; instance_number(CombatActor); i++)
{
    var thisCombatActor = instance_find(CombatActor, i);
    
    if(!is_undefined(thisCombatActor.z))
    {
        draw_text(thisCombatActor.x, thisCombatActor.y - thisCombatActor.z, thisCombatActor.z);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_net</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CombatAttackEntity</parentName>
  <maskName>mask_disk_24by24</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

scr_entity_setCollisionType(COLLISION_ONLY_SOLID);
gravity_z = 3;
scr_entity_setFriction(2);
scr_entity_setMoveZ(7 + random(1));


event_user_on_hit = 1;
hit = 0;

image_blend = make_color_rgb(100,255,70);
image_speed = 0;

knockback_type = KNOCKBACKTYPE_NONE;

defAngle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
event_inherited();
if paused() exit;

if (movement_hit or (z &lt;= base_z and move_z &lt;= 0)) 
{
    event_user(0);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ON HIT OF TARGET - Make NetHit object
event_inherited();

audio_play_sound_at_xy("catfish_net_impact", false, 0, x, y);

var statFx = scr_statusEffect_getFromCombatActor(_other,statusEffect_entangled);
var pegcheck = 0;
var pAngle = 360/max(2,pegs);

with (_other) scr_entity_setMoveXY(0, 0); // Prevents sliding?

var shape = sat_make_shape_circle(other.x, other.y, 32);
var rtree = scr_collisionSystem_collisionTreeOfType(COLLISION_NORMAL);
sat_move(rtree, shape, 0, 0, z + hitbox_z_bottom, z + hitbox_z_top); // Ejects shape from colliding rigids
var px = shape[@ 2];
var py = shape[@ 3];
shape = 0; // Free shape from memory

if(statFx==-1) ///target not in a net yet? then define a home position and add a net.
{
    var statMap = ds_map_create();
    scr_statusEffect_generateBasicInfo(statMap,statusEffect_entangled,9900)
    scr_statusEffect_applyOrRefreshOnCombatActor(statusEffect_entangled, statMap, _other)
    ds_map_destroy(statMap);
    
    var statFx = scr_statusEffect_getFromCombatActor(_other, statusEffect_entangled);
    if (statFx != NULL) {
        a= instance_create(px, py, o_enemyAttack_bulletNetHit)
        a.target = _other;
        a.trap_x = px;
        a.trap_y = py;
        statFx[? "netObj"] = a;
    }
}
else ///else, restart net's death timer and reset the stat effect's timer to maximum
{
    ds_map_replace(statFx,"timer",9900);
    a = ds_map_find_value(statFx,"netObj");
    a.count = 0;
}

///add pegs around the net (even if there was an existing net: then just add more pegs to it.)
while (pegcheck &lt; pegs and ds_list_size(a.pegList) &lt; 6)
{
    var b, pegx, pegy, chkdist, lastdist,foundSpot,hitWall;
    chkdist =16;
    lastdist = 0;
    foundSpot = false;
    hitWall = false;
    
    while(!hitWall &amp;&amp; chkdist&lt;=pegsdistance)
    {
        pegx = px + lengthdir_x(chkdist, pAngle * pegcheck + defAngle);
        pegy = py + lengthdir_y(chkdist, pAngle * pegcheck + defAngle);
        if(!scr_collision_place_free(pegx,pegy,COLLISION_ALL)){hitWall = true;}///finding a wall cuts the loop short.
        else{foundSpot = true; lastdist = chkdist; chkdist +=8;}
    }
    
    if(foundSpot == true)
    {
        pegx = px + lengthdir_x(lastdist, pAngle * pegcheck + defAngle);
        pegy = py + lengthdir_y(lastdist, pAngle * pegcheck + defAngle);
        var obj = instance_create(pegx,pegy,o_enemyAttack_bulletNetPeg);
        obj.maxdist = pegsdistance;
        ds_list_add(a.pegList,obj);
        obj.netObj = a;
    }///if no spot was found, the net had no room to spread in this direction and has less pegs to shoot. Keep going with adding the other pegs.
    
    pegcheck+=1;
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ON HIT OF WALL - DESTROY
obj = instance_create(x, y, o_enemyAttack_bulletNetFade);
obj.depth = depth;
obj.img = floor(modp(move_dir+22.5,360)/45);

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var img = floor(modp(move_dir+22.5,360)/45);
scr_entity_setShadowSprite(sprite_index, img, 0, 0);

event_inherited();

draw_sprite_ext(s_net,img,dx,dy,1,1,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>3,0</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1316134912</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
index = "G";
indexor = 0;
adjustment = 0;
length = 250;
whirl = 6;
direction = irandom(360) + instance_number(o_effect_glampChange) * (50 + irandom(30));
timer_color = 0;
color_time = false;
color = make_color_rgb(200, 200, 200);
red = 200;
green = 200;
blue = 200;
lifespan = 60 + instance_number(o_effect_glampChange) * 4;
soundlord = false;
image_xscale = 2;
image_yscale = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Index match //
if index = "G" then indexor = 0;
if index = "L" then indexor = 1;
if index = "A" then indexor = 2;
if index = "M" then indexor = 3;
if index = "P" then indexor = 4;

// Orbit to the center //
x = (view_xview + 150 + indexor * 24) + lengthdir_x(length, direction);
y = (view_yview + 120) + lengthdir_y(length, direction);

// Whirl //
if length &gt; 0 then direction += whirl;
else if lifespan &gt; 0 then direction = 0;
if whirl &gt; 1 then whirl -= 0.4 * dt_sec();

// Decrease //
if length &gt; 0 then 
    {
    // Closer to center //
    if lifespan &gt; 0 then length -= 200 * dt_sec();

    // Trail //
    trailer = instance_create(x, y, o_effect_glampChange_trail);
    trailer.color = color;
    trailer.index = index;
    
    // Center reached //
    if length &lt;= 0 then timer_color = 20 + indexor * 2;           
    }
    
// Light up //
if timer_color &gt; 0 then
    {
    // Tick down //
    timer_color -= dt();
    
    // Event //
    if timer_color &lt;= 0 then 
        {
        color_time = true;
        if soundlord = true then
            {
            if adjustment &lt; 0 and audio_is_playing_ext("sn_dwarf_agree01") = false then audio_play_sound_ext("sn_dwarf_agree01", 5, false); 
            if adjustment &gt; 0 and audio_is_playing_ext("sn_dwarf_agree01") = false then audio_play_sound_ext("sn_dwarf_agree01", 5, false); 
            soundlord = false;
            }
        audio_play_sound_ext("sn_catfishshield_linebreak01", 5, false);
        }
    }
    
// Color //
if color_time = true then
    {
    // GLAMP value decreased //
    if adjustment &lt; 0 then
        {
        if red &lt; 250 then red += 200 * dt_sec();
        if green &gt; 50 then green -= 200 * dt_sec();
        if blue &gt; 70 then blue -= 200 * dt_sec();
        color = make_color_rgb(red, green, blue);
        }
        
    // GLAMP value increased //
    if adjustment &gt; 0 then
        {
        if red &gt; 40 then red -= 200 * dt_sec();
        if green &lt; 250 then green += 200 * dt_sec();
        if blue &lt; 170 then blue += 200 * dt_sec();
        color = make_color_rgb(red, green, blue);
        }
        
    // GLAMP value no change //
    if adjustment = 0 then
        {
        if red &gt; 180 then red -= 200 * dt_sec();
        if green &gt; 180 then green -= 200 * dt_sec();
        if blue &gt; 180 then blue -= 200 * dt_sec();
        color = make_color_rgb(red, green, blue);
        }
    }
    
// Lifespan //
if lifespan &gt; 0 then
    {
    // Tick down //
    lifespan -= dt();
    
    // Lifespan ended //
    if lifespan &lt;= 0 then 
        {
        whirl = 6;
        direction = irandom(360);
        audio_play_sound_ext("sn_catfishshield_linebreak01", 5, false);
        }
    }
else
    {
    // Fly away //
    length += 200 * dt_sec();
    if length &gt;= 250 then instance_destroy();
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw self //
draw_set_font(global.fn_1);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text_transformed_colour(x, y, string(index), image_xscale, image_yscale, 0, color, color, color, color, 1);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

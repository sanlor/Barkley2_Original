<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_zauber_kosmik_gravityWave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CombatAttackEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

knockback_type = KNOCKBACKTYPE_FROM_CENTER;
scr_entity_setZHitbox(-16, 64);
scr_entity_setShadowVisible(false);

lifetime = 0;
lifetime_max = 4;
range = 150;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

var cone_w = sprite_get_width(sprite_index);

lifetime += dt();
if (lifetime &gt;= lifetime_max) {
    instance_destroy();
} else {
    var scale = (range / cone_w) * (lifetime / lifetime_max);
    image_xscale = scale;
    image_yscale = scale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make gravity waves
objScl[0] = 1;
objScl[1] = 0.66;
objScl[2] = 0.33;
for (h = 0; h &lt; 3; h += 1)
{
    var din = random(360);
    var dra = 40 + random(10);
    var tim = 0.9;
    timDir = 1;
    for (i = 0; i &lt; dra; i += 1.2)
    {
        obj = instance_create(x, y, oCosmicPush2);
        obj.dir = dir - (dra / 2) + i;
        obj.scl *= objScl[h] * tim;
        obj.spd *= objScl[h] * tim;
        obj.dis *= objScl[h] * tim;
        obj.dis *= 1 + (h * 0.2);
        tim += 0.005 * timDir;
        if (tim &gt;= 1) timDir = -1;
        obj.spdDir = din + (i * 5);
    }
    //dra -= 5;
}
// Sparkle
for (i = 0; i &lt; dra; i += 1)
{
    obj = instance_create(x, y, oCosmicPush2);
    obj.dir = dir - (dra * 0.75) + random(dra * 1.5);
    obj.scl = 2 + random(8);
    rnd = 0.33 + random(0.66);
    obj.spd *= rnd;
    obj.dis *= rnd;
}








exit;
yOff = 0;//-18;
odr = dir - 20;
for (i = 0; i &lt; 10; i += 1)
{
    obj = instance_create(x, y + yOff, oCosmicPush1);
    obj.dir = odr;
    with (obj) { event_user(15); }
    odr += 4;
}
odr = dir - 15;
for (i = 0; i &lt; 10; i += 1)
{
    obj = instance_create(x, y + yOff, oCosmicPush1);
    obj.dir = odr;
    with (obj) { spd -= .5; maxDis -= 8; event_user(15); event_user(14); }
    odr += 3;
}
odr = dir - 10;
for (i = 0; i &lt; 10; i += 1)
{
    obj = instance_create(x, y + yOff, oCosmicPush1);
    obj.dir = odr;
    with (obj) { spd -= 1; maxDis -= 16; event_user(15); event_user(14); event_user(14); }
    odr += 2;
}
odr = dir - 5;
for (i = 0; i &lt; 10; i += 1)
{
    obj = instance_create(x, y + yOff, oCosmicPush1);
    obj.dir = odr;
    with (obj) { spd -= 1.5; maxDis -= 24; event_user(15); event_user(14); event_user(14); event_user(14); }
    odr += 1;
}

// instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//draw_sprite_ext(sprite_index, 0, dx, dy, image_xscale, image_yscale, image_angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

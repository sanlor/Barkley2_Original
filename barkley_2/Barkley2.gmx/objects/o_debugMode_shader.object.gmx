<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2100000</depth>
  <persistent>0</persistent>
  <parentName>o_debugMode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
i = 0;


shdNam[i] = "hbloomHard";
shdDes[i] = "Hardness of horisontal bloom.";
shdMin[i] = -4;
shdMax[i] = -0;
shdInc[i] = 0.1;
shdVal[i] = global.shaderCyberHBloomHard;
i += 1;

shdNam[i] = "vbloomHard";
shdDes[i] = "Hardness of vertical bloom.";
shdMin[i] = -40;
shdMax[i] = -0;
shdInc[i] = 0.1;
shdVal[i] = global.shaderCyberVBloomHard;
i += 1;

shdNam[i] = "bloomAmount";
shdDes[i] = "Strength of bloom effect.";
shdMin[i] = 0;
shdMax[i] = 1;
shdInc[i] = 0.02;
shdVal[i] = global.shaderCyberBloomAmount;
i += 1;

shdNam[i] = "hardScan";
shdDes[i] = "Scanline hardness.";
shdMin[i] = -30.0;
shdMax[i] = -0.0;
shdInc[i] = 1;
shdVal[i] = global.shaderCyberHardScan;
i += 1;

shdNam[i] = "noise";
shdDes[i] = "Noise overlay strength.";
shdMin[i] = 0;
shdMax[i] = 1;
shdInc[i] = 0.02;
shdVal[i] = global.shaderCyberNoise;
i += 1;

shdAmt = i;

for (i = 0; i &lt; shdAmt; i += 1) shdDef[i] = shdVal[i];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step

event_user(0);

// Default
if(keyboard_check_pressed(ord('P')) &amp;&amp; global.DEBUGMODE)
{ 
    for (i = 0; i &lt; shdAmt; i += 1)
    {
        shdVal[i] = shdDef[i];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/// Assign values to shader
global.shaderCyberHBloomHard = shdVal[0];
global.shaderCyberVBloomHard = shdVal[1];
global.shaderCyberBloomAmount = shdVal[2];
global.shaderCyberHardScan = shdVal[3];
global.shaderCyberNoise = shdVal[4];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw gui

draw_set_font(global.fn_1);
draw_set_color(c_white);
draw_set_halign(0);
draw_set_valign(0);
dx = 6;
dy = 6;
for (i = 0; i &lt; shdAmt; i += 1)
{
    draw_set_color(c_white);
    if (scr_mouse_area(dx, dy, dx + 320, dy + 19)) 
    {
        draw_set_color(c_yellow);
        if(mouse_check_button_pressed(mb_left)) shdVal[i] += shdInc[i];
        if(mouse_check_button_pressed(mb_right)) shdVal[i] -= shdInc[i];
        shdVal[i] = clamp(shdVal[i], shdMin[i], shdMax[i]);
    }
    draw_text(dx, dy, shdNam[i]);
    draw_text(dx + 96, dy, string(shdVal[i]));
    draw_text(dx + 128, dy, shdDes[i]);
    dy += 20;
}
dy += 20;
draw_set_color(c_white);
draw_text(dx, dy, "Press P to reset to defaults.");










exit;
draw_text(dx, dy, "When on this menu, you can phase through objects with Hoopz."); dy += 20;
draw_text(dx, dy, "Press delete to suicide Hoopz."); dy += 20;
draw_text(dx, dy, "Press B to stop event / stop playing Governor or Matthias"); dy += 20;
draw_text(dx, dy, "Press P to play as Matthias."); dy += 20;
draw_text(dx, dy, "Press J to play as Governor."); dy += 20;
draw_text(dx, dy, "Press L to load last save."); dy += 20;
draw_text(dx, dy, "Press K to add 19.5 minutes to clock time."); dy += 20;

ClockTime("draw", 5, 5);
dx = 300;
dy = 5;
var evt = ClockTime("event"); //Gets number of running events
for (i = 0; i &lt; evt; i += 1)
{
    ClockTime("event", i); //Pull event numbered i from clocktime
    draw_text(dx, dy, "QUEST = " + string(clockQuest)); dx += 250;
    draw_text(dx, dy, "VALUE = " + string(clockValue)); dx += 150;
    draw_text(dx, dy, "TIMER = " + string(clockTimer)); dx += 150;
    dx = 300;
    dy += 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

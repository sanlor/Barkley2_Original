<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_fct_eggLight01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
y -= 1;
spd = 1;
for (i = 0; i &lt; 6; i += 1)
{
    mainSprite[i] = asset_get_index("s_fct_eggArm0" + string(i + 1));
    mainIndex[i] = random(6);
    mainSpeed[i] = 0.25 + random(0.75);
    mainMin[i] = 0;
    mainMax[i] = 6;
}
mainXof[0] = 14;
mainYof[0] = 69;
mainXof[1] = 44;
mainYof[1] = 103;
mainXof[2] = 77;
mainYof[2] = 123;
mainXof[3] = 143;
mainYof[3] = 124;
mainXof[4] = 181;
mainYof[4] = 104;
mainXof[5] = 213 - 2;
mainYof[5] = 61 + 6;

mainSprite[6] = s_fct_eggLight01;
mainIndex[6] = 0;
mainSpeed[6] = 0.8;
mainMin[6] = 0;
mainMax[6] = 6;
mainXof[6] = 168 - 1;
mainYof[6] = 35;

// Sound //
play_sound = 1;
sound = "sn_waterwheel_machinelayer01";
soundX = x - sprite_xoffset + sprite_width / 2;
soundY = y - sprite_yoffset + sprite_height / 2;
soundVolume = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Delay //
if paused() exit;

// Play sound start delay // Then play a sound //
if play_sound &gt; 0 then play_sound -= dt();
else 
    {
    if !audio_is_playing_ext(sound) then 
        {
        audio_play_sound_at_xy(sound, false, 80, soundX, soundY);
        audio_sound_gain_ext(sound, soundVolume, 0);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit //
event_inherited();

// Stop sound //
if audio_is_playing_ext(sound) then audio_stop_sound_ext(sound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
event_inherited();
for (i = 0; i &lt; 7; i += 1)
{
    if (paused() == 0) mainIndex[i] += mainSpeed[i] * spd * dt();
    if (mainIndex[i] &gt;= mainMax[i]) mainIndex[i] -= mainMax[i] - mainMin[i];
    draw_sprite_ext(mainSprite[i], floor(mainIndex[i]), x + mainXof[i], y + mainYof[i], 1, 1, 0, c_white, 1);
}

// Sounds //
if spd &gt; 0 then
    {
    if floor(mainIndex[0]) = 4 and !audio_is_playing_ext("sn_eggHand04") then 
        {
        audio_play_sound_at_xy("sn_eggHand04", false, 5, x, y);
        audio_sound_gain_ext("sn_eggHand04", soundVolume, 0);
        }
    if floor(mainIndex[1]) = 1 and !audio_is_playing_ext("sn_eggHand05") then 
        {
        audio_play_sound_at_xy("sn_eggHand05", false, 5, x, y);
        audio_sound_gain_ext("sn_eggHand05", soundVolume, 0);
        }
    if floor(mainIndex[5]) = 3 and !audio_is_playing_ext("sn_eggHand06") then 
        {
        audio_play_sound_at_xy("sn_eggHand06", false, 5, x, y);
        audio_sound_gain_ext("sn_eggHand06", soundVolume, 0);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

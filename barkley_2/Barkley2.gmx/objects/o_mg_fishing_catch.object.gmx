<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
textFull = "Your Gun'sbag is full! You can't keep this lunker...";
textKeepAsk = "Do you wish to keep this lunker?";
textKeep = "Keep it!";
textDrop = "Let it go...";
//name = "You got a Lunker";
rise = 0;
alpha = 0;
alpha_goal = 0;
xPos = view_xview + 192 - 8;
yPos = view_yview + 120;
image_speed = 0;
gunScl = 1;
text = false;
canKeep = true; // Set manually every time with prompt
keep_gun = false;
key_pressed = 0;
prompt = false;
timer_sound = 20;
timer_hold_start = 15;
timer_hold_end = timer_hold_start + 1;
timer_text = 20;
timer_prompt = 25;
button_keep = false;
button_letgo = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;
if o_mg_fishing_control.escape = true then exit;

// Rise from Hoopz' grasp //
if rise &gt; 0 then
    {
    // Tick down //
    rise -= dt();
    
    // Rise //
    yPos -= min(rise, 1);
    }
    
// Text on screen //
if timer_text &gt; 0 then
    {
    // Tick down //
    timer_text -= dt();
    
    // Event //
    if timer_text &lt;= 0 then text = true;        
    }
    
// Sound //
if timer_sound &gt; 0 then
    {
    // Tick down //
    timer_sound -= dt();
    
    // Event //
    if timer_sound &lt;= 0 then audio_play_sound_at_xy("fishing_victory", false, 10, view_xview + 192, view_yview + 120);
    }
    
// Hold Start //
if timer_hold_start &gt; 0 then
    {
    // Tick down //
    timer_hold_start -= dt();
    
    // Event //
    if timer_hold_start &lt;= 0 then scr_entity_animation_set(o_cts_hoopz, "fishingShowCatch");
    }

// Hold End //
if timer_hold_end &gt; 0 then
    { 
    // Tick down //
    timer_hold_end -= dt();
    
    // Event //
    if timer_hold_end &lt;= 0 then 
        {
        scr_entity_animation_set(o_cts_hoopz, "fishingShowCatchHold");
        rise = 8;
        alpha_goal = 1;
        o_curs.toggleCursor = true;
        }
    }
    
// Prompt //
if timer_prompt &gt; 0 then
    {
    // Tick down //
    timer_prompt -= dt();
    
    // Event //
    if timer_prompt &lt;= 0 then 
        {
            if (scr_equipment_guns_bag_getSlotsUsed() &gt;= scr_equipment_guns_bag_getSlotsTotal())
            {
                canKeep = 0;
                key_pressed = +1;
            }
            else
            {
                canKeep = 1;
                key_pressed = -1;
            }
            prompt = true;
        }
    }
    
// Prompt //
if prompt = true and o_mg_fishing_control.escape = false then
    {
    // Use buttons to select the choice //
    if (canKeep)
    {
        if MiniKeyPress("left") then key_pressed = -1;
        else if MiniKeyPress("right") then key_pressed = +1;
        dry = view_yview + SCREEN_HEIGHT + 16 - (alpha * 60) + 25;
        if scr_mg_button(view_xview + 112 - 32, view_xview + 112 + 32, dry, dry + 16) = true then key_pressed = -1; 
        if scr_mg_button(view_xview + 272 - 32, view_xview + 272 + 32, dry, dry + 16) = true then key_pressed = +1;
    }
    // Highlight buttons //
    if key_pressed = -1 then button_keep = true;
    else button_keep = false;
    if key_pressed = +1 then button_letgo = true;
    else button_letgo = false;  
    
    // Execute //
    if MiniKeyPress("action") then
        {
        if (button_keep) scr_equipment_guns_bag_addGun(gun);
        else GunMap(gun, "decimate");
        o_mg_fishing_control.timer_setup = 5;
        o_curs.toggleCursor = false;
        instance_destroy();
        }
    }
    
// Alpha //
alpha = Goto(alpha, alpha_goal, dt_sec()); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the gun //
scl = gunScl;
var xof = floor((49 / 2) * scl);
var yof = floor((24 / 2) * scl);
var spr = assetOrNull(gun[? "hudIconSprite"], asset_sprite);
var sub = gun[? "hudIconFrame"];
var drx = xPos - xof;
var dry = yPos - yof;
HUD("gun draw", spr, sub, drx, dry, scl, scl, c_white, alpha);

// Lunker //
if text = true and o_mg_fishing_control.escape = false then
    {
    draw_set_alpha(1);
    //scr_font(global.fn_12ocs, c_aqua, fa_center, fa_middle);
    DrawGunName(view_xview + 192, view_yview + 40, gun[? "pPrefix1"], gun[? "pPrefix2"], gun[? "pMaterial"], gun[? "pType"], gun[? "pSuffix"], 1); 
    //draw_text_ext(view_xview + 192, view_yview + 50, string_upper(GunMap(gun, "model")), -1, SCREEN_WIDTH - 40);
    }
    
// Prompt //
if prompt = true and o_mg_fishing_control.escape = false then
{
    dry = view_yview + SCREEN_HEIGHT + 16 - (alpha * 60);
    Border("draw", 5, view_xview[0] - 10, view_yview + SCREEN_HEIGHT + 2 - (alpha * 60));
    //draw_set_alpha(0.35);
    //draw_set_color(c_black);
    //draw_rectangle(view_xview - 2, view_yview + 125, view_xview + 386, view_yview + 170, false);
    //draw_set_alpha(1);
    scr_font(global.fn_1, c_white, fa_center, fa_top);
    if (canKeep) 
    {
        draw_text(view_xview + 192, dry - 2, textKeepAsk);
        scr_font(global.fn_2);
        if button_keep = true then draw_set_color(c_orange);
        else draw_set_color(c_white);
        draw_text(view_xview + 112, dry + 25, textKeep);
        if button_letgo = true then draw_set_color(c_orange);
        else draw_set_color(c_white);
        draw_text(view_xview + 272, dry + 25, textDrop);
    }
    else
    {
        draw_text(view_xview + 192, dry - 2, textFull);
        scr_font(-1, c_red);
        draw_text(view_xview + floor(SCREEN_WIDTH / 2), dry + 25, textDrop);
    }
}
scr_font(-1, c_white, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_waitInLineControl</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
timer_prole_spawn = 0;
timer_skip_check = 0;
timer_hoopz_reset = 0;
hoopz_position = 0;

// Soundszz //
timer_clocktick = 9;
clocksound = "sn_mg_wait_clock01";
clocktick_delay = 0;
clock_index = 0;
tick = 0;
update = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Hoopz position //
if instance_exists(o_cts_hoopz) then hoopz_position = 13;
else
    {
    with o_hoopz 
        {
        if place_meeting(x, y, o_mg_wait_spot01) then {other.hoopz_position = 1; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot02) then {other.hoopz_position = 2; other.timer_hoopz_reset = 65}
        else if place_meeting(x, y, o_mg_wait_spot03) then {other.hoopz_position = 3; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot04) then {other.hoopz_position = 4; other.timer_hoopz_reset = 65}
        else if place_meeting(x, y, o_mg_wait_spot05) then {other.hoopz_position = 5; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot06) then {other.hoopz_position = 6; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot07) then {other.hoopz_position = 7; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot08) then {other.hoopz_position = 8; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot09) then {other.hoopz_position = 9; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot10) then {other.hoopz_position = 10; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot11) then {other.hoopz_position = 11; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot12) then {other.hoopz_position = 12; other.timer_hoopz_reset = 20}
        else if place_meeting(x, y, o_mg_wait_spot13) and o_mg_wait_spot13.dwarf_occupation = false then 
            {
            other.hoopz_position = 13; 
            other.timer_hoopz_reset = 20;
            other.clocksound = "sn_mg_wait_clock01";
            other.clock_index = 2;    
            }
        }
    }
   
// Hoopz position reset //
if timer_hoopz_reset &gt; 0 then
    {
    // Tick down //
    timer_hoopz_reset -= dt();
    
    // Event //
    if timer_hoopz_reset &lt;= 0 then hoopz_position = 0;  
    }

// Spawn another prole //
if timer_prole_spawn &gt; 0 then
    {
    // Tick down //
    timer_prole_spawn -= dt();
    
    // Event //
    if timer_prole_spawn &lt;= 0 and o_mg_wait_spot01.occupied = false then instance_create(128, 336, o_mortageProle); 
    }
    
// Skip check //
if timer_skip_check &gt; 0 then
    {
    // Tick down //
    timer_skip_check -= dt();
    
    // Event //
    if timer_skip_check &lt;= 0 then
        {
        switch (hoopz_position)
            {
            case 1:
                if o_mg_wait_spot02.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot01 then target_spot = o_mg_wait_spot02;
                    }
            break;
            case 2:
                if o_mg_wait_spot03.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot02 then target_spot = o_mg_wait_spot03;
                    }
            break;
            case 3:
                if o_mg_wait_spot04.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot03 then target_spot = o_mg_wait_spot04;
                    }
            break;
            case 4:
                if o_mg_wait_spot05.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot04 then target_spot = o_mg_wait_spot05;
                    }
            break;
            case 5:
                if o_mg_wait_spot06.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot05 then target_spot = o_mg_wait_spot06;
                    }
            break;
            case 6:
                if o_mg_wait_spot07.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot06 then target_spot = o_mg_wait_spot07;
                    }
            break;
            case 7:
                if o_mg_wait_spot08.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot07 then target_spot = o_mg_wait_spot08;
                    }
            break;
            case 8:
                if o_mg_wait_spot09.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot08 then target_spot = o_mg_wait_spot09;
                    }
            break;
            case 9:
                if o_mg_wait_spot10.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot09 then target_spot = o_mg_wait_spot10;
                    }
            break;
            case 10:
                if o_mg_wait_spot11.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot10 then target_spot = o_mg_wait_spot11;
                    }
            break;
            case 11:
                if o_mg_wait_spot12.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot11 then target_spot = o_mg_wait_spot12;
                    }
            break;
            case 12:
                if o_mg_wait_spot13.occupied = false then
                    {
                    with o_mortageProle if target_spot = o_mg_wait_spot12 then target_spot = o_mg_wait_spot13;
                    }
            break;
            }
        }
    }

// Clock sounds //
if timer_clocktick &gt; 0 then
    {
    // Tick down //
    timer_clocktick -= dt();
    
    // Event //
    if timer_clocktick &lt;= 0 then
        {
        // Play sound //
        with o_mg_wait_clock event_user(0);
        audio_play_sound_at_xy(clocksound, false, 10, x, y);
        timer_clocktick = 10 + clocktick_delay;
        clocktick_delay += 0.04;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Spawn a prole //
timer_prole_spawn = 20;
timer_skip_check = 120;

// Ding sound //
audio_play_sound_at_xy("sn_mg_wait_bell01", false, 10, x, y);

// Ticks increase //
if Quest("mortgageOver") != 2 then
    {
    with o_hoopz if place_meeting(x, y, o_mg_wait_spot_parent) then other.update = true;
    if update = true then
        {
        clock_index += 1;
        switch (clock_index)
            {
            case 2: clocksound = "sn_mg_wait_clock01"; break;
            case 3: clocksound = "sn_mg_wait_clock02"; break;
            case 4: clocksound = "sn_mg_wait_clock03"; break;
            case 5: clocksound = "sn_mg_wait_clock04"; break;
            case 6: clocksound = "sn_mg_wait_clock05"; break;
            case 7: clocksound = "sn_mg_wait_clock06"; break;
            case 8: clocksound = "sn_mg_wait_clock07"; break;
            case 9: clocksound = "sn_mg_wait_clock08"; break;
            case 10: clocksound = "sn_mg_wait_clock09"; break;
            case 11: clocksound = "sn_mg_wait_clock10"; break;
            }
        }
    update = false;
    }
else clocksound = "sn_mg_wait_clock01";


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_junkbot_legs_tires</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemy_junkbot_part_legs</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

walkRoam = scr_AI_movement_init(scr_AI_movementType_hopping);
walkRoam[? "walkSpdMod"] = .6;
walkRoam[? "soundHop"] = "junkbot_tires_hop";
walkRoam[? "soundLand"] = "junkbot_tires_land";

walkStrafe = scr_AI_movement_init(scr_AI_movementType_hopping_strafing);
walkStrafe[? "soundHop"] = "junkbot_tires_hop";
walkStrafe[? "soundLand"] = "junkbot_tires_land";

height = 20;

scr_entity_animation_define("idle", s_junkbot_legs_tires, 0, 1, 0);
scr_entity_animation_define("jump", s_junkbot_legs_tires, 1, 5, 0);
scr_entity_animation_define("land", s_junkbot_legs_tires, 6, 3, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

if (parent &gt;= 0 and instance_exists(parent)) {
    if (parent.I_mAI_jumping) {
        var range = walkStrafe[? "jumpGravity"] * walkStrafe[? "jumpTime"];
        image = scr_entity_animation_imageByRatio("jump", min(parent.move_z + range/2, range), range);
        
        if (image == 1) height = 19;
        if (image == 2) height = 29;
        if (image == 3) height = 31;
        if (image == 4) height = 25;
        if (image == 5) height = 20;
    } else {
        height = 20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Called by junkbot to draw part

if (parent != noone and instance_exists(parent)) {
    var sprite, image;
    if (parent.I_mAI_jumping) {
        var range = walkStrafe[? "jumpGravity"] * walkStrafe[? "jumpTime"];
        sprite = scr_entity_animation_getSpriteIndex("jump");
        image = scr_entity_animation_imageByRatio("jump", min(parent.move_z + range/2, range), range);
    } else if (parent.I_mAI_timerJump &gt;= walkStrafe[? "jumpWait"] - 3) {
        var waited = walkStrafe[? "jumpWait"] - parent.I_mAI_timerJump;
        sprite = scr_entity_animation_getSpriteIndex("land");
        image = scr_entity_animation_imageByRatio("land", waited, 3);
    } else {
        sprite = scr_entity_animation_getSpriteIndex("idle");
        image = scr_entity_animation_getImage("idle");
    }
    draw_sprite(sprite, image, parent.dx + (x - parent.x), parent.dy + ((y-z) - (parent.y - parent.z)));
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mg_fishing_battle_fish</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1000000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Trash about //
timer_trash = 10;
xSpeed = 0;
ySpeed = 0;
xPos = 0;
yPos = 0;
value = 0;

var diceroll = irandom(100);
if diceroll &lt;= 50 then movementType = "RANDOM";
else if diceroll &lt;= 100 then movementType = "PERIODIC";

gunScl = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;
if o_mg_fishing_control.escape = true then exit;

// Move about //
xPos += xSpeed;
yPos += ySpeed;

// Random movement, slight alterations to normal movements //
if movementType = "RANDOM" then
    {
    xSpeed += (0.02 + random(0.01) + value * 0.003) * choose(1, -1, 0);
    ySpeed += (0.02 + random(0.01) + value * 0.003) * choose(1, -1, 0);
    }
    
// Periodic shifts in movement //
if movementType = "PERIODIC" then
    {
    // Trash about //
    if timer_trash &gt; 0 then
        {
        // Tick down //
        timer_trash -= dt();
        
        // Event //
        if timer_trash &lt;= 0 then
            {
            timer_trash = 14 + irandom(5) - value * 0.1;
            xSpeed += random(1.5 + value * 0.02) * choose(1, -1, 0);
            ySpeed += random(1.5 + value * 0.02) * choose(1, -1, 0);
            }
        }
    }
    
// Generic stuff //
// Limits //
if xSpeed &lt; -(0.5 + value * 0.05) then xSpeed = -(0.5 + value * 0.05);
if xSpeed &gt; +(0.5 + value * 0.05) then xSpeed = +(0.5 + value * 0.05);
if ySpeed &lt; -(0.5 + value * 0.05) then ySpeed = -(0.5 + value * 0.05);
if ySpeed &gt; +(0.5 + value * 0.05) then ySpeed = +(0.5 + value * 0.05);

// Boundaries //
if xPos &lt; -22 then xPos = -22;
if xPos &gt; +22 then xPos = +22;
if yPos &lt; -22 then yPos = -22;
if yPos &gt; +22 then yPos = +22;
x = xPos;
y = yPos;

// Move away from the edges /
if xPos &lt;= -22 then xSpeed += 0.05;
if xPos &gt;= +22 then xSpeed -= 0.05;
if yPos &lt;= -22 then ySpeed += 0.05;
if yPos &gt;= +22 then ySpeed -= 0.05;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawn from o_mg_fishing_control
//draw_sprite_ext(sprite_index, image_index, view_xview + 192 + xPos, view_yview + 120 + yPos, 1, 1, 0, c_white, 1);
if (place_meeting(x, y, o_mg_fishing_battle_player)) drc = c_lime;
else drc = c_red;
scl = gunScl;
var xof = floor((49 / 2) * scl);
var yof = floor((24 / 2) * scl);
var spr = assetOrNull(gun[? "hudIconSprite"], asset_sprite);
var sub = gun[? "hudIconFrame"];
var drx = view_xview + 192 + xPos - xof;
var dry = view_yview + 120 + yPos - yof;
d3d_set_fog(1, drc, 0, 0);
HUD("gun draw", spr, sub, drx - 1, dry, scl, scl, c_white, 1);
HUD("gun draw", spr, sub, drx + 1, dry, scl, scl, c_white, 1);
HUD("gun draw", spr, sub, drx, dry - 1, scl, scl, c_white, 1);
HUD("gun draw", spr, sub, drx, dry + 1, scl, scl, c_white, 1);
d3d_set_fog(1, c_black, 0, 0);
HUD("gun draw", spr, sub, drx, dry, scl, scl, c_white, 1);
d3d_set_fog(0, 0, 0, 0);
//draw_text(view_xview + 32, view_yview + 32, value);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

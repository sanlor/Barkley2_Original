<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mg_star_icons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000050</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
active = false;
hover = false;
image_speed = 0;
name = "";
description = "";
first = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Click on me to activate //
hover = scr_mouse_rect(x, y, x + 8, y + 8); //was scr_dnet_button

// Info //
if hover = true then
    {
    o_mg_star_control.planet_name = name;
    o_mg_star_control.planet_description = description;
    }

// Check if you still have lines to draw //
if o_mg_star_control.number_of_lines &lt; 20 then
    {
    // Click //
    if scr_input_check_pressed(KEYID_ACTION, PLAYER1) then 
        {
        // Lines //
        if o_mg_star_control.number_of_lines &lt;= 30 then
            {
            // If the planet is not yet activated and you are hovering over this planet //
            if active = false and hover = true then
                {
                // Activate planet //
                with o_mg_star_planet active = false;
                active = true;
                
                // Set line coordinates to the minigame control object //
                with o_mg_star_control
                    {
                    // Previous coords //
                    if previous_x = -1 then
                        {
                        previous_x = other.x;
                        previous_y = other.y;
                        first = true;
                        }
                    else first = false;
                        
                    // Target coords //
                    target_x = other.x;
                    target_y = other.y;
                    event_user(0);
                    }
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Hover over //
if hover = true then
    {
    draw_set_alpha(1);
    draw_set_color(c_aqua);
    draw_rectangle(x, y, x + 8, y + 8, false);
    }
if active = true then
    {
    draw_set_alpha(1);
    draw_set_color(c_red);
    draw_rectangle(x, y, x + 8, y + 8, false);
    }

// Draw self //
draw_sprite(sprite_index, image_index, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

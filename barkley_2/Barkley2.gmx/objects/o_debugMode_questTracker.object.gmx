<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2100000</depth>
  <persistent>0</persistent>
  <parentName>o_debugMode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
COLUMN_OFFSET_X = 5; //64;
COLUMN_OFFSET_Y = 120;
COLUMN_SPACE_X = 210;
COLUMN_SPACE_Y = 16;
COLUMN_ROWS = 29;

target = noone;
closest = noone;

scr_debug_questlist();
tabNam[0] = "MAIN QUEST";
tabNam[1] = "HUNDLEY";
tabNam[2] = "BHROOM";
tabNam[3] = "BORT";
tabNam[4] = "STINKO";

//Alphas to show what is picked or not
time_alpha=1;
tab_alpha=1;
// Variables for selections

select_menu=0;
select_tab=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enter = Restart
if keyboard_check_pressed(vk_left)
    {
    if select_tab &gt; 0 then select_tab-=1;
    }
else if keyboard_check_pressed(vk_right)
    {
    if select_tab &lt; 4 then select_tab+=1;
    }
if (keyboard_check_pressed(vk_enter))
{
    var _x, _y, _room;
    _x = o_hoopz.x;
    _y = o_hoopz.y;
    _room = room;
    with (o_world) 
    {
        var new_room = scr_map_initialise_load_room(_room, _x, _y);
        room_goto(new_room);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW
draw_set_alpha(1);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

// Draw helper text
draw_set_font(global.fn_1)
draw_text(COLUMN_OFFSET_X, 2,  "Left / Right Arrow = Change Tab - Enter = Reload#Left click a variable to increase - Right click a variable to decrease#Shift + Left click to enter value#QUEST HACKER");

//TAB Aquests
col = c_orange;
draw_set_color(col);
draw_text(COLUMN_OFFSET_X, 2 + 80, tabNam[select_tab]);

dx = COLUMN_OFFSET_X; dy = 2 + 100;
col = c_white;
hil = 0;
if (scr_mouse_area(dx, dy, dx + 200, dy + COLUMN_SPACE_Y - 1)) { hil = 1; col = c_yellow; }
draw_set_color(col);
draw_text(dx, dy, "TIME : " + string(scr_time_get()));
if (hil)
{
    old_time = scr_time_get();
    new_time = old_time;
    if (mouse_check_button_pressed(mb_left)) new_time = scr_time_get()+1;
    if (mouse_check_button_pressed(mb_right)) new_time = scr_time_get()-1;
    if (old_time != new_time)
    {
        if (new_time &gt;= 24) new_time = 24;
        if (new_time &lt;= 1) new_time = 1;
        scr_time_set(new_time);
        scr_savedata_put("quest.time", new_time);
        scr_savedata_put("quest.timeDestination", new_time);
    }
}

for(i = 0; i &lt; ds_list_size(tabDSL[select_tab]); i++)
{
    quest = ds_list_find_value(tabDSL[select_tab], i);
    cl = c_white;
    dx = COLUMN_OFFSET_X + ((i div COLUMN_ROWS) * COLUMN_SPACE_X);
    dy = COLUMN_OFFSET_Y + ((i mod COLUMN_ROWS) * COLUMN_SPACE_Y);
    if (scr_mouse_area(dx, dy, dx + 200, dy + COLUMN_SPACE_Y - 1)) 
    { 
        cl = c_yellow; 
        if (mouse_check_button_pressed(mb_left)) 
        {
            if (keyboard_check(vk_shift))
            {
                str = get_string("Enter value for quest variable &gt; " + quest + "&lt;", string(scr_quest_get_state(quest)));
                if (string_digits(str) == string(str)) str = real(str);
                Quest(quest, str);
            }
            else
                Quest(quest, scr_quest_get_state(quest) + 1);
        }
        if (mouse_check_button_pressed(mb_right)) Quest(quest, scr_quest_get_state(quest) - 1);
    }
    draw_set_color(cl);
    draw_text(dx, dy, string(quest) + " : " + string(scr_quest_get_state(quest)));
}

draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

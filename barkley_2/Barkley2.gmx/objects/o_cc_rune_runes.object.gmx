<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cc_runes</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
col[0] = c_orange;
col[1] = c_lime;
col[2] = c_red;
col[3] = c_purple;
col[4] = c_aqua;
col[5] = c_yellow;
col[6] = c_fuchsia;
col[7] = c_gray;
zauber = 0;

length = 300; // was 300
length_goal = 85; // 85
orbit_speed = 2.5 * 60;
image_speed = 0;
image_index = instance_number(o_cc_rune_runes) - 1;
cookie_index = image_index;
can_be_activated = true;
hover = false;

alpha_message = 0;
alpha_message_bg = 0;
alpha_rune = 0;
alpha_message_goal = 0;
alpha_message_bg_goal = 0;
alpha_rune_goal = 1;
alpha_click = 0;
alpha_click_goal = 0;
hover_can_play_sound = 0;
timer_message = 0;
timer_click_to_continue = 0;

cookie_sound[0, 0] = "sn_cc_fire_hover01";
cookie_sound[0, 1] = "sn_cc_fire_hover02";
cookie_sound[0, 2] = "sn_cc_fire_hover03";
cookie_sound[0, 3] = "sn_cc_fire_select01";
cookie_sound[0, 4] = "sn_cc_fire_select02";
cookie_sound[0, 5] = "sn_cc_fire_select03";

cookie_sound[1, 0] = "sn_cc_grandpa_hover1";
cookie_sound[1, 1] = "sn_cc_grandpa_hover2";
cookie_sound[1, 2] = "sn_cc_grandpa_hover3";
cookie_sound[1, 3] = "sn_cc_grandpa_select1";
cookie_sound[1, 4] = "sn_cc_grandpa_select2";
cookie_sound[1, 5] = "sn_cc_grandpa_select3";

cookie_sound[2, 0] = "sn_cc_winter_hover01";
cookie_sound[2, 1] = "sn_cc_winter_hover02";
cookie_sound[2, 2] = "sn_cc_winter_hover03";
cookie_sound[2, 3] = "sn_cc_winter_select01";
cookie_sound[2, 4] = "sn_cc_winter_select02";
cookie_sound[2, 5] = "sn_cc_winter_select03";

cookie_sound[3, 0] = "sn_cc_riceballs_hover01;"
cookie_sound[3, 1] = "sn_cc_riceballs_hover02";
cookie_sound[3, 2] = "sn_cc_riceballs_hover03";
cookie_sound[3, 3] = "sn_cc_riceballs_select01";
cookie_sound[3, 4] = "sn_cc_riceballs_select01";
cookie_sound[3, 5] = "sn_cc_riceballs_select03";

cookie_sound[4, 0] = "sn_cc_anime_hover01";
cookie_sound[4, 1] = "sn_cc_anime_hover01";
cookie_sound[4, 2] = "sn_cc_anime_hover01";
cookie_sound[4, 3] = "sn_cc_anime_select01";
cookie_sound[4, 4] = "sn_cc_anime_select01";
cookie_sound[4, 5] = "sn_cc_anime_select01";

cookie_sound[5, 0] = "sn_cc_vidcon_hover01";
cookie_sound[5, 1] = "sn_cc_vidcon_hover01";
cookie_sound[5, 2] = "sn_cc_vidcon_hover01";
cookie_sound[5, 3] = "sn_cc_vidcon_select01";
cookie_sound[5, 4] = "sn_cc_vidcon_select01";
cookie_sound[5, 5] = "sn_cc_vidcon_select01";

cookie_sound[6, 0] = "sn_cc_corncobs_hover01";
cookie_sound[6, 1] = "sn_cc_corncobs_hover02";
cookie_sound[6, 2] = "sn_cc_corncobs_hover03";
cookie_sound[6, 3] = "sn_cc_corncobs_select01";
cookie_sound[6, 4] = "sn_cc_corncobs_select02";
cookie_sound[6, 5] = "sn_cc_corncobs_select03";

cookie_sound[7, 0] = "sn_cc_dwarf_hover01";
cookie_sound[7, 1] = "sn_cc_dwarf_hover02";
cookie_sound[7, 2] = "sn_cc_dwarf_hover03";
cookie_sound[7, 3] = "sn_cc_dwarf_select01";
cookie_sound[7, 4] = "sn_cc_dwarf_select02";
cookie_sound[7, 5] = "sn_cc_dwarf_select03";

message[0] = "Like the fire in our hearts, your spirit burns with passion. Your archnemesis is the letter O.";
message[1] = "Like hard candy from a bowl, your heart is sweet but strong. Your are spiritually close to the Grandfather Clock element.";
message[2] = "Like the ruthless glaciers of the deep north, you also are a force of nature. Your tongue is immune to metal based traps.";
message[3] = "Like the plentiful ricefields of the east, your wealth is shared to those in need. You draw your power from Rice Crispies.";
message[4] = "Like the unruly children who scream and shout, you too love the animes. You yearn to dress funny and are overweight.";
message[5] = "Like the ultimate artform, you too seek to bring perfection into the universe. Gamestop and webcomics are your Ying and Yang.";
message[6] = "Like the delicious yellow candy of nature, you also hold the power of transformation when fire is near. Your spirit animal is the Phoenix.";
message[7] = "Like the proud and noble Pumilius Pumilio, you too respect the power of gemstones. Goblets and rubies bring you unfathomable tranquility.";

description[0] = "M'kah, spirit of fire";
description[1] = "Tuh, ghost of grandpa";
description[2] = "Esh'tak, specter of winter";
description[3] = "Olop, wraith of riceballs";
description[4] = "Nip'pon, apparition of anime";
description[5] = "Xatar, phantom of vidcons";
description[6] = "Dilly dong dong, kelpie of corn cobs";
description[7] = "As'hak, haunt of dwarves";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
//if paused then exit;

// Orbit the center //
x = 192 + lengthdir_x(length * 1.8, direction);
y = 108 + lengthdir_y(length * 0.88, direction);
direction += orbit_speed * dt_sec();

// Length //
if length &lt; length_goal then length += 1;
if length &gt; length_goal then length -= 1;

// Orbit speed lowers with length //
if length &lt; 125 then orbit_speed = 2.0 * 60;
if length &lt; 115 then orbit_speed = 1.5 * 60;
if length &lt; 105 then orbit_speed = 1.0 * 60;
if length &lt; 95 then orbit_speed = 0.5 * 60;
if length = 85 then orbit_speed = 0.25 * 60;

// Hover //
if can_be_activated = true then
    {
    if length &lt;= length_goal + 10 then
        {
        if o_pointer.x &gt;= x - sprite_width*0.35 and o_pointer.x &lt;= x + sprite_width*0.35 and o_pointer.y &gt;= y - sprite_height*0.35 and o_pointer.y &lt;= y + sprite_height*0.35 then hover = true;  
        else hover = false;
        }
    if hover = true and hover_can_play_sound &lt;= 0 then
        {
        hover_can_play_sound = 15;
        var sound = irandom(2);
        switch (sound)
            {
            // BONG //
            /*case 0: audio_play_sound_ext(cookie_sound[cookie_index, 0], false, 10, 0, 0); break;
            case 1: audio_play_sound_ext(cookie_sound[cookie_index, 1], false, 10, 0, 0); break;
            case 2: audio_play_sound_ext(cookie_sound[cookie_index, 2], false, 10, 0, 0); break;
            */
            case 0: audio_play_sound_ext(cookie_sound[cookie_index, 0], 10, 0); break;
            case 1: audio_play_sound_ext(cookie_sound[cookie_index, 1], 10, 0); break;
            case 2: audio_play_sound_ext(cookie_sound[cookie_index, 2], 10, 0); break;
            }
        }
    }
    
// Hover sound timer //
if hover_can_play_sound &gt; 0 then
    {
    // Tick down //
    hover_can_play_sound -= dt();
    
    // Event //
    if hover_can_play_sound &lt;= 0 then
        {
        if hover = true then hover_can_play_sound = 1;
        }
    }

// Chosen //
// BONG //if scr_input_check_pressed(KEYID_ACTION, PLAYER1) and hover = true and can_be_activated = true then
if mouse_check_button_pressed(mb_left) and hover = true and can_be_activated = true then
    {
    // To all runes //
    with o_cc_rune_runes
        {
        length_goal = 400;
        can_be_activated = false;
        alpha_rune_goal = 0;
        }
        
    // To me only //
    alpha_rune_goal = 1;
    length_goal = 0;
    timer_message = 20;
    alpha_message_bg_goal = 0.35;
    timer_click_to_continue = 45;
      
    // Sound //
    var sound = irandom(2);
    switch (sound)
        {
        // BONG //
        /*case 0: audio_play_sound_ext(cookie_sound[cookie_index, 3], false, 10, 0, 0); break;
        case 1: audio_play_sound_ext(cookie_sound[cookie_index, 4], false, 10, 0, 0); break;
        case 2: audio_play_sound_ext(cookie_sound[cookie_index, 5], false, 10, 0, 0); break;
        */
        case 0: audio_play_sound_ext(cookie_sound[cookie_index, 3], 10, 0); break;
        case 1: audio_play_sound_ext(cookie_sound[cookie_index, 4], 10, 0); break;
        case 2: audio_play_sound_ext(cookie_sound[cookie_index, 5], 10, 0); break;
        }
    }

// MEssage timer //
if timer_message &gt; 0 then
    {
    // Tick down //
    timer_message -= dt();
    
    // Dim down //
    if timer_message &lt;= 0 then alpha_message_goal = 1;
    }
    
// Show the click message //
if timer_click_to_continue &gt; 0 then
    {
    // Tick down //
    timer_click_to_continue -= dt();
    
    // End //
    if timer_click_to_continue &lt;= 0 then
        {
        alpha_click_goal = 1;
        }
    }
    
// End //
//if scr_input_check_pressed(KEYID_ANYKEY, PLAYER1) = true then
if mouse_check_button_pressed(mb_left) then
    {
    if timer_message &lt;= 0 and alpha_message &gt;= 1 then
        {
        Quest("playerCCRune", description[image_index]);
        alpha_rune_goal = 0;
        alpha_message_goal = 0;
        alpha_message_bg_goal = 0;
        alpha_click_goal = 0;
        o_cc_rune.phase[0] = 20;
        o_cc_rune.phase[1] = 10;
        o_cc_rune.alpha_event_goal = 0;
        }
    }
    
// Alpha //
if alpha_message &lt; alpha_message_goal then alpha_message += 0.02;
if alpha_message &gt; alpha_message_goal then alpha_message -= 0.1;

if alpha_message_bg &lt; alpha_message_bg_goal then alpha_message_bg += 0.05;
if alpha_message_bg &gt; alpha_message_bg_goal then alpha_message_bg -= 0.05;

if alpha_rune &lt; alpha_rune_goal then alpha_rune += 0.1;
if alpha_rune &gt; alpha_rune_goal then alpha_rune -= 0.1;

if alpha_click &lt; alpha_click_goal then alpha_click += 0.1;
if alpha_click &gt; alpha_click_goal then alpha_click -= 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw my message //
draw_set_halign(fa_left);
draw_set_alpha(alpha_message_bg);
draw_set_color(c_black);
draw_rectangle(-2, -2, 384, 242, false);
draw_set_alpha(alpha_message);
draw_set_color(c_red);
draw_set_font(global.fn_1);
draw_set_color(col[image_index]);
draw_text_ext(32, 155, message[image_index], -1, 320);

// Draw self //
//draw_sprite_ext(sprite_index, image_index + hover * 8, x, y, 1, 1, 0, c_white, alpha_rune);
if (hover) zauber = Goto(zauber, 1, dt_sec() * 2);
else zauber = Goto(zauber, 0, dt_sec() * 4);
if (zauber != 0 &amp;&amp; alpha_rune != 0) EffectZauber(sprite_index, image_index + 8, x, y, 1, 1, col[image_index], zauber * alpha_rune);
draw_sprite_ext(sprite_index, image_index + 8, x, y, 1, 1, 0, c_white, alpha_rune);
dis = point_distance(x, y, 192, 108);
dir = point_direction(x, y, 192, 108);
drx = x + lengthdir_x(dis / 80, dir);
dry = y + lengthdir_y(dis / 80, dir);
draw_sprite_ext(sprite_index, image_index, drx, dry, 1, 1, 0, c_white, alpha_rune);

// Draw text //
if hover = true and can_be_activated = true then
    {
    draw_set_font(global.fn_1); //2);
    draw_set_halign(fa_center);
    draw_set_alpha(1);
    draw_set_color(col[image_index]);
    draw_text(192, 224 - 8, description[image_index]);
    }
    
// Draw click //
draw_set_alpha(alpha_click);
draw_set_font(global.fn_2);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(192, 225, "Press any key to continue");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

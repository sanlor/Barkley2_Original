<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_goofControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Don't exist after tutorial is done //
if Quest("tutorialProgress") &gt;= 100 then instance_destroy();

layers = 4;
for (i = 0; i &lt; layers; i += 1)
{
    sizeDir[i] = random(360);
    sizeLen[i] = 0.2 / 2;
    sizeSpd[i] = 180 + random(60); // Every 2 seconds (180 is half of 360)
    
    alphaDir[i] = random(360);
    alphaLen[i] = 0.1;
    alphaSpd[i] = 120 + random(60); // Every 3 seconds
}

// Blink //
eye_position = 64;
eye_position_goal = 64;
timer_eye_open = 15;
timer_blink = 25; 
blink_blood = 0.1;
alpha_eye = 1;
alpha_eye_drain = false;

// Alpha intensity, it's less when outdoors //
if room = r_fct_factoryOutpost01 then alpha_intensity = 0.15;
else if Quest("tutorialProgress") == 9 then alpha_intensity = 0.3;
else if Quest("tutorialProgress") == 8 then alpha_intensity = 0.45;
else if Quest("tutorialProgress") == 5 then alpha_intensity = 0.8;
else alpha_intensity = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Blink //
if timer_blink &gt; 0 then
    {
    // Tick down //
    timer_blink -= dt();
    
    // Event //
    if timer_blink &lt;= 0 then
        {
        if eye_position_goal = 0 then 
            {
            eye_position_goal = 64;
            timer_blink = 10;
            }
        else eye_position_goal = -48;        
        }
    }
    
// Open eyes //
if timer_eye_open &gt; 0 then
    {
    // Tick down //
    timer_eye_open -= dt();
    
    // Event //
    if timer_eye_open &lt;= 0 then eye_position_goal = 0;    
    }
    
// Move eye lids //
if eye_position &lt; eye_position_goal and eye_position_goal != 0 then eye_position += 60 * dt_sec();
if eye_position &gt; eye_position_goal and eye_position_goal &lt;= 0 then eye_position -= 60 * dt_sec();

// Blood veins to normal //
if blink_blood &gt; 0.1 then blink_blood -= dt_sec();
if blink_blood &lt; 0.1 then blink_blood = 0.1;

// Eyelids disappear //
if alpha_eye_drain = true and alpha_eye &gt; 0 then alpha_eye -= 0.5 * dt_sec(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove the eyelids 
alpha_eye_drain = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha_intensity = 0.65;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Blink Blood for the eye blood veins //
blink_blood = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Eye blood veins // Disabled for now //
//draw_sprite_ext(s_effect_eye_blink, 2, view_xview + 192, view_yview + 120, image_xscale, image_yscale, 0, c_white, blink_blood * alpha_intensity);

// Eye lids //
if Quest("zaneState") == 0 then
    {
    draw_sprite_ext(s_effect_eye_blink, 0, view_xview + 192, view_yview + 120 + eye_position, 1, 1, 0, c_white, alpha_eye);
    draw_sprite_ext(s_effect_eye_blink, 1, view_xview + 192, view_yview + 120 - eye_position, 1, 1, 0, c_white, alpha_eye);
    if eye_position &lt; 0 then
        {
        draw_sprite_ext(s_effect_eye_blink_filler, 0, view_xview + 16, view_yview + 120 - eye_position, 1, eye_position * 2, 0, c_white, alpha_eye);
        draw_sprite_ext(s_effect_eye_blink_filler, 1, view_xview + view_wview - 16, view_yview + 120 - eye_position, 1, eye_position * 2, 0, c_white, alpha_eye);
        }
    draw_set_color(c_black);
    draw_set_alpha(alpha_eye);
    draw_rectangle(view_xview - 2, view_yview - 2, view_xview + view_wview + 2, view_yview + 32 + eye_position, false);
    draw_rectangle(view_xview - 2, view_yview + view_hview + 2, view_xview + view_wview + 2, view_yview + view_hview - 32 - eye_position, false);
    }

// Color //
color = make_color_rgb(25, 5, 0);
    
/// Draw a dream filter on screen
for (i = 0; i &lt; layers; i += 1)
{
    if (paused() == 0)
    {
        sizeDir[i] += sizeSpd[i] * dt_sec();
        image_xscale = 1.1 + lengthdir_x(sizeLen[i], sizeDir[i]);
        image_yscale = 1.1 + lengthdir_x(sizeLen[i], sizeDir[i]);
        
        alphaDir[i] += alphaSpd[i] * dt_sec();
        image_alpha = 0.1 + (0.1 + lengthdir_x(alphaLen[i], alphaDir[i]));
        image_alpha *= 3;
        image_alpha /= layers;
    }
    draw_sprite_ext(s_effect_flash_overlay, 0, view_xview + 192, view_yview + 120, image_xscale, image_yscale, 0, color, image_alpha * alpha_intensity);
}

// Solid one in the corners //
draw_sprite_ext(s_effect_flash_overlay, 0, view_xview + 192, view_yview + 120, 1.25, 1.25, 0, c_black, 1 * alpha_intensity);
draw_sprite_ext(s_effect_flash_overlay, 0, view_xview + 192, view_yview + 120, 1.30, 1.30, 0, c_black, 1 * alpha_intensity);

// Reset alpha //
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

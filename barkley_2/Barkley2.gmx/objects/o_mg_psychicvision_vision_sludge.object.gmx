<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2510004</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Begin vision //
transition_goal = 10;
transition = 0;

fade_black = 0;
fade_black_goal = 1;

red = 255;
green = 255;
blue = 255;
red_goal = 30;
green_goal = 30;
blue_goal = 30;
fade_color = c_white;

lifespan_timer = 50;

end_timer = 12;
end_timer_goal = 12;

remove = false;

vision_xscale = 0.8;
vision_yscale = 0.8;
vision_xscale_goal = 1.2;
vision_yscale_goal = 1.2;
vision_alpha = 0;
vision_alpha_goal = 0;
vision_rotation = 0;
vision_rotation_goal = 15;
vision_start = 30;

ripples = 10;

global.cursor_visible = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go back to dialog with result
global.event = false;
Quest("growthSludgeVision", 1);
var source_of_visions = o_growthElemental01;
global.cursor_visible = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.event = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() then exit;

// Remove //
/*if scr_input_check_pressed(KEYID_HOLSTER, PLAYER1) or scr_input_check_pressed(KEYID_ACTION, PLAYER1) then
    {
    if remove = false and vision_alpha_goal = vision_alpha then remove = true;
    }*/ 

// Remove this junk //
if remove = true then
    {
    red_goal = 10;
    green_goal = 10;
    blue_goal = 10;
    fade_black_goal = 0;
    transition_goal = 0;
    vision_alpha_goal = 0;
    end_timer_goal = 0;
    if end_timer &lt;= 0 then instance_destroy();
    }
    
// Timer for removal process //
if end_timer &gt; end_timer_goal then end_timer -= dt();
    
// Lifespan //
if lifespan_timer &gt; 0 then lifespan_timer -= dt();
else remove = true;

// Ripples spawned on screen //
if ripples &gt; 0 then
    {
    ripples -= dt();
    if ripples &lt;= 0 then
        {
        instance_create(view_xview + irandom_range(120, 200), view_yview + irandom_range(80, 160), o_mg_psychicvision_ripple)
        if remove = false then ripples = irandom(2) + 2;
        }
    }

// Effects //
if transition &lt; transition_goal then transition += 0.2;
else if transition &gt; transition_goal then transition -= 0.1;
if fade_black &lt; fade_black_goal then fade_black += 0.05;
else if fade_black &gt; fade_black_goal then fade_black -= 0.04;

// Color change effects //
if red &gt; red_goal then red -= 2;
else if red &lt; red_goal then red += 1;
if green &gt; green_goal then green -= 1;
else if green &lt; green_goal then green += 3;
if blue &gt; blue_goal then blue -= 3;
else if blue &lt; blue_goal then blue += 2;

// Red goal changes //
if red = red_goal then 
    {
    if red_goal = 30 then red_goal = 230;
    else red_goal = 30;
    }
    
// Green goal changes //
if green = green_goal then 
    {
    if green_goal = 30 then green_goal = 230;
    else green_goal = 30;
    }
    
// Blue goal changes //
if blue = blue_goal then 
    {
    if blue_goal = 30 then blue_goal = 230;
    else blue_goal = 30;
    }

// Set the color //
fade_color = make_color_rgb(red, green, blue);

// Behold the vision appears, rotates and stretches //
if vision_start &gt; 0 then vision_start -= 1;
else
    {
    if remove = false then vision_alpha_goal = 0.9;
    
    if vision_xscale &lt; vision_xscale_goal then vision_xscale += 0.001;
    else if vision_xscale &gt; vision_xscale_goal then vision_xscale -= 0.002;
    
    if vision_yscale &lt; vision_yscale_goal then vision_yscale += 0.0025;
    else if vision_yscale &gt; vision_yscale_goal then vision_yscale -= 0.001;
    
    if vision_alpha &lt; vision_alpha_goal then vision_alpha += 0.05;
    else if vision_alpha &gt; vision_alpha_goal then vision_alpha -= 0.025;
    
    if vision_rotation &lt; vision_rotation_goal then vision_rotation += 0.05;
    else if vision_rotation &gt; vision_rotation_goal then vision_rotation -= 0.05;
    
    if vision_xscale = vision_xscale_goal then
        {
        if vision_xscale_goal = 1.2 then vision_xscale_goal = 0.8;
        else vision_xscale_goal = 1.2;
        }
        
    if vision_yscale = vision_yscale_goal then
        {
        if vision_yscale_goal = 1.2 then vision_yscale_goal = 0.8;
        else vision_yscale_goal = 1.2;
        }
        
    if vision_rotation = vision_rotation_goal then
        {
        if vision_rotation_goal = 15 then vision_rotation_goal = -15;
        else vision_rotation_goal = 15;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Here is the vision //
draw_set_color(c_black);
draw_set_alpha(fade_black);
draw_rectangle(view_xview - 2, view_yview - 2, view_xview + 386, view_yview + 242, false);
draw_sprite_ext(s_mg_psychicvision_transition, 0, view_xview + 192, view_yview + 120, transition, transition, 0, fade_color, fade_black);
draw_sprite_ext(s_mg_psychicvision_fishgut, 0, view_xview + 192, view_yview + 120, vision_xscale, vision_yscale, vision_rotation, c_white, vision_alpha);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

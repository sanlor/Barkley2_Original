<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_gunsCooler01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gun's Cooler for some random gun's for your bag
event_inherited();

shadow_radius = false;

scr_event_hook_onCommon(event_cinema);

list_status_effect = ds_list_create();
scr_stats_initStats();
scr_stats_setBaseStat(id, STAT_BASE_LUCK, scr_savedata_get("player.stats.effective." + STAT_BASE_LUCK));

/*
gunDropIndex = 0;
gunDrop[0] = "turald free"; gunSplash[0] = s_effect_splash_small; gunSprite[0] = s_watershadow_small;
xstart = x;
ystart = y;
imgSpd = 5;
imgSub = 0;
yDir = random(360);
yDix = 1;
ySpd = 180;
xDes = o_cinema3.x;
yDes = o_cinema3.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 
spd = 3; // In seconds how quick it gets to destination
*/

script = "
IF coolerState == 0 | GOTO | OPEN_COOLER
IF coolerState == 1 | GOTO | COOLER_EMPTY

OPEN_COOLER
DIALOG | P_NAME | (This ice box is filled with gun's...)
EVENT  | o_gunsCooler01 | 0 // Generate Guns
WAIT   | 1
EVENT  | o_gunsCooler01 | 0 // Generate Guns
WAIT   | 1
EVENT  | o_gunsCooler01 | 0 // Generate Guns
WAIT   | 1
EVENT  | o_gunsCooler01 | 0 // Generate Guns
WAIT   | 1
DIALOG | Turald | These gun's are worthless. You can have them if you like. Put them in your `sq` GUN'S BAG `rt`.
DIALOG | Turald | Use `sq` SHIFT `rt` to try out random gun's from your `sq` BAG `rt`. This helps to save ammo for your main gun's.
DIALOG | Turald | Take these gun's at an `sq` UTILITY STATION `rt`. There should be one south of here nearby.
DIALOG | Turald | If a gun is worthless garbage, you can smelt it there to make `sq` AMMO `rt` for your main gun's.
DIALOG | Turald | If a gun isn't too bad, you can `sq` BREED `rt` them with other gun's to make better weapons.
DIALOG | Turald | If a gun seems good, you can give them a NAME and PROMOTE them to your main gun's on your `sq` BANDELIER `rt`.
DIALOG | Turald | Use the MOUSE WHEEL to switch between your main gun's. And remember, SHIFT brings up a random gun you just collected.
QUEST  | coolerState = 1
GOTO | END

COOLER_EMPTY
DIALOG | P_NAME | (The cooler is empty.)
GOTO | END

END
EXIT |
";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(stats_base);
ds_map_destroy(stats_effective);
ds_map_destroy(stats_current);
ds_list_destroy(list_status_effect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
yDir += ySpd * dt_sec();
  
x = Goto(x, xDes, dt_sec() * (xDis / spd));
y = Goto(y, yDes, dt_sec() * (yDis / spd));
if (x == xDes &amp;&amp; y == yDes)
{
    gunObj.x = o_cinema3.x;
    gunObj.y = o_cinema3.y;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Send Gun to place you can pick it up.
xDes = o_cinema11.x;
yDes = o_cinema11.y;
xDis = point_distance(x, 0, xDes, 0); 
yDis = point_distance(0, y, 0, yDes); 

depth = -500;
yDir = 0;
yDix = 16;
ySpd = 180;
spd = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make gun drop
var gun = Drop("gun", "turald free");
gun.timer = 9999999999;
with(gun){scr_entity_setDirSpd(185+random(80), 12+random(6))};

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

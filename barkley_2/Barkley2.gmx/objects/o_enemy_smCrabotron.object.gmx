<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_enemy_smCrabotron_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemyTemplate_crab</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

sndLegMove = NULL_STRING;

/// --- Set standard AI configurations
scr_enemyDB_statsGet(enemyBuild);

scr_stats_genEffectiveStats();
scr_stats_resetCurrentStats();
p_bulletOz = 6;
   
/// --- Reconfigure my crabs
LEGDIST_X = 18//24;
LEGDIST_Y = 12//18;
STEPDIST = 24;
STEPTIME = 1.5;
STEPPAUSE = 0;
STEPHEIGHT_LEGS = 12;
STEPHEIGHT_BODY = 4;
ZHEIGHT_BODY = 4;

leg_x[0] = x - LEGDIST_X;
leg_x[1] = x - LEGDIST_X;
leg_x[2] = x + LEGDIST_X;
leg_x[3] = x + LEGDIST_X;

leg_y[0] = y - LEGDIST_Y;
leg_y[1] = y + LEGDIST_Y;
leg_y[2] = y - LEGDIST_Y;
leg_y[3] = y + LEGDIST_Y;

leg_x_target[0] = leg_x[0];
leg_x_target[1] = leg_x[1];
leg_x_target[2] = leg_x[2];
leg_x_target[3] = leg_x[3];

leg_y_target[0] = leg_y[0];
leg_y_target[1] = leg_y[1];
leg_y_target[2] = leg_y[2];
leg_y_target[3] = leg_y[3];

// Create legs
leg_id[0] = instance_create(leg_x[0], leg_y[0], o_enemy_smCrabotron_leg);
leg_id[1] = instance_create(leg_x[1], leg_y[1], o_enemy_smCrabotron_leg);
leg_id[2] = instance_create(leg_x[2], leg_y[2], o_enemy_smCrabotron_leg);
leg_id[3] = instance_create(leg_x[3], leg_y[3], o_enemy_smCrabotron_leg);

leg_id[0].image_index = 2;
leg_id[1].image_index = 0;
leg_id[2].image_index = 3;
leg_id[3].image_index = 1;

z = ZHEIGHT_BODY;

// Define shadows
with (leg_id[0]) scr_entity_setShadowCircle(4);
with (leg_id[1]) scr_entity_setShadowCircle(4);
with (leg_id[2]) scr_entity_setShadowCircle(4);
with (leg_id[3]) scr_entity_setShadowCircle(4);
scr_entity_setShadowSprite(s_enemy_smCrabotron_head, 0, 0, 0);

// CombatActor stuff
scr_actor_setActorPushType(ACTOR_COLLISIONPUSH_STANDARD);
scr_entity_setCollisionType(COLLISION_NORMAL);
scr_path_setMotionPlanningType(MOTIONPLANNING_NORMAL);
scr_actor_setActorPushDist(10);
scr_path_setLookaheadDist(24);
scr_path_setWalldist(32);
scr_entity_setZHitbox(0, global.settingEnemyBigHeight);

movement = scr_AI_movement_init(scr_AI_movementType_standard_pathOnly);

switch_conf = scr_AI_setSwitch(scr_AI_switch_standard);
scr_AI_addPassiveState(scr_AI_passive_none);
approach = scr_AI_addActiveState(scr_AI_active_approach);
approach[? "walkScript"] = movement;
approach[? "stopAtDistance"] = 40;

scr_AI_aggro_configure(200, 500, 1400);

// Flamethrower
flamethrower_attack = scr_AI_switch_standard("new_attack", switch_conf);
flamethrower_action = scr_AI_addAction(scr_AI_action_crabotron_flamethrower);
flamethrower_attack[? "action"] = flamethrower_action; 

AI_util_action_setDamage(flamethrower_action, 0, 0, 0, 0.33, 0, 0, STAGGER_HARDNESS_SOFT);

flamethrower_action[? "streamlength"] = 3;
flamethrower_action[? "streamwidth"] = 3;
flamethrower_action[? "streamspd"] = 28;
flamethrower_action[? "repeats"] = 2;

flamethrower_action[? "beforeTime"] = 4;
flamethrower_action[? "duringTime"] = .5;
flamethrower_action[? "afterTime"] = 3;
flamethrower_action[? "endburst"] = 3;

flamethrower_attack[? "distMax"] = 130;
flamethrower_attack[? "cooldownTime"] = 30; 
flamethrower_attack[? "cooldownTimeRnd"] = 20;
flamethrower_attack[? "rechargeTime"] = 5;
flamethrower_attack[? "rechargeTimeRnd"] = 2;
flamethrower_attack[? "coneAngleMax"] = 180;
flamethrower_attack[? "predicate"] = predicate_AI_crabotron_flamethrower;

// Jump
jump_attack = scr_AI_switch_standard("new_attack", switch_conf);
jump_action = scr_AI_addAction(scr_AI_action_crabotron_jump);
jump_attack[? "action"] = jump_action; 

AI_util_action_setDamage(jump_action, 10, 0, 1, 0, 25, 150, STAGGER_HARDNESS_MEDIUM);

jump_attack[? "distMax"] = 350;
jump_attack[? "distMin"] = 120;
jump_attack[? "cooldownTime"] = 200; 
jump_attack[? "cooldownTimeRnd"] = 40;
jump_attack[? "rechargeTime"] = 5;
jump_attack[? "rechargeTimeRnd"] = 0;
jump_attack[? "coneAngleMax"] = 180;

/// --- Sounds
sndLegMove = "crab_leg_lift"; // None, maybe? (In that case, empty string, i.e. "") 
sndLegLand = "crab_leg_land"; // A metal spike sticking into the floor. some kind of faint ding?
sndChatter = "crab_chatter"; // None, maybe? No idea what a faceless metal spider sounds like when it chatters...

sndChatterTimer = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scr_stats_getCurrentStat(id, STAT_CURRENT_HP) &lt;= 0) {
    // Death FX
    scr_fx_explosion_spawn_at(x, y, z, 4);
    
    var debris = irandom(6) + 10;
    repeat (debris) {
        var gib = instance_create(x + 8 - random(16),y + 8 - random(16),o_gibs);
        gib.sprite_index = s_enemyDeath_parts;
        gib.image_index = irandom(sprite_get_number(s_enemyDeath_parts)-1);
        gib.z = z + 4 + random(32);
        gib.timer = 600;
        gib.move_z = 8 + random(8);
        gib.bloodburst = noone;
        gib.splatSound = "junkbot_death_partclink";
        gib.rot = 0;
        
        with gib {
            scr_entity_setDirSpd(random(360), 3 + random(16));
            scr_entity_setShadowSprite(sprite_index, image_index, 0, 0);
        }
    }
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

// Sporadic chatter sounds
if (AI_stateTopType != AI_STATETYPE_PASSIVE) {
    sndChatterTimer -= dt();
}
else {
    sndChatterTimer -= dt() * .25;
}

if (sndChatterTimer &lt;= 0) {
    audio_play_sound_on_actor(self.id, scr_soundbank_pickSound(sndChatter), false, 10);
    sndChatterTimer = 15 + random(15);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var image = 0;

draw_sprite(s_enemy_smCrabotron_ball,0,dx+(leg_id[0].dx - dx)/2,dy+(leg_id[0].dy-24 - dy)/2);
draw_sprite(s_enemy_smCrabotron_ball,0,dx+(leg_id[2].dx - dx)/2,dy+(leg_id[2].dy-24 - dy)/2);

draw_sprite_ext(s_enemy_smCrabotron_head,image,dx,dy,1,1,0,c_white,1);

draw_sprite(s_enemy_smCrabotron_ball,0,dx+(leg_id[1].dx - dx)/2,dy+(leg_id[1].dy-24 - dy)/2);
draw_sprite(s_enemy_smCrabotron_ball,0,dx+(leg_id[3].dx - dx)/2,dy+(leg_id[3].dy-24 - dy)/2);

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

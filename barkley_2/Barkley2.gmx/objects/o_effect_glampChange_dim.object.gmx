<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1215752192</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
color = c_black;
color_text = c_red;
alpha = 0;
alpha_goal = 0.3;
alpha_text = 0;
alpha_text_goal = 0;
timer_text = 30;
text = "GLAMP has been decimated! (-1 point to all)"
lifespan = 0;
lifespan_half = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Alpha in and out //
if alpha &lt; alpha_goal and alpha_goal &gt; 0 then alpha += 0.3 * dt_sec();
if alpha &gt; alpha_goal and alpha_goal = 0 then alpha -= 0.3 * dt_sec();
if alpha &lt;= 0 and alpha_goal = 0 then instance_destroy();

// Alpha text //
if alpha_text &lt; alpha_text_goal and alpha_text_goal &gt; 0 then alpha_text += 1 * dt_sec();
if alpha_text &gt; alpha_text_goal and alpha_text_goal = 0 then alpha_text -= 1 * dt_sec();

// Lifespan //
if lifespan &gt; 0 then
    {
    // Tick down //
    lifespan -= dt();
    
    // Change alpha //
    if lifespan &lt;= lifespan_half then alpha_goal = 0;
    
    // Event //
    if lifespan &lt;= 0 then instance_destroy();
    }
    
// Text //
if timer_text &gt; 0 then
    {
    // Tick down //
    timer_text -= dt();
    
    // Event //
    if timer_text &lt;= 0 then 
        {
        if alpha_text_goal = 0 then 
            {
            alpha_text_goal = 0.75;
            timer_text = 40;
            }
        else alpha_text_goal = 0;        
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw self //
draw_set_color(color);
draw_set_alpha(alpha);
draw_rectangle(view_xview - 2, view_yview - 2, view_xview + view_wview + 2, view_yview + view_hview + 2, false);
draw_set_alpha(alpha * 0.25);
draw_rectangle(view_xview - 2, view_yview + 110, view_xview + view_wview + 2, view_yview + 130, false);
draw_rectangle(view_xview - 2, view_yview + 105, view_xview + view_wview + 2, view_yview + 135, false);
draw_rectangle(view_xview - 2, view_yview + 102, view_xview + view_wview + 2, view_yview + 138, false);
draw_set_color(c_white);
draw_set_alpha(alpha_text);
draw_set_color(color_text);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(global.fn_2);
draw_text(view_xview + view_wview / 2, view_yview + view_hview / 2 + 25, text);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

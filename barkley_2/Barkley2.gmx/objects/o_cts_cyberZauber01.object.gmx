<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_wst_pythagoras_print01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Setup //
image_speed = 0;
phase = 0;
timer = 15;
alpha = 0;
draw = true;
compileImage = 0;
drawFlasher = false;
flashImage = 0;
drawSpinner = false;
zauberImage = 0;
drawMorpher = false;
morphImage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Phases //
if timer &gt; 0 then 
    {
    timer -= dt();
    if timer &lt;= 0 then 
        {
        phase += 1;
        if phase = 1 then timer = 20;
        else if phase = 2 then timer = 15;
        else if phase = 3 then timer = 15;
        else if phase = 4 then timer = 15;
        else if phase = 5 then timer = 15;
        else if phase = 6 then timer = 15;
        else if phase = 7 then timer = 55;
        }
    }
    
// Printout //
if phase = 1 then
    {
    // Pythagoras prints out some papers //
    if compileImage &lt; 12 then compileImage += 10 * dt_sec();
    else compileImage = 12;
    }

// Flashing //
if phase = 2 then
    {
    // Pythagoras slot open //
    compileImage = 5;
    
    // Paper begins flashing //
    drawFlasher = true;
    
    // Flashing animation speed //
    if flashImage &lt; 19 then flashImage += 15 * dt_sec();
    else flashImage = 0;
    }
    
// Flashing Stop //
if phase = 3 then
    {
    // Paper flashing stops //
    if flashImage &lt; 9 then flashImage += 12 * dt_sec();
    else flashImage = 9;
    }
    
// Spin //
if phase = 4 then
    {
    // Spin the paper //
    drawSpinner = true;
    
    // Dont draw the flashing paper anymore //
    drawFlasher = false;
    
    // Spin animation speed //
    if zauberImage &lt; 17 then zauberImage += 12 * dt_sec();
    else zauberImage = 17;
    }
    
// Morph //
if phase = 5 then
    {
    // Alpha out //
    if alpha &lt; 0.75 then alpha += 0.5 * dt_sec();
    
    // Dont spin anymore //
    drawSpinner = false;
    
    // Morph into a B-Ball //
    drawMorpher = true;
    
    // Morph animation speed //
    if morphImage &lt; 9 then morphImage += 8 * dt_sec();
    else morphImage = 9;
    }
    
// Path //
if phase = 6 then
    {
    // Begin the path //
    path_start(pCyberZauber, 3, path_action_stop, true);
    }
    
// End //
if phase = 8 then
    {
    if alpha &gt; 0 then alpha -= 0.8 * dt_sec();
    if image_alpha &gt; 0 then image_alpha -= 1.0 * dt_sec();
    else instance_destroy();
    }
    
// Path Speed //
path_speed = 20 * dt();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the slot and the initial paper coming out from it //
draw_sprite_ext(s_wst_pythagoras_print01, compileImage, o_cinema2.x, o_cinema2.y, 1, 1, 0, c_white, image_alpha);

// Draw flashing paper //
if drawFlasher = true then draw_sprite_ext(s_wst_pythagoras_compile01, flashImage, x, y, 1, 1, 0, c_white, image_alpha);

// Draw spinning paper //
else if drawSpinner = true then draw_sprite_ext(s_wst_pythagoras_zauber01, zauberImage, x, y, 1, 1, 0, c_white, image_alpha);

// Paper transform into a B-Ball //
else if drawMorpher = true then 
    {
    draw_sprite_ext(s_wst_pythagoras_zauber_morph01, morphImage, x, y, 1, 1, 0, c_white, image_alpha);
    EffectZauber(s_wst_pythagoras_zauber_morph01, morphImage, x, y, 1, 1, c_blue, alpha);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

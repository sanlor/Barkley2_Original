<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///YOU CAN SPECIFY TEXT
textTitle = choose("EAT ALL THE FRUIT");
textRight = choose("CHOMPING SUCCESSFUL");
textWrong = choose("YOU FAILED THE MISSION");
textTop = textTitle;

cRed = make_color_rgb(255 - 16, 16, 16);
cYellow = make_color_rgb(255 - 16, 255 - 16, 16);
cBlue = make_color_rgb(16, 16, 255 - 16);

selectMax = 6;
for (i = 0; i &lt; selectMax; i += 1)
{
    fruit[i] = 0;
    fruitVisible[i] = 1;
}
fruit[floor(random(selectMax))] = 1;
select = floor(random(selectMax));
confirm = 0;
chomp = 0;
teethSpace = 32;
ate = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a shape
if (MiniKeyPress("cancel")) { Minigame("stop"); instance_destroy(); }

if (chomp == 0)
{
    if (MiniKeyPress("left"))
    {
        select -= 1;
        if (select &lt; 0) select = selectMax - 1;
    }
    if (MiniKeyPress("right"))
    {
        select += 1;
        if (select &gt;= selectMax) select = 0;
    }
    if (MiniKeyPress("action"))
    {
        if (fruitVisible[select] == 1) chomp = 1;
    }
}

if (chomp == 1)
{
    teethSpace -= dt() * 9.6;
    if (teethSpace &lt;= 0) 
    { 
        teethSpace = 0; 
        chomp = 2; 
        if (fruit[select] == 0) { ate += 1; fruitVisible[select] = 0; audio_play_sound_ext("sn_ptonychomp", 10, 0); }
        else { ate = -1; fruit[select] = 2; audio_play_sound_ext("sn_ptonyhurt", 10, 0); }
        
    }
}

if (chomp == 2)
{
    teethSpace += dt() * 9.6;
    if (teethSpace &gt;= 32) 
    { 
        teethSpace = 32; 
        chomp = 0; 
        if (ate == 5) { chomp = 3; textTop = textRight; audio_play_sound_ext("sn_ptonyright", 10, 0); }
        if (ate == -1) { chomp = 3; textTop = textWrong; audio_play_sound_ext("sn_ptonywrong", 10, 0); }
    }
}

if (chomp == 3)
{
    if (MiniKeyPress("action"))
    {
        //room_goto(rMiniSelect);
        instance_destroy();
        instance_create(0, 0, oMini10Select);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
draw_set_color(c_black); draw_rectangle(global.miniX, global.miniY, global.miniX + (385 * global.miniScale), global.miniY + (241 * global.miniScale), 0);
dx = global.miniX + (global.miniWidthS / 2); 
dy = global.miniY + (global.miniHeightS / 2);
ds = global.miniScale;

draw_set_color(cBlue);
draw_rectangle(global.miniX, global.miniY, global.miniX + global.miniWidthS, global.miniY + (17 * global.miniScale), 0);

draw_set_color(c_white);
draw_set_font(CourierNew12);
draw_set_halign(1);
draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY + (0 * global.miniScale), textTop, global.miniScale, global.miniScale, 0);
draw_set_halign(0);

if (confirm == 2)
{
    draw_set_font(CourierNew24b);
    draw_set_valign(1);
    draw_set_halign(1);
    draw_set_color(c_white);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY + (global.miniHeightS / 2), string(number + 1), global.miniScale, global.miniScale, 0);
}

//Shapes
dx = global.miniX + (global.miniWidthS / 2); 
dy = global.miniY + (global.miniHeightS / 2);
ds = global.miniScale;
spc = 16 * global.miniScale;
dx -= (spc * 2.5) + ((48 * 2.5) * global.miniScale);
dxo = dx;
//dy -= (24 * global.miniScale);
for (i = 0; i &lt; 6; i += 1)
{
    //if (confirm != 0) col = c_dkgray; else col = c_white;
    //if (select == i) col = cRed;
    if (fruit[i] == 2) draw_sprite_ext(sMiniFruit, 6, dx, dy, ds, ds, 0, c_white, 1);
    else if (fruitVisible[i] == 1) draw_sprite_ext(sMiniFruit, i, dx, dy, ds, ds, 0, c_white, 1);
    if (select == i)
    {
        draw_sprite_ext(sMiniFruitTeeth, 1, dx, dy + (teethSpace * ds), ds, ds, 0, c_white, 1);
        draw_sprite_ext(sMiniFruitTeeth, 0, dx, dy - (teethSpace * ds), ds, ds, 0, c_white, 1);
    }
    dx += spc + (48 * global.miniScale);
}

scr_font(CourierNew12, c_white, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

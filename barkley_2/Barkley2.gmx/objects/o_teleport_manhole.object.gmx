<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_manhole</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
trg = 64; // Distance to manhole for it to open state
dir = EAST; // Direction manhole slides
dis = 40; // Distance manhole slides
spd = 40 * 2; // Pixels manhole moves a second

rom = r_gau_NPCVilla01;
gox = 304;
goy = 304;

// No need to edit below
opn = 0; // Open state
opnLst = opn;

cox = 0; // Current cover coordinates
coy = 0;

opx = 0; // Where the manhole slides to in coordinates
opy = 0;

conditional = "";
value = 0;

// Wether or not to play a sound //
silent = false;

// Wether or not to draw the cover //
draw_cover = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
if (global.battleMode) exit;
if (conditional != "")
{
    if (Quest(conditional) != value) exit;
}
if (instance_exists(o_hoopz))
{
    if (global.event == 0 and trg &gt; 0) 
    {
        pdt = point_distance(o_hoopz.x, o_hoopz.y, x, y);
        opn = (pdt &lt; trg);
        if (pdt &lt; 12) event_user(15);
    }
}
if (opn == 0) 
{
    cox = Goto(cox, 0, dt_sec() * spd);
    coy = Goto(coy, 0, dt_sec() * spd);
}
else 
{
    opx = ceil(lengthdir_x(dis * 1.00, dir * 45));
    opy = ceil(lengthdir_y(dis * 0.80, dir * 45));
    cox = Goto(cox, opx, dt_sec() * spd);
    coy = Goto(coy, opy, dt_sec() * spd);
}
// Sound
if (opn != opnLst) 
{ 
    opnLst = opn;
    if silent = false then audio_play_sound_at_xy("manhole_opening_closing", 0, 0, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Build event to teleport
var dum = instance_create(x, y + 8, oDummy);
script = "
MOVETO | o_cts_hoopz | " + string(dum) + " | MOVE_NORMAL
WAIT   | 0
LOOK   | o_cts_hoopz | SOUTHEAST
WAIT   | 0.25
PLAYSET| o_cts_hoopz | kneelDown | kneel
WAIT   | 0
Misc   | alpha | o_cts_hoopz | 0 | 1
WAIT   | 1.0
EVENT  | " + string(id) + "
WAIT   | 0.75
FADE   | 1 | 0.5
WAIT   | 0.5
Teleport | " + string(rom) + " | " + string(gox) + " | " + string(goy) + " | 0.5
";
Cinema("run", script);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open
opn = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Close
opn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw hole and cover
draw_sprite(s_manhole, 0, x, y);
if draw_cover = true then draw_sprite(s_manhole_cover, 0, x + cox, y + coy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_mosquito</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>EnemyCombatActor</parentName>
  <maskName>mask_disk_24by24</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

stats_attack = scr_stats_newAttackStats();
// Setup //
scr_entity_animation_setSpeed(ANIMATION_DEFAULT, 3);
alpha = 1;
alpha_goal = 1;
length = 10;
length_goal = 5;
escape = 0;

dny = -32;
z = 16;
gravity_z = 0;

for (i=0; i&lt;6; i+=1;)
    {
    x_position[i] = x;
    y_position[i] = y;
    x_wiggle[i] = 0;
    y_wiggle[i] = 0;
    my_direction[i] = irandom(360);
    my_direction_speed[i] = choose(-6, +6);
    }
kill_hoopz_check = false;
kill_hoopz_counter = 0;

collisionPush = ACTOR_COLLISIONPUSH_NONE;
scr_stats_hook_onHit_userEvent(0);
scr_AI_setSwitchEnabled(false);
scr_entity_setCollisionType(COLLISION_NONE);

wiggle_direction = irandom(1);
if wiggle_direction = 0 then wiggle_direction = -1;
if instance_exists(o_hoopz) then
{
    scr_entity_setDirSpd(point_direction(x, y, o_hoopz.x, o_hoopz.y - 20), 12);
}

dropChance = 0; 
dropValue = 0;
dropRarity = 0;
mosquitoNb = 6;

timersting = 0;

wadeSplash = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drop the value before you go away //
//if kill_hoopz_check = true then o_mosquito_control.kill_hoopz -= 1;
                

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Shit //
event_inherited();
if paused() exit;

// Alpha //
if alpha &gt; alpha_goal then alpha -= 0.1;
if alpha &lt; alpha_goal then alpha += 0.1;
if alpha &lt;= 0 then instance_destroy();

// Wiggle //
for (i=0; i&lt;6; i+=1;)
    {
    x_position[i] = x - lengthdir_x(length, my_direction[i] + i * 60);
    y_position[i] = y - lengthdir_y(length, my_direction[i] + i * 60);
    x_wiggle[i] = irandom(2) - irandom(2);
    y_wiggle[i] = irandom(2) - irandom(2);
    my_direction[i] += my_direction_speed[i] * dt();
    if my_direction[i] &lt; 0 then my_direction[i] += 360;
    if my_direction[i] &gt; 360 then my_direction[i] -= 360;
    }

// Length from center //
if length &lt; length_goal then length += 1;
if length &gt; length_goal then length -= 1;
if length = length_goal then length_goal = 6 + irandom(6);

// Move towards player //
if instance_exists(o_hoopz) then
    {
    // Kill hoopz //
    if (point_distance(o_hoopz.x, o_hoopz.y, x, y) &lt;= 24) then
        {
            timersting+=dt();
            if(timersting&gt;=10)
            {
                scr_stats_setAttackStat(self, STAT_ATTACK_DMG_NORMAL, 1 + mosquitoNb/2);
                scr_stats_performAttack(stats_attack, o_hoopz.id, false, 0, false, false);
                timersting-=10;
            }
        }
    else
        {
            //timersting = 0;
        }
        
  
    // Repellant //
    if instance_exists(o_enemy_bugflower_plant) then
        {
        if distance_to_object(o_enemy_bugflower_plant) &lt;= 64 then
            {
            repel = instance_nearest(x, y, o_enemy_bugflower_plant);
            event_user(1); // Repels mosquitos, destroys this object
            }
        }
                   
    // Move towards player when close enough //
    var tohoopz = distance_to_object(o_hoopz);
    if (tohoopz &lt;= 220) then
        {
        scr_entity_addDirSpd(point_direction(x, y, o_hoopz.x, o_hoopz.y), random(1.8));
        if move_dist &gt; 12 then scr_entity_setDirSpd(move_dir, 12);
        move_friction = 0;
        }
    if (scr_statusEffect_getFromCombatActor(o_hoopz,statusEffect_repellant) and tohoopz &lt;= 48)
        {
        repel = instance_nearest(x, y, o_hoopz);
        event_user(1); // Repels mosquitos, destroys this object
        }   
    // If too far off, then just slowly stop //
    else move_friction = 0.03;
    }
    
// Die offscreen //
if x &lt;= view_xview - 200 or x &gt;= view_xview + 584 or y &lt;= view_yview - 200 or y &gt;= view_yview + 440 then instance_destroy();

if(mosquitoNb&lt;=0)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Disperse mosquitos
// Input variable: repel - object to repel from

escape += random(2) * dt();

while (escape &gt;= 1) {
    escape -= 1;
    if(mosquitoNb &gt;= 1)
    {
        mosquitoNb -= 1;
        var _x = x_position[mosquitoNb] + x_wiggle[mosquitoNb];
        var _y = y_position[mosquitoNb] + y_wiggle[mosquitoNb];
        var _dir = point_direction(repel.x, repel.y, _x, _y) + 45 - random(90);
        var n = instance_create(_x, _y, o_mosquito_particle);
        with (n) { scr_entity_setDirSpd(_dir, 10 + random(6)); }
    }
    else {
        var _dir = point_direction(repel.x, repel.y, x, y) + 45 - random(90);
        var n = instance_create(x, y, o_mosquito_particle);
        with (n) { scr_entity_setDirSpd(_dir, 10 + random(6)); }
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("onHit Event");

if(scr_stats_getAttackStat(argument_attackId,STAT_ATTACK_DMG_ZAUBER)&gt;0)
{
    mosquitoNb=0;
}
else
{
    if(irandom(100)&lt;=40)
    {
        mosquitoNb-=1;
        // Fake a 1.0 damage indicator
        scr_stats_createDamageIndicators(self.id, 1, DAMAGETYPE_NORMAL, c_white);
    }
}

callback_allowHit = false;
callback_allowDamage = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw self //
draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, alpha);
if(mosquitoNb&gt;1)
{
    for (i=1; i&lt;=mosquitoNb; i+=1;)
    {
        draw_sprite_ext(sprite_index, scr_entity_animation_getImage(ANIMATION_DEFAULT), x_position[i-1] + x_wiggle[i-1], y_position[i-1] + y_wiggle[i-1], 1, 1, 0, c_white, alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>2,2</point>
  </PhysicsShapePoints>
</object>

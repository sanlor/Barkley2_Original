<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oPickUp</parentName>
  <maskName>mask_hud_gunicon</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Decimate Gun Map
if (grabbed == 0) GunMap(gun, "decimate");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// What to pick up
if(gun != NULL &amp;&amp; scr_equipment_guns_bag_addGun(gun))
{
    audio_play_sound_on_actor(o_hoopz,scr_soundbank_pickSound("hoopz_pickupgun"),false,90);
    // Show Gun indicator
    var ind = instance_create(x, y, o_entity_indicatorWeapon);
    ind.name = gun[? "pickupName"];
    ind.col = gun[? "pickCol"];
    grabbed = 1;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW
event_inherited();
var scl = global.settingDropScale; // Scale of dropped gun

var xof = floor((49 / 2) * scl);
var yof = floor((24 / 2) * scl);
var spr = assetOrNull(gun[? "hudIconSprite"], asset_sprite);
var sub = gun[? "hudIconFrame"];
HUD("gun draw", spr, sub, x - xof, y - yof - base_z, scl, scl, c_black, shadow_strength);
if (scr_item_blink(timer, flash))
{
    var drx = dx - xof;
    var dry = dy - yof;
    HUD("gun draw", spr, sub, drx, dry, scl, scl, c_white, 1);
    if (pickable) 
    {
        var colorAlpha = abs(sin(colorSin)) * .25;
        var color = merge_colour(c_ltblue, gun[? "col"], 0.5);
        draw_set_blend_mode(bm_add);
        HUD("gun draw", spr, sub, drx - 1, dry, scl, scl, color, colorAlpha);
        HUD("gun draw", spr, sub, drx + 1, dry, scl, scl, color, colorAlpha);
        HUD("gun draw", spr, sub, drx, dry - 1, scl, scl, color, colorAlpha);
        HUD("gun draw", spr, sub, drx, dry + 1, scl, scl, color, colorAlpha);
        draw_set_blend_mode(bm_normal);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

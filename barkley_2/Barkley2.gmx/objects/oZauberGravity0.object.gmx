<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Deferred</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();
decayTime = 1; // Seconds to fade away
wellTime = 7.5;
color = c_mental;
soundVolume = 0.75;
orbPerSecond = 60;


soundOnce = 0;
stopped = 0;
orbs = 32; //8;
orbCounter = 0; // orb counter
//alarm[0] = 60 * 10;
kill = 0;
decay = 0.5; // 1.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop sound
audio_stop_sound(sound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
if (paused()) exit;
depth = -(y + 48);


if (stopped &amp;&amp; soundOnce == 0)
{
    soundOnce = 1;
    sound = audio_play_sound_at_xy("sn_zauber_gravitywell", 1, 0, x, y);
    audio_sound_gain_ext(sound, 0, 0);
    audio_sound_gain_ext(sound, soundVolume, 1000);
}

//if (soundOnce) wellTime -= dt_sec();
if (instance_exists(dad) == 0) //wellTime &lt;= 0) 
{
    if (kill == 0) audio_sound_gain_ext(sound, 0, 1000);
    kill = 1;
}

orbCounter += dt_sec();
while (orbCounter &gt; 1 / orbPerSecond &amp;&amp; kill == 0)
{
    orbCounter -= 1 / orbPerSecond;
    var obj = instance_create(x, y, oZauberGravity1);
    obj.dad = id;
    obj.depth = depth + 1;
    obj.master = id;
    // radius_outer = radius_outer_max
    //var rng = dad.radius_outer_max - dad.radius_outer_org;
    //rng = (dad.radius_outer - dad.radius_outer_org) / rng; // 0 - 1 value
    //obj.len *= 0.25 + ((rng * decay) * 0.75);
    obj.len = (dad.radius_outer * 0.8) + random(dad.radius_outer * 0.2);
}

if (kill == 1) decay = max(0, decay - (dt_sec() / decayTime));

if (decay == 0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kill to end sound
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
px = (1.0 / 128);
prt = 4;//ceil(orbs / 32);
spr = s_light_256; 
sub = 1; 
alp = .5; 
col2 = c_black;

global.tObj = id;
with (oZauberGravity1) { if (dad == global.tObj) event_user(1); }
draw_set_blend_mode(bm_normal);
draw_set_colour_write_enable(1, 1, 1, 0);

scl = ((orbs * .2) * decay) / 3;// + random(orbs * 16);
if (paused() == 0)
{
    for (q = 0; q &lt; prt * 3; q += 1)
    {
        llx[q] = random(scl);
        lly[q] = random(scl);
        llc[q] = random(0.25);
        lln[q] = random(scl);
        lld[q] = random(360);
        llr[q] = random(360);
    }
}
h = 0;
draw_set_blend_mode(bm_add);
for (i = 0; i &lt; prt; i += 1)
{
    col = merge_color(color, col2, 0.25 + llc[h]);
    col = color;
    xs = scl + llx[i];
    ys = scl + lly[i];
    dx = x + lengthdir_x(lln[h] / 6, lld[h]);
    dy = y + lengthdir_y(lln[h] / 6, lld[h]);
    draw_sprite_ext(spr, sub, dx, dy, px * xs, px * ys, llr[h], col, alp);
    h += 1;
}
scl = scl * .66;
for (i = 0; i &lt; prt; i += 1)
{
    col = merge_color(color, col2, 0.5 + llc[h]);
    xs = scl + llx[i];
    ys = scl + lly[i];
    dx = x + lengthdir_x(lln[h] / 4, lld[h]);
    dy = y + lengthdir_y(lln[h] / 4, lld[h]);
    draw_sprite_ext(spr, sub, dx, dy, px * xs, px * ys, llr[h], col, alp);
    h += 1;
}
scl = scl * .33;
//draw_set_blend_mode(bm_subtract);
for (i = 0; i &lt; prt; i += 1)
{
    //col = merge_color(color, col2, 0.75 + random(0.25));
    col = merge_color(color, col2, 0.75 + llc[h]);
    //col = c_white;
    xs = scl + llx[i];
    ys = scl + lly[i];
    dx = x + lengthdir_x(lln[h] / 2, lld[h]);
    dy = y + lengthdir_y(lln[h] / 2, lld[h]);
    draw_sprite_ext(spr, sub, dx, dy, px * xs, px * ys, llr[h], col, alp);
    h += 1;
}

draw_set_colour_write_enable(1, 1, 1, 1);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

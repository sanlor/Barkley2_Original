<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
// Was scr_event_fade_init()
/// Automatically called when a fade object is created.

// The event that is associated with this fade object, should never be null.
_event = NULL;

// True if it should fade out, false if it should fade in.
_fade = true;

// The amount of seconds for this object to fade.
_seconds = 0;

// Short delay at the apex of the fade //  LAZ TEST // Purpose: remove those 1 frame long flashes of no-fade-effect
_fadeDelay = 1;

// Debug mode thing for measuring the duration of the transitions //
_debugTime = 0;

// Color of the fade //
_fadeColor = c_black;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
// was scr_event_fade_step()
/// Automatically called when the fade object steps.

// LAZ TEST to add a few frame delay period during the darkest hour/apex of the fade //
if _fade = false and _fadeDelay &gt; 0 then _fadeDelay -= dt();

// Debug mode lifetime timer //
_debugTime += dt_sec();

// Destroys all darkness if we are fading in.
if (!_fade) 
{
     oBlack.alpha = 0;
     oBlack.alphaGoal = 0;
}

// Fade in different directions.
if (_fade) {
    if (_seconds != 0) {
        image_alpha += dt_sec() / _seconds;
    } else {
        image_alpha = 1;
    }
} else if _fadeDelay &lt;= 0 {  // if fade_delay part of the laz test
    if (_seconds != 0) {
        image_alpha -= dt_sec() / _seconds;
    } else {
        image_alpha = 0;
    }
}

if (_event == NULL) exit;

// If we are done fading, destroy the fade object.
if ((!_fade and image_alpha &lt;= 0) or (_fade and image_alpha &gt;= 1)) {
    if(instance_exists(_event)) {
        _event._events_active--;
    }
    // Create total darkness if fading out.
    if (_fade) 
    {
        oBlack.alpha = 1;
        oBlack.alphaGoal = 1;
    }
    instance_destroy();
}

if (instance_exists(_event)) {
    if (_event._skipping) {
        // Create total darkness if fading out.
        if (_fade) 
        {
            oBlack.alpha = 1;
            oBlack.alphaGoal = 1;
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
// was scr_event_fade_draw
draw_sprite_ext(s1x1, 0, floor(view_xview[0]) - 4, floor(view_yview[0]) - 4, view_wview + 4, view_hview + 4, 0, _fadeColor, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

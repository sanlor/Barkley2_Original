<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
sub = 0;

instance_create(0, 0, oMiniBabbyGuy);
instance_create(0, 0, oMiniBabby);
instance_create(0, 0, oMiniBabbyRock);
instance_create(0, 0, oMiniBabbySnake);
instance_create(0, 0, oMiniBabbySock);
instance_create(0, 0, oMiniBabbyTree);
instance_create(0, 0, oMiniBabbyBush);

audio_play_sound_ext("mus_babby", 10, 1);

active = 0;
time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop all
audio_stop_sound_ext("mus_babby");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
if (active == 0)
{
    if (MiniKeyPress("action")) active = 1;
}
else if (active == 1) 
{
    time += dt() / 9.4; //was 10, want to make 40
}
else
{
    if (MiniKeyPress("action"))
    {
        global.miniReturn = floor(time);
        Minigame("stop"); 
        with (oMiniBabbyTree) instance_destroy();
        with (oMiniBabbyBush) instance_destroy();
        with (oMiniBabbySock) instance_destroy();
        with (oMiniBabbyRock) instance_destroy();
        with (oMiniBabbyBird) instance_destroy();
        with (oMiniBabbyGuy) instance_destroy();
        with (oMiniBabby) instance_destroy();
        with (oMiniBabbySnake) instance_destroy();
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
sub += dt();
if (sub mod 14 &lt; 7) sss = 1; else sss = 0;
scl = global.miniScale * 2;
vx = global.miniX; //view_xview[0];
vy = global.miniY; //view_yview[0];
mx = (384 / 4) * scl;
my = (240 / 4) * scl;
draw_clear(c_black);
if (active == 0)
{
    if (sss == 1) draw_sprite_ext(sMiniBabbyShekel, 0, vx, vy, scl, scl, 0, c_white, 1);
}
else
{
    draw_sprite_ext(sMiniBabbyShekel, 1, vx, vy, scl, scl, 0, c_white, 1);
    scr_font(global.fn_babby, c_white); //38
    draw_text_transformed(vx + (38 * scl), vy + scl, string(floor(time)), scl, scl, 0);
}
draw_sprite_ext(sMiniBabbyDirt, 0, vx, vy + my - (12 * scl), scl, scl, 0, c_white, 1);
draw_sprite_ext(sMiniBabbyDirt, 0, vx, vy + my + (12 * scl), scl, scl, 0, c_white, 1);

draw_sprite_ext(sMiniBabbyText, 0, vx + ((1) * scl), vy + (((240 / 2) - 6) * scl), scl, scl, 0, c_white, 1);
//draw_sprite_ext(sMiniBabbyText, 0, vx + (((384 / 2) - 50) * scl), vy + (((240 / 2) - 24) * scl), scl, scl, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

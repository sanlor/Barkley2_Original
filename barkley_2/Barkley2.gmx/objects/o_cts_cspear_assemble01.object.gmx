<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cyberspearPieces01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Image //
image_index = irandom(5);
image_speed = 0;

// Orbit //
dir = 90;
spd = 0;
len = 0;
xSpot = x;
ySpot = y;
assemble = false;
timer_begin = 30;
timer_assemble = 0;
orbit = false;

// The final piece will make it all happen //
if instance_number(o_cts_cspear_assemble01) &gt;= 4 then timer_assemble = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
if paused() exit;

// Rise //
if timer_begin &gt; 0 then
    {
    // Tick down //
    timer_begin -= dt();
    
    // Move into position //
    if len &lt; 80 then len += 30 * dt_sec();
    
    // Event //
    if timer_begin &lt;= 0 then 
        {
        y += len;
        orbit = true;
        xSpot = x;
        ySpot = y;        
        }
    }

// Orbit //
if orbit = true and spd &lt; 2 then spd += 0.5 * dt_sec();
x = xSpot + lengthdir_x(len, dir);
y = ySpot + lengthdir_y(len, dir);
dir += spd;

// Assemble //
if assemble = true then
    {
    // Spin faster //
    spd += 0.5 * dt_sec();
    
    // Close in //
    if len &gt; 0 then len -= 15 * dt_sec();
    }
    
// Begin assembly //
if timer_assemble &gt; 0 then
    {
    // Tick down //
    timer_assemble -= dt();
    
    // Event //
    if timer_assemble &lt;= 0 then
        {
        with o_cts_cspear_assemble01
            {
            assemble = true;
            orbit = false;            
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2100000</depth>
  <persistent>0</persistent>
  <parentName>o_debugMode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>COLUMN_JERKIN_X = 10;
COLUMN_JERKIN_Y = 45;
COLUMN_JERKINADD_X = 200;
COLUMN_JERKINSET_X = 240;

COLUMN_CHIP_X = 300;
COLUMN_CHIP_Y = 45;
COLUMN_CHIPADD_X = 490;
COLUMN_CHIPSET_X = 530;

COLUMN_STATS_X = 600;

list_jerkins = ds_list_create();
var key = ds_map_find_first(global.jerkins_db);
for (var i = 0; i &lt; ds_map_size(global.jerkins_db); i++) {
    ds_list_add(list_jerkins, key);
    key = ds_map_find_next(global.jerkins_db, key);
}

// Variables for button being hovered
button_hovered = false;
button_add = false;
button_jerkin = NULL_STRING;
button_chip = NULL_STRING;
button_n = 0;
button_column = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cx = o_curs.x + view_xview; // Cursor X in-game
var cy = o_curs.y + view_yview; // Cursor Y in-game
var csx = o_curs.x * global.screen_scale; // Cursor X on-screen
var csy = o_curs.y * global.screen_scale; // Cursor Y on-screen

// Determine which button is being hovered
button_hovered = false;
button_add = false;

// Jerkin buttons
if (csx &gt;= COLUMN_JERKINADD_X &amp;&amp; csx &lt; COLUMN_JERKINSET_X + 50 &amp;&amp;
    csy &gt;= COLUMN_JERKIN_Y &amp;&amp; csy &lt; COLUMN_JERKIN_Y + 12*ds_list_size(list_jerkins)) {
    
    n = ((csy - COLUMN_JERKIN_Y) / 12) div 1;
    button_column = 0;
    button_jerkin = ds_list_find_value(list_jerkins, n);
    if (button_jerkin != NULL_STRING) {
        button_hovered = true;
        if (csx &lt; COLUMN_JERKINSET_X) {
            button_add = true;
        }
    }
}

if (mouse_check_button_pressed(mb_left)) {
    if (button_hovered) {
        // Do a thing
        audio_play_sound_ext("sn_talk1", 100, false);
        if (button_column == 0) {
            // Jerkin
            if (button_add) {
                Jerkin("gain", button_jerkin);
            }
            else {
                Jerkin("equip", button_jerkin);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

// Draw title
draw_set_font(global.fn_1)
draw_text(2, 2,  "EQUIPMENT");

var i, s;

// Draw headers
draw_set_font(global.fn_1);    
draw_text(COLUMN_JERKIN_X, 25, "JERKIN");

draw_set_font(global.fn_2);

// Jerkins menu
for (var i = 0; i &lt; ds_list_size(list_jerkins); i++) {
    s = ds_list_find_value(list_jerkins, i);

    draw_set_color(c_white);
    draw_text(COLUMN_JERKIN_X, COLUMN_JERKIN_Y + 12*i,  string_upper(s));
    
    if (Jerkin("has", s)) draw_set_colour(c_gray);
    else draw_set_colour(c_white);
    draw_text(COLUMN_JERKINADD_X, COLUMN_JERKIN_Y + 12*i,  "ADD");
    
    if (Jerkin("has", s)) 
    {
        if (Jerkin("current") == s) draw_set_colour(c_green);
        else draw_set_colour(c_white); 
    }
    else draw_set_colour(c_gray); 
    draw_text(COLUMN_JERKINSET_X, COLUMN_JERKIN_Y + 12*i,  "EQUIP");
}

// Show effective stats
draw_set_color(c_white);
draw_set_font(global.fn_1);    
draw_text(COLUMN_STATS_X, 25, "EFFECTIVE STATS");


draw_set_font(global.fn_2);
var stats = scr_savedata_get("player.stats.effective")
var key = ds_map_find_first(stats);
var _y = COLUMN_JERKIN_Y;
for (var i = 0; i &lt; ds_map_size(stats); i++) {
    draw_set_color(c_white);
    var stat = stats[? key];
    draw_text(COLUMN_STATS_X, COLUMN_JERKIN_Y + 12*i, key);
    draw_text(COLUMN_STATS_X + 120, COLUMN_JERKIN_Y + 12*i, string(stat));

    // Check if jerkin stats contains key
    if (Jerkin("current") != NULL_STRING) {
        var currentJerkin = Jerkin("data");
        if (ds_map_exists(currentJerkin, "stats")) {
            var jStats = currentJerkin[? "stats"];
            if (ds_map_exists(jStats, key)) {
                var sMod = jStats[? key];
                if (string_char_at(sMod, 1) == '-')
                    draw_set_color(c_red);
                else
                    draw_set_color(c_green);
                draw_text(COLUMN_STATS_X + 160, COLUMN_JERKIN_Y + 12*i, sMod);
            }
        }
    }
    
    key = ds_map_find_next(stats, key);    
}


// Draw hovered button (if any)
if (button_hovered) 
{
    draw_set_colour(c_red);
    if (button_column == 0) 
    {
        if (button_add) draw_text(COLUMN_JERKINADD_X, COLUMN_JERKIN_Y + 12 * n, "ADD");
        else draw_text(COLUMN_JERKINSET_X, COLUMN_JERKIN_Y + 12 * n, "EQUIP");
    }
}


draw_set_color(c_white);
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_enemy_crabotron_photonarea</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CombatAttackEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

knockback_type = KNOCKBACKTYPE_NONE;
scr_entity_setZHitbox(0, 10);
gravity_z = 0;

scr_entity_animation_setSpeed("default", 3);
scr_entity_animation_setRange("default", 0, 2);

scr_entity_setShadowVisible(false);
dny = 256;

// Collisions
scr_entity_setMovementCollisionShape_circle(20);
scr_entity_setCollisionType(COLLISION_ONLY_SOLID);

// Life time
lifetime = 150;
lifetime_start = lifetime;

// Attack refresh
atkrefresh = 0;
atkrefresh_interval = 2; 

// Sparks
spark_timer = 0;
spark_interval = 0.5;

// Sounds
soundCreate = "crab_photon_land";
soundLooping = "crab_photon_looping";

// Max scale
scale = .25;
scaleMax = 1;

image_xscale = scale;
image_yscale = scale;

scr_entity_makeSoundEmitter();
audio_play_sound_on_actor(self.id, scr_soundbank_pickSound(soundCreate), false, 10);
audio_play_sound_on_actor(self.id, scr_soundbank_pickSound(soundLooping), true, 10);

var dist = 0;
repeat(8) {
    var dir = random(360);
    var n = instance_create(x + lengthdir_x(dist, dir), y + lengthdir_y(dist, dir), o_effect_generic_animateOnce);
    n.z = z;
    with (n) {
        sprite_index = s_enemy_crabotron_photonblast;
        scr_entity_animation_setSpeed(ANIMATION_DEFAULT, .4 + random(.5));
    }
    dist += 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if paused() exit;

// Attack refresh
atkrefresh += dt();
while (atkrefresh &gt;= atkrefresh_interval) {
    atkrefresh -= atkrefresh_interval;
    ds_list_clear(hit_list);
}

// Sparks
spark_timer += dt();
while (spark_timer &gt;= spark_interval) {
    var dir = random(360);
    var dist = random(24);
    var n = instance_create(x + lengthdir_x(dist, dir), y + lengthdir_y(dist, dir), o_effect_generic_animateOnce);
    n.z = z;
    with (n) {
        sprite_index = s_enemy_crabotron_photonarea_spark;
        scr_entity_animation_setSpeed(ANIMATION_DEFAULT, .8 + random(.5));
    }
    spark_timer -= spark_interval;
}

// When hitting a wall, bounce
if (scr_entity_movement_checkHitWall()) {
    var vec1 = scr_entity_movement_getHitWallVector();
    var vec2 = vector_reflection(-move_x, -move_y, vec1[0], vec1[1]);
    scr_entity_setMoveXY(vec2[0], vec2[1]);
    vec1 = 0;
    vec2 = 0;
}

// Scale upwards
if (scale &lt; scaleMax) {
    scale = min(scale + dt()*0.1, scaleMax);
    // Update movement collision shape to match new size
    var shape = scr_entity_getMovementCollisionShape(self.id);
    shape[@ 4] = 16 * scale; 
}
image_xscale = scale;
image_yscale = scale;

// Lifetime
lifetime -= dt();
if (lifetime &lt;= 0) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Draw circle
var alpha = .25 + (lifetime / lifetime_start) * .75;
draw_sprite_ext(sprite_index, scr_entity_animation_getImage("default"), dx, dy, image_xscale, image_yscale, 0, c_ltblue, alpha);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

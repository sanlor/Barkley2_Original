<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Phase setup //
text_finish = "You don't need a reason to help people.";
text_finish_alpha = 0;
text_finish_time = 70;
text_finish_delay = 1; // seconds until finish text fades in after text box
phase[0] = 25; // 50
phase[1] = 1;
phase[2] = 0;

// Phase skipping //
phase_skip_time = 0;
phase_skip_to = 0;
phase_skip = 0;

// Textbox setup //
textbox_written = "";
textbox_goal = "";
textbox_pause = 0;
textbox_position = 0;
textbox_skip = false;  

// Alpha setup //
alpha_textbox = 0;
alpha_textbox_goal = 0;
alpha_textbox_timer = 0;
alpha_event = 0;
alpha_event_goal = 1;
alpha_text = 0;
alpha_text_goal = 0;

if (audio_is_playing_ext("mus_charcreate")) audio_stop_sound_ext("mus_charcreate");

o_cc_wizard.alpha_goal = 0;
timer_transition = 0;

//TODO: make this look NOICE
text = "And so it begins, " +string(o_cc_data.character_name)+ "...#The promise has been made.";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause //
//if paused then exit;

// Phases //
if phase[0] &gt; 0 then
    {
    // Tick down //
    phase[0] -= dt();
    
    // Event //
    if phase[0] &lt;= 0 then
        {
        // Show his farewell //
        if phase[1] = 1 then 
            {
            alpha_text_goal = 1;
            scr_cc_textbox(text);
            }

        // Adios //
        if phase[1] = 2 then 
            {
            alpha_textbox_goal = 0;
            timer_transition = 35 + text_finish_time; // 35
            text_finish_alpha = 0.01;
            phase[2] = 45 + text_finish_time;
            }
        }
    } 
    
// Transition //
if timer_transition &gt; 0 then
    {
    // Tick down //
    timer_transition -= dt();
    
     // Event //
     if timer_transition &lt;= 0 then instance_create(0, 0, o_cc_transition);
     }
    
// End of this event //
if phase[2] &gt; 0 then
    {
    // Tick down //
    phase[2] -= dt();
        
    // End //
    if phase[2] &lt;= 0 then {
        Game("new from cc");
      }
    }
    
// Skip text with button //
scr_cc_textbox_skip();

// Type it //
scr_cc_textbox_type();

// Move to a next phase //
scr_cc_phase_skip_process();
    
// Alpha goals //
if alpha_textbox_timer &gt; 0 then alpha_textbox_timer -= dt();
else
    {
    if alpha_textbox &lt; alpha_textbox_goal then alpha_textbox += 0.1;
    if alpha_textbox &gt; alpha_textbox_goal then alpha_textbox -= 0.1;
    }

if phase[1] = 1 and phase[0] &lt; 16 then
    {
    if alpha_event &lt; alpha_event_goal then alpha_event += 0.01;
    }
if alpha_event &gt; alpha_event_goal then alpha_event -= 0.01;

// Text //
if alpha_text &lt; alpha_text_goal then alpha_text += 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw backdrop //
draw_sprite_ext(s1x1, 0, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, 0, c_black, 1);

scr_font(global.fn_1, c_white, 1, 1);
if (text_finish_alpha != 0) 
{
    text_finish_delay = Goto(text_finish_delay, 0, dt_sec());
    if (text_finish_delay == 0) text_finish_alpha = Goto(text_finish_alpha, 1, dt_sec() / 3);
}
draw_set_alpha(text_finish_alpha);
draw_text(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, text_finish);
draw_set_alpha(1);
scr_font(global.fn_1, c_white, 0, 0);

// Draw textboxes //
scr_cc_draw_textbox();

// Draw message

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

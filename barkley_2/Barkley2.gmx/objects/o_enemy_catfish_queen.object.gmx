<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCatfishQueen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemygroup_catfish</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Collision stuff //
scr_entity_setMovementCollisionShape_circle(30);
scr_entity_setShadowCircle(60);
combatActor_setRenderSurfSize(256);

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

// Enemy configurations
scr_entity_setZHitbox(-10, 100);
shield_equipped = false;

///that function fills in the monster's default resistances
///based on its monster type.

// Ailment totem coordinates //
ailmentTotem_define(self.id, -5, 60, 50, 90);

count = 0;

deathSound = "catfish_mount_death";
damageSound = "catfish_mount_grunt";

// Prepare variables //
var conf, attacks, attack, guard;

// Movement
var movement = scr_AI_movement_init(scr_AI_movementType_hopping);
movement[? "turnSpeed"] = 1000;
movement[? "walkSpdMod"] = 0.75;
movement[? "walkSpdModRand"] = 0.5;
movement[? "jumpTime"] = 4;
movement[? "jumpTimeRand"] = 3;
movement[? "jumpAngle"] = 30;
movement[? "jumpGravity"] = 7;
movement[? "jumpWait"] = 0;
movement[? "soundHop"] = "catfish_mount_jump";
movement[? "soundLand"] = "catfish_mount_land";
movement[? "eventOnLand"] = 2;

guard = scr_AI_addPassiveState(scr_AI_passive_automaticAggro);

// Active state
ai_approach = scr_AI_addActiveState(scr_AI_active_catfish_jumpSideToSide);
ai_approach[? "walkScript"] = movement;

guard[? "sndAlertSound"] = "catfish_mount_alert";

// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Minion spawning
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_catfishQueen_spawnMinions);
attack[? "action"] = action;

attack[? "distMin"] = 0;
attack[? "distMax"] = 999;
attack[? "coneAngleMax"] = 360;
attack[? "cooldownTime"] = 220;
attack[? "cooldownTimeRnd"] = 20;
attack[? "cooldownStart"] = 30;
attack[? "rechargeTime"] = 5;
attack[? "rechargeTimeRnd"] = 0;
attack[? "predicate"] = predicate_AI_catfishQueen_max3MinionsLeft;

enemySpawnAttack = attack;

// Zauber - Small Bubbles
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_zauber);
attack[? "action"] = action;

action[? "zauber"] = zauber_enemy_catfishQueen_bubblesSmall;
action[? "targetSpd"] = 100;
action[? "fallthrough"] = true;
action[? "chargeUntil"] = 1;

attack[? "distMin"] = 0;
attack[? "distMax"] = 999;
attack[? "coneAngleMax"] = 360;
attack[? "cooldownTime"] = 70;
attack[? "cooldownTimeRnd"] = 30;
attack[? "rechargeTime"] = 50;
attack[? "rechargeTimeRnd"] = 0;

// Zauber - Large Bubbles
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_zauber);
attack[? "action"] = action;

action[? "zauber"] = zauber_enemy_catfishQueen_bubblesLarge;
action[? "targetSpd"] = 100;
action[? "fallthrough"] = true;
action[? "chargeUntil"] = 2;

attack[? "distMin"] = 0;
attack[? "distMax"] = 999;
attack[? "coneAngleMax"] = 360;
attack[? "cooldownTime"] = 110;
attack[? "cooldownTimeRnd"] = 40;
attack[? "rechargeTime"] = 50;
attack[? "rechargeTimeRnd"] = 0;

//TEST BOSS ALIGNMENT
alignment_ethical = ALIGN_ETHICAL_CHAOTIC;
alignment_moral = ALIGN_MORAL_GOOD;

// Does not wade
statusEffect_immunity_add(statusEffect_wading);

// Collision type //
collisionPush = ACTOR_COLLISIONPUSH_NONE;
collisionPushDist = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation
scr_entity_animation_define("normal", sCatfishQueen, 0, 4, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("intro", sCatfishQueen, 5, 9, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("telegraph", sCatfishQueen, 14, 8, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("bubbleDown", sCatfishQueen, 22, 5, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("bubbleUp", sCatfishQueen, 27, 6, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("summon", sCatfishQueen, 33, 8, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("zauber_cast", sCatfishQueen, 41, 10, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("slap", sCatfishQueen, 54, 7, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("diremode", sCatfishQueen, 61, 13, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("direpuke", sCatfishQueen, 74, 16, ANIMATION_DEFAULT_SPEED);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherited //
event_inherited();

// Pause //
if paused() exit;

// Speed up cooldown of enemy spawn if no minions are left
if (instance_number(o_enemygroup_catfish) &lt;= 1) {
    enemySpawnAttack[? "cooldownCurrent"] = max(0, enemySpawnAttack[? "cooldownCurrent"] - dt());
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Boss vanquished
Quest("bossCatfish", 1);
//obj = instance_nearest(x, y, oBridge);
with (oBridge) event_user(1);
Misc("music", "mus_blankTEMP", 1);
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Water splashes

repeat(2) {
    var fx = scr_fx_simple(x + 11 + random(22), y + 20 - random(16), base_z, s_effect_splash_medium);
    with fx scr_entity_animation_setSpeed(ANIMATION_DEFAULT, 1 + random(1));
}
repeat(2) {
    var fx = scr_fx_simple(x - 11 + random(22), y + 20 - random(16), base_z, s_effect_splash_medium);
    with fx scr_entity_animation_setSpeed(ANIMATION_DEFAULT, 1 + random(1));
}
repeat(2) {
    var fx = scr_fx_simple(x - 33 + random(22), y + 20 - random(16), base_z, s_effect_splash_medium);
    with fx scr_entity_animation_setSpeed(ANIMATION_DEFAULT, 1 + random(1));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (a_attackName == "zauber") {
    var spr = scr_entity_animation_getSpriteIndex("zauber_cast");
    var img = scr_entity_animation_getImage("zauber_cast");
} else {
    var spr = scr_entity_animation_getSpriteIndex("normal");
    var img = scr_entity_animation_getImage("normal");
}

draw_sprite(spr, img, dx, dy);

combatActor_draw_post();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>80,77</point>
    <point>80,80</point>
  </PhysicsShapePoints>
</object>

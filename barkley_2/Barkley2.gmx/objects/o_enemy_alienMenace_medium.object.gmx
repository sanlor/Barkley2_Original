<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAlienMenaceMediumMap</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemygroup_alienMenace</parentName>
  <maskName>mask_disk_40by32</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////you get all the default variables from EnemyCombatActor
event_inherited();
scr_entity_setShadowCircle(24);

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

// Enemy configurations
scr_entity_setZHitbox(0, 32);
ailmentTotem_define(id, 0, -4, 40, 0);
anim = 0;
animSpd = 0.5;
animStrike = 0;

event_hook_on_hit = 15;

deathSound = "brainmenace_death";
damageSound = "brainmenace_scream";

// Movement
var movement = scr_AI_movement_init(scr_AI_movementType_standard);
movement[? "animWalkSpd"] = 0.16;

// Passive and active states
var ark, conf, guard;
guard = scr_AI_addPassiveState(scr_AI_passive_guard);
guard[? "sndAlertSound"] = "brainmenace_scream";
conf = scr_AI_addActiveState(scr_AI_active_approach);
conf[? "walkScript"] = movement;


// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Jump smash
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_jumpsmash);
attack[? "action"] = action; 

AI_util_action_setDamage(action, 10, 0.25, 1, 0, 30, 200, STAGGER_HARDNESS_HARD);
action[? "beforeTime"] = 5;
action[? "duringTimeBase"] = 4;
action[? "duringTimePerPixel"] = 0.03;
action[? "afterTime"] = 20;
action[? "attackName"] = "leapsmash";

action[? "soundReady"] = "brainmenace_leap_prepare";
action[? "soundJump"] = "brainmenace_leap_jump";
action[? "soundLand"] = "brainmenace_leap_smash";

attack[? "distMax"] = 240;
attack[? "cooldownTime"] = 60; 
attack[? "cooldownTimeRnd"] = 40;

// Slash
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_slash);
attack[? "action"] = action;
conf[? "stateAfterStop"] = action;

AI_util_action_setDamage(action, 5, 1, 0, 0, 50, 200, STAGGER_HARDNESS_MEDIUM);
action[? "mask"] = sprite_index;
action[? "range"] = 0;
action[? "beforeTime"] = 3;
action[? "damageTime"] = 2.5;
action[? "afterTime"] = 5;
action[? "beforeSpeed"] = 0;
action[? "damageSpeed"] = 1.75;
action[? "afterSpeed"] = 0;
action[? "afterTime"] = 5;
action[? "turnSpeed"] = 4;
action[? "mask"] = mask_crescent_40_20;
action[? "attackName"] = "tailwhip";
action[? "sndAttackWarn"] = "brainmenace_attack";
action[? "sndAttackStrike"] = "brainmenace_slash";

attack[? "distMax"] = 60;
attack[? "cooldownTime"] = 4;
attack[? "cooldownTimeRnd"] = 6;
attack[? "rechargeTime"] = 0;
attack[? "rechargeTimeRnd"] = 0;

scr_entity_animation_new("default");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create animations
scr_entity_animation_define("idle", s_alienMenace_med, 0, 1, 0);
scr_entity_animation_define("stagger", s_alienMenace_med, 1, 1, 0);
scr_entity_animation_define_ext("walk", s_alienMenace_med, 2, 5, 0.2, 0.05, 1, 0);

scr_entity_animation_define("tailwhip_before", s_alienMenace_med, 7, 4, 0);
scr_entity_animation_define("tailwhip_damage", s_alienMenace_med, 12, 3, 0);
scr_entity_animation_define("tailwhip_after",  s_alienMenace_med, 15, 3, 0);

scr_entity_animation_define("leapsmash_before", s_alienMenace_med, 18, 3, 0);
scr_entity_animation_define("leapsmash_damage", s_alienMenace_med, 21, 4, 0);
scr_entity_animation_define("leapsmash_after",  s_alienMenace_med, 25, 13, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var atk = argument_attackId;

_obj = instance_create(x,y,o_FX);
_obj.sprite_index = s_AlienBlood_small;
_obj.image_speed = 0.25;
_obj.image_angle = choose(0,90,180,270);
_obj.x = atk.x;
_obj.y = atk.y;
_obj.depth = -99999;

event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _obj,_reps;

_obj = instance_create(x,y,o_FX);
_obj.sprite_index = s_AlienBlood_big;
_obj.image_speed = 0.25;
_obj.image_angle = choose(0,90,180,270);

_reps = 0;
repeat(12)
{
    _obj = instance_create(x-32+random(64),y-32+random(64),o_FX);
    _obj.z = z + random(24);
    _obj.sprite_index = s_AlienBlood_small;
    _obj.image_speed = 0.15 + random(0.3);
    _obj.image_angle = choose(0,90,180,270);
    _reps +=1;
    _obj.delay = _reps*.5;
}

_reps = 0;
repeat(5)
{
    _obj = instance_create(x-32+random(64),y-32+random(64),o_FX);
    _obj.z = z + random(8);
    _obj.sprite_index = s_AlienBlood_big;
    _obj.image_speed = 0.15 + random(0.15);
    _obj.image_angle = choose(0,90,180,270);
    _reps +=1;
    _obj.delay = _reps*1;
}
   
repeat(7 + irandom(4))
{
    _obj = instance_create(x + 16 - random(32),y + 16 - random(32),o_gibs);
    _obj.z = z + 8 + random(16);
    _obj.sprite_index = s_alienMenace_med_gibs;
    _obj.bloodburst = s_AlienBlood_small;
    _obj.image_index = irandom(12);
    with _obj scr_entity_setShadowSprite(s_alienMenace_med_gibs, image_index, 0, 0);
}
/*
if(random(1)&gt;0.2)
{
    _obj = instance_create(x,y+8,o_gibs);
    _obj.sprite_index = s_alienMenace_med_gibs;
    _obj.bloodburst = s_AlienBlood_small;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(0,2,7,9,10);
}

if(random(1)&gt;0.2)
{
    _obj = instance_create(x-16,y,o_gibs);
    _obj.sprite_index = s_alienMenace_med_gibs;
    _obj.bloodburst = s_AlienBlood_small;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(1,8,4,10);
}

if(random(1)&gt;0.2)
{
    _obj = instance_create(x+16,y,o_gibs);
    _obj.sprite_index = s_alienMenace_med_gibs;
    _obj.bloodburst = s_AlienBlood_small;
    _obj.shadow_radius = 5;
    _obj.image_index = choose(5,6,9,12);
}
*/

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Get quadrant enemy is facing towarsd
var quadrant = ((faceDir+360) mod 360) div 90;

// Set animation shifts
if (quadrant == 2 or quadrant == 3) {
    // Facing downwards
    scr_entity_animation_setShift("idle", 0);
    scr_entity_animation_setShift("walk", 0);
    scr_entity_animation_setShift("stagger", 0);
    scr_entity_animation_setShift("tailwhip_before", 0);
    scr_entity_animation_setShift("tailwhip_damage", 0);
    scr_entity_animation_setShift("tailwhip_after", 0);
    scr_entity_animation_setShift("leapsmash_before", 0);
    scr_entity_animation_setShift("leapsmash_damage", 0);
    scr_entity_animation_setShift("leapsmash_after", 0);
}
else {
    // Facing upwards
    scr_entity_animation_setShift("idle", 37);
    scr_entity_animation_setShift("walk", 37);
    scr_entity_animation_setShift("stagger", 37);
    scr_entity_animation_setShift("tailwhip_before", 37);
    scr_entity_animation_setShift("tailwhip_damage", 37);
    scr_entity_animation_setShift("tailwhip_after", 37);
    scr_entity_animation_setShift("leapsmash_before", 37);
    scr_entity_animation_setShift("leapsmash_damage", 37);
    scr_entity_animation_setShift("leapsmash_after", 37);
}

var sprite = s_alienMenace_med;
var image;
if(a_attackName == "stagger")
{
    image = scr_entity_animation_getImage("stagger");
}
else
{
    if(a_walking)
    {
        image = scr_entity_animation_getImage("walk");
    }
    else
    {
        image = scr_entity_animation_getImage("idle");
    }
}

if (a_attackName == "leapsmash") {
    switch(I_atk_jump_state)
    {
        case "before":
            image = scr_entity_animation_imageByRatio("leapsmash_before", I_atk_jump_time, I_atk_jump_timebefore);
            break;
            
        case "jump":
            image = scr_entity_animation_imageByRatio("leapsmash_damage", I_atk_jump_time, I_atk_jump_timetotal);
            break;
        
        case "land":
            image = scr_entity_animation_imageByRatio("leapsmash_after", I_atk_jump_time, I_atk_jump_timeafter);
            break;
    }
}

if (a_attackName == "tailwhip") {
    switch(a_attackState)
    {
        case "before":
            image = scr_entity_animation_imageByRatio("tailwhip_before", I_atk_slsh_timer, I_atk_slsh_intBefore);
            break;
            
        case "damage":
            image = scr_entity_animation_imageByRatio("tailwhip_damage", I_atk_slsh_timer, I_atk_slsh_intDamage);
            break;
        
        case "after":
            image = scr_entity_animation_imageByRatio("tailwhip_after", I_atk_slsh_timer, I_atk_slsh_intAfter);
            break;
    }
}

switch(quadrant)
{
    case 0: _hScale = -1; break;
    case 1: _hScale = 1; break;
    case 2: _hScale = -1; break;
    case 3: _hScale = 1; break;
}

DrawStripExt(sprite,floor(image),dx,dy,_hScale,1,0,c_white,1);

combatActor_draw_post();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>36,44</point>
    <point>36,36</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sControlVariable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000002</depth>
  <persistent>0</persistent>
  <parentName>o_effect_smog</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE
event_inherited();
basCol = make_color_rgb(190 - 20, 255 - 40, 160 - 20);
basColR = color_get_red(basCol);
basColG = color_get_green(basCol);
basColB = color_get_blue(basCol);

// Deal damage every X seconds via nerve gas //
timer_damage = 20;
damage_amount = 3;
fog_intensity = 10;
fogAlpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inheritance //
event_inherited();

// Pause //
if paused() exit;

if (instance_exists(o_runningMantis01) == 0)
{
    if (global.battleMode)
    {
        global.battleMode = 0;
        global.gunPacify = instance_exists(o_room_pacify);
        if (global.gunPacify) scr_player_setGunHolstered(true);
    }
    fogAlpha = clamp(fogAlpha - (dt_sec() / 4), 0, 1);
    exit;
}

// Deal damage //
if timer_damage &gt; 0 then
    {
    // Tick down //
    timer_damage -= dt();
    
    // Event //
    if timer_damage &lt;= 0 then
        {
        // Deal damage //
        if instance_exists(o_hoopz) then 
            {
            var dmgAmt = damage_amount / 2;
            Stat("hp", "-" + string(dmgAmt));
            //scr_stats_setCurrentStat(o_hoopz, STAT_CURRENT_HP, (scr_stats_getCurrentStat(o_hoopz, STAT_CURRENT_HP) - damage_amount));
            scr_stats_createDamageIndicators(o_hoopz,dmgAmt,DAMAGETYPE_NORMAL,c_red);
            }

        // Increase next damage and fog intensity //
        if damage_amount &lt; 10 then
            {
            damage_amount += 1;
            fogAlpha = clamp(fogAlpha + 0.1, 0, 1);
            }
        
        // Reset timer //
        timer_damage = 30;               
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Adios //
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
textTitle = "ENJOY YOUR MEAL";
textTop = textTitle;

cRed = make_color_rgb(255 - 16, 16, 16);
cYellow = make_color_rgb(255 - 16, 255 - 16, 16);
cBlue = make_color_rgb(16, 16, 255 - 16);

state = 0;
numbers = 4;
numberSelect = 0;
for (i = 0; i &lt; numbers; i += 1)
{
    number[i] = 0;
}

cost = 0;
percent = 0;
tip = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keys
if (MiniKeyPress("cancel")) { Minigame("stop"); instance_destroy(); }

if (state &lt;= 1)
{
    if (MiniKeyPress("left"))
    {
        numberSelect -= 1;
        if (numberSelect &lt; 0) numberSelect = numbers - 1;
    }
    if (MiniKeyPress("right"))
    {
        numberSelect += 1;
        if (numberSelect &gt;= numbers) numberSelect = 0;
    }
    if (MiniKeyPress("up"))
    {
        number[numberSelect] += 1;
        if (number[numberSelect] &gt; 9) number[numberSelect] = 0;
    }
    if (MiniKeyPress("down"))
    {
        number[numberSelect] -= 1;
        if (number[numberSelect] &lt; 0) number[numberSelect] = 9;
    }
    
    if (MiniKeyPress("action"))
    {
        if (state == 0)
        {
            //textTop = "ENTER TIP PERCENTAGE";
            cost = real(number[3] + (number[2] * 10) + (number[1] * 100) + (number[0] * 1000));
            numbers = 2;
            numberSelect = 0;
            number[0] = 1;
            number[1] = 0;
        }
        else if (state == 1)
        {
            //textTop = "LEAVE A TIP";
            audio_play_sound_ext("sn_ptonyright", 10, 0);
            percent = real(number[1] + (number[0] * 10));
            tip = cost * (percent / 100);
        }
        state += 1;
    }
}
else if (state == 2)
{
    if (MiniKeyPress("action"))
    {
        //room_goto(rMiniSelect);
        instance_destroy();
        instance_create(0, 0, oMini10Select);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
draw_set_color(c_black); draw_rectangle(global.miniX, global.miniY, global.miniX + (385 * global.miniScale), global.miniY + (241 * global.miniScale), 0);
ds = global.miniScale;

//Blue border
draw_set_color(cBlue);
draw_rectangle(global.miniX, global.miniY, global.miniX + global.miniWidthS, global.miniY + (17 * global.miniScale), 0);

scr_font(CourierNew12, c_white, 1, 0);
draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, textTop, global.miniScale, global.miniScale, 0);
scr_font(CourierNew12, c_white, 0, 0);

//Numbers
dx2 = global.miniX + (global.miniWidthS / 2);
dx = global.miniX + (global.miniWidthS / 2) - ((((numbers / 2) - 0.5) * 32) * global.miniScale);
dy = global.miniY + (global.miniHeightS / 2);
scr_font(CourierNew24b, c_white, 1, 1);
if (state &lt;= 1)
{
    if (state == 0) draw_text_transformed(dx2, dy - (64 * global.miniScale), "ENTER COST", global.miniScale, global.miniScale, 0);
    else draw_text_transformed(dx2, dy - (64 * global.miniScale), "ENTER TIP PERCENT", global.miniScale, global.miniScale, 0);
    for (i = 0; i &lt; numbers; i += 1)
    {
        draw_set_color(c_white);

        draw_text_transformed(dx - (2 * global.miniScale), dy - (24 * global.miniScale), "&lt;", global.miniScale, global.miniScale, -90);
        draw_text_transformed(dx - (2 * global.miniScale), dy + (24 * global.miniScale), "&gt;", global.miniScale, global.miniScale, -90);
    
        if (numberSelect == i) draw_set_color(cRed); else draw_set_color(c_white);
        draw_text_transformed(dx, dy, number[i], global.miniScale, global.miniScale, 0);
        dx += 32 * global.miniScale;
    }
}
else
{
    draw_text_transformed(dx2, dy - (64 * global.miniScale), "LEAVE A TIP OF", global.miniScale, global.miniScale, 0);
    draw_text_transformed(dx2, dy + (0 * global.miniScale), string(round(tip)), global.miniScale, global.miniScale, 0);
}

scr_font(CourierNew12, c_white, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>120,100</point>
    <point>120,120</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cts_hoopz_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>InteractiveActor</parentName>
  <maskName>mask_hoopz</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
_automatic_animation = true;

//Fixes ticket 1155
if (instance_exists(o_hoopz))
{
    var _shd;
    with (o_hoopz) _shd = scr_entity_getMovementCollisionShapeRadius();
    shadow_visible = o_hoopz.shadow_visible;
    shadow_radius = _shd;
}

//var didSet = 0;
spd = ANIMATION_DEFAULT_SPEED / 2;
if (instance_exists(o_hoopz))
{
    if (BodySwap() == "matthias")
    {
        scr_entity_set_look_walk_mirror(s_matthias_look, s_matthias_idle_up, s_matthias_idle_down);
        scr_entity_animation_define("stand_UP", s_matthias_look, 1, 1, 0);
    }
    else if (BodySwap() == "governor")
    {
        scr_entity_set_look_walk_mirror(s_governorLook, s_governorNE, s_governorSE);
        scr_entity_animation_define("stand_UP", s_governorLook, 1, 1, 0);
    }
    else if (BodySwap() == "untamo")
    {
        scr_entity_set_look_walk_mirror(s_mg_vrw_player, s_mg_vrw_player, s_mg_vrw_player);
        scr_entity_animation_define("stand_UP", s_mg_vrw_player, 0, 1, 0);
        shadow_visible = false;
    }
    else if (BodySwap() == "diaper")
    {
        scr_entity_animation_define("default", s_cts_hoopz_diaper_stand, 2, 1, 0); // fix 1 frame error
        scr_entity_set_look(s_cts_hoopz_diaper_stand, 2, 1, 0, 7, 6, 5, 4, 3);
        scr_entity_animation_define("stand_UP", s_cts_hoopz_diaper_stand, 2, 1, 0);
        scr_entity_set_walk(s_cts_hoopzDiaperN, s_cts_hoopzDiaperNE, s_cts_hoopzDiaperE, s_cts_hoopzDiaperSE, s_cts_hoopzDiaperS, s_cts_hoopzDiaperSW, s_cts_hoopzDiaperW, s_cts_hoopzDiaperNW);
    }
    else if (BodySwap() == "prison")
    {
        scr_entity_animation_define("default", sHoopzPrison, 5, 1, 0); // fix 1 frame error
        scr_entity_set_look(sHoopzPrison, 5, 5, 0, 0, 15, 15, 10, 10);
        scr_entity_animation_define("stand_UP", sHoopzPrison, 5, 1, 0);
        scr_entity_animation_define("stand_DOWN", sHoopzPrison, 15, 1, 0);
        scr_entity_animation_define("stomach_start", sHoopzPrisonStomach, 0, 6, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define("stomach_end", sHoopzPrisonStomach, 5, 1, 0);
        scr_entity_animation_define("death_play", sHoopzPrisonDead, 0, 10, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define("death_end", sHoopzPrisonDead, 9, 1, 0);
        scr_entity_animation_define("diving", sHoopzPrisonDive, 0, 1, 0);
        scr_entity_animation_define(ANIMATION_NORTH,     sHoopzPrison, 05, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_NORTHEAST, sHoopzPrison, 05, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_EAST,      sHoopzPrison, 00, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_SOUTHEAST, sHoopzPrison, 00, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_SOUTH,     sHoopzPrison, 15, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_SOUTHWEST, sHoopzPrison, 15, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_WEST,      sHoopzPrison, 10, 5, ANIMATION_DEFAULT_SPEED);
        scr_entity_animation_define(ANIMATION_NORTHWEST, sHoopzPrison, 10, 5, ANIMATION_DEFAULT_SPEED);
    }
    else // You Are Hoopz
    {
        scr_entity_set_look(s_cts_hoopz_stand, 2, 1, 0, 7, 6, 5, 4, 3);
        scr_entity_animation_define("stand_UP", s_cts_hoopz_stand, 2, 1, 0);
        scr_entity_set_walk(s_cts_hoopzN, s_cts_hoopzNE, s_cts_hoopzE, s_cts_hoopzSE, s_cts_hoopzS, s_cts_hoopzSW, s_cts_hoopzW, s_cts_hoopzNW);
        scr_entity_animation_define("diving", sHoopzDive, 0, 1, 0);
        scr_entity_animation_define("stand_DOWN", s_cts_hoopz_stand, 6, 1, 0);
    }
    // Prison temp until real hoopz
    
}

/// Club shot
Animation("define", "candy gun pull", sHoopzCandyShot, 0, 6, ANIMATION_DEFAULT_SPEED);
Animation("define", "candy gun hold", sHoopzCandyShot, 5, 1, 0);
Animation("define", "candy gun shot", sHoopzCandyShot, 6, 11, ANIMATION_DEFAULT_SPEED);
Animation("define", "candy gun down", sHoopzCandyShot, 16, 1, 0);

//------------------------------------------
// DIRECTIONS - needs diagonals!
//------------------------------------------
scr_entity_animation_new(ANIMATION_UP);
scr_entity_animation_setSpriteIndex(ANIMATION_UP, s_cts_hoopzN);
scr_entity_animation_setSpeed(ANIMATION_UP, ANIMATION_DEFAULT_SPEED);

scr_entity_animation_new(ANIMATION_DOWN);
scr_entity_animation_setSpriteIndex(ANIMATION_DOWN, s_cts_hoopzS);
scr_entity_animation_setSpeed(ANIMATION_DOWN, ANIMATION_DEFAULT_SPEED);
 
scr_entity_animation_new(ANIMATION_LEFT);
scr_entity_animation_setSpriteIndex(ANIMATION_LEFT, s_cts_hoopzW);
scr_entity_animation_setSpeed(ANIMATION_LEFT, ANIMATION_DEFAULT_SPEED);
 
scr_entity_animation_new(ANIMATION_RIGHT);
scr_entity_animation_setSpriteIndex(ANIMATION_RIGHT, s_cts_hoopzE);
scr_entity_animation_setSpeed(ANIMATION_RIGHT, ANIMATION_DEFAULT_SPEED);

// Kneel down - For going down manhole
scr_entity_animation_define("kneelDown", s_cts_hoopzKneelDown, 0, 4, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("kneel", s_cts_hoopzKneelDown, 3, 1, 0);

//------------------------------------------
// Death and Respawn + Demise
//------------------------------------------
scr_entity_animation_define("death", s_cts_hoopzGetUp, 0, 1, 0);
scr_entity_animation_define("get_up", s_cts_hoopzGetUp, 0, 14, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("demise", s_HoopzDeath, 0, 10, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("demiseEnd", s_HoopzDeath, 9, 1, ANIMATION_DEFAULT_SPEED);

//------------------------------------------
// DIAPER HOOPZ
//------------------------------------------
//Diaper Death
scr_entity_animation_define("diaper_ground", s_cts_hoopzDiaperGround01, 0, 1, 0);
//Diaper Getting Spanked
scr_entity_animation_define("diaper_spank", s_cts_hoopzDiaperGround01, 0, 7, ANIMATION_DEFAULT_SPEED);
//Diaper Wail
scr_entity_animation_define("diaper_cry", s_cts_hoopzDiaper_spankCry, 0, 4, ANIMATION_DEFAULT_SPEED);
//Diaper Get Up
scr_entity_animation_define("diaper_getup", s_cts_hoopzDiaper_getUp, 0, 5, ANIMATION_DEFAULT_SPEED);

//------------------------------------------
// BRANDING CUTSCENE
//------------------------------------------
scr_entity_animation_new("before_punched");
scr_entity_animation_setSpriteIndex("before_punched", s_hoopz_punched);
scr_entity_animation_setFrame("before_punched", 0);

// Sadness
scr_entity_animation_define("sad0", s_cts_hoopzSadS, 0, 3, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("sad1", s_cts_hoopzSadS, 2, 1, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("sad2", s_cts_hoopzSadS, 2, 3, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("sad3", s_cts_hoopzSadS, 4, 1, ANIMATION_DEFAULT_SPEED * .66);
//scr_entity_animation_new("deadSonBath");
//scr_entity_animation_setSpriteIndex("deadSonBath", s_cts_deadSonBathAnimation01);
//scr_entity_animation_setSpeed("deadSonBath", ANIMATION_DEFAULT_SPEED * 0.5);
 
//scr_entity_animation_new("punched");
//scr_entity_animation_setSpriteIndex("punched", s_hoopz_punched);
//scr_entity_animation_setSpeed("punched", ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("punched", s_hoopz_punched, 0, 43, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ground", s_hoopz_punched, 42, 1, 0);

//scr_entity_animation_new("ground"); scr_entity_animation_setSpriteIndex("ground", s_hoopz_ground);

//------------------------------------------
// TUBER PEELING
//------------------------------------------
//scr_entity_animation_new("peeling_tubers");
//scr_entity_animation_setSpriteIndex("peeling_tubers", s_cts_peeling);
//scr_entity_animation_setSpeed("peeling_tubers", ANIMATION_DEFAULT_SPEED);
tuberSpeed = 1; // 1 is default
scr_entity_animation_define("peelSit0", s_cts_sit_peel, 0, 1, 0);
scr_entity_animation_define("peelSit1", s_cts_sit_peel, 0, 3, tuberSpeed);
scr_entity_animation_define("peelSit2", s_cts_sit_peel, 2, 1, 0);
scr_entity_animation_define("peelSit3", s_cts_sit_peel, 2, 2, tuberSpeed);
scr_entity_animation_define("peeling0", s_cts_peeling, 0, 1, 0);
scr_entity_animation_define("peeling1", s_cts_peeling, 0, 9, 0.5); //tuberSpeed);
scr_entity_animation_define("peeling2", s_cts_peeling, 9, 1, 0);
scr_entity_animation_define("peeling3", s_cts_peeling, 9, 3, tuberSpeed);
scr_entity_animation_define("peeling4", s_cts_peeling, 11, 1, 0);
scr_entity_animation_define("peeling5", s_cts_peeling, 11, 2, tuberSpeed);

//------------------------------------------
// ~ surprised hoopz! (both have entire animation and HOLD animation)
//------------------------------------------
scr_entity_animation_define("surpriseSW", s_cts_hoopzSurpriseSW, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldSW", s_cts_hoopzSurpriseSW, 2, 1, 0);
scr_entity_animation_define("surpriseS", s_cts_hoopzSurpriseSW, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldS", s_cts_hoopzSurpriseSW, 2, 1, 0);

scr_entity_animation_define("surpriseSE", s_cts_hoopzSurpriseSE, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldSE", s_cts_hoopzSurpriseSE, 2, 1, 0);
scr_entity_animation_define("surpriseE", s_cts_hoopzSurpriseSE, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldE", s_cts_hoopzSurpriseSE, 2, 1, 0);

scr_entity_animation_define("surpriseNW", s_cts_hoopzSurpriseNW, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldNW", s_cts_hoopzSurpriseNW, 2, 1, 0);
scr_entity_animation_define("surpriseW", s_cts_hoopzSurpriseNW, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldW", s_cts_hoopzSurpriseNW, 2, 1, 0);

scr_entity_animation_define("surpriseNE", s_cts_hoopzSurpriseNE, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldNE", s_cts_hoopzSurpriseNE, 2, 1, 0);
scr_entity_animation_define("surpriseN", s_cts_hoopzSurpriseNE, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("surpriseHoldN", s_cts_hoopzSurpriseNE, 2, 1, 0);

//------------------------------------------
// ~ kneeling - 8 directions
//------------------------------------------
scr_entity_animation_define("kneelHoldE", s_cts_hoopzKneelHold, 0, 1, 0);
scr_entity_animation_define("kneelHoldNE", s_cts_hoopzKneelHold, 1, 1, 0);
scr_entity_animation_define("kneelHoldN", s_cts_hoopzKneelHold, 2, 1, 0);
scr_entity_animation_define("kneelHoldNW", s_cts_hoopzKneelHold, 3, 1, 0);
scr_entity_animation_define("kneelHoldW", s_cts_hoopzKneelHold, 4, 1, 0);
scr_entity_animation_define("kneelHoldSW", s_cts_hoopzKneelHold, 5, 1, 0);
scr_entity_animation_define("kneelHoldS", s_cts_hoopzKneelHold, 6, 1, 0);
scr_entity_animation_define("kneelHoldSE", s_cts_hoopzKneelHold, 7, 1, 0);

//------------------------------------------
// ~ temporary poses ~ by bort
//------------------------------------------
//scr_entity_animation_new("temp_surprise");
//scr_entity_animation_setSpriteIndex("temp_surprise", s_cts_hoopzSurpriseNE);
//scr_entity_animation_setSpeed("temp_surprise", ANIMATION_DEFAULT_SPEED);

scr_entity_animation_new("temp_kneel_se");
scr_entity_animation_setSpriteIndex("temp_kneel_se", s_cts_kneelSE);
scr_entity_animation_setSpeed("temp_kneel_se", ANIMATION_DEFAULT_SPEED * 0.5);

scr_entity_animation_new("kneeling");
scr_entity_animation_setSpriteIndex("kneeling", s_cts_kneeling);
scr_entity_animation_setSpeed("kneeling", ANIMATION_DEFAULT_SPEED);

scr_entity_animation_new("sad_s");
scr_entity_animation_setSpriteIndex("sad_s", s_cts_hoopzSadS);
scr_entity_animation_setSpeed("sad_s", ANIMATION_DEFAULT_SPEED);

scr_entity_animation_define("battleNorth", s_cts_hoopzBattleStanceN, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("battleNorthLast", s_cts_hoopzBattleStanceN, 2, 1, 0);

scr_entity_animation_new("meditation");
scr_entity_animation_setSpriteIndex("meditation", sHoopzLotus);
scr_entity_animation_setSpeed("meditation", 0);
scr_entity_animation_setRange("meditation", 0, 1);

//------------------------------------------
// REFORMAT (temporary)
//------------------------------------------
scr_entity_animation_new("reformat");
scr_entity_animation_setSpriteIndex("reformat", s_cts_hoopzSurpriseNW);

scr_entity_animation_new("reformatted");
scr_entity_animation_setSpriteIndex("reformatted", s_cts_hoopzS);

//------------------------------------------
// CYBERSPEAR (temporary)
//------------------------------------------

// after "csBroken", "csThrown", or "csInjected", 
//    revert Hoopz stance back to normal (no cyberspear)!

scr_entity_animation_new("csBrandishing");
scr_entity_animation_setSpriteIndex("csBrandishing", s_placeholder);

scr_entity_animation_new("csBrandished");
scr_entity_animation_setSpriteIndex("csBrandished", s_placeholder);

scr_entity_animation_new("csInjecting");
scr_entity_animation_setSpriteIndex("csInjecting", s_placeholder);

scr_entity_animation_new("csInjected");
scr_entity_animation_setSpriteIndex("csInjected", s_placeholder);

scr_entity_animation_new("csThrowing");
scr_entity_animation_setSpriteIndex("csThrowing", s_placeholder);

scr_entity_animation_new("csThrown");
scr_entity_animation_setSpriteIndex("csThrown", s_placeholder);

scr_entity_animation_new("csBreaking");
scr_entity_animation_setSpriteIndex("csBreaking", s_placeholder);

scr_entity_animation_new("csBroken");
scr_entity_animation_setSpriteIndex("csBroken", s_placeholder);

//------------------------------------------
// OLDMAN / THRONE
//------------------------------------------
scr_entity_animation_new("unholsterOldman");
scr_entity_animation_setSpriteIndex("unholsterOldman", s_placeholder);

scr_entity_animation_new("unholsteredOldman");
scr_entity_animation_setSpriteIndex("unholsteredOldman", s_placeholder);

scr_entity_animation_new("shootOldman");
scr_entity_animation_setSpriteIndex("shootOldman", s_placeholder);

scr_entity_animation_new("throneSit");
scr_entity_animation_setSpriteIndex("throneSit", s_placeholder);

scr_entity_animation_new("throneSeated");
scr_entity_animation_setSpriteIndex("throneSeated", s_placeholder);

//------------------------------------------
// SINGING FOR WEDDING QUEST
//------------------------------------------
scr_entity_animation_new("singing");
scr_entity_animation_setSpriteIndex("singing", s_cts_singing);

scr_entity_animation_new("singingStand");
scr_entity_animation_setSpriteIndex("singingStand", s_cts_singingStand);

//------------------------------------------
// SPINNING RECORDS AT BOOTYBASS 
// -----------------------------------------
scr_entity_animation_new("hoopzDJ");
scr_entity_animation_setSpriteIndex("hoopzDJ", s_mg_booty_hoopz_spinning);
scr_entity_animation_setSpeed("hoopzDJ", ANIMATION_DEFAULT_SPEED);

// Action

scr_entity_animation_define("action_E",  s_cts_action, 0, 3, spd);
scr_entity_animation_define("action_NE", s_cts_action, 3, 3, spd);
scr_entity_animation_define("action_N",  s_cts_action, 6, 3, spd);
scr_entity_animation_define("action_NW", s_cts_action, 9, 3, spd);
scr_entity_animation_define("action_W",  s_cts_action, 12, 3, spd);
scr_entity_animation_define("action_SW", s_cts_action, 15, 3, spd);
scr_entity_animation_define("action_S",  s_cts_action, 18, 3, spd);
scr_entity_animation_define("action_SE", s_cts_action, 21, 3, spd);

scr_entity_animation_define("grapePrepare", sHoopzDrinking, 0, 1, 0);
scr_entity_animation_define("grapeFull", sHoopzDrinking, 1, 1, 0);
scr_entity_animation_define("grapeDrink", sHoopzDrinking, 1, 5, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("grapeEmpty", sHoopzDrinking, 5, 1, 0);

//------------------------------------------
// FISHING 
// -----------------------------------------
scr_entity_animation_new("fishing");
scr_entity_animation_setSpriteIndex("fishing", s_HoopzFishing);
scr_entity_animation_setSpeed("fishing", ANIMATION_DEFAULT_SPEED);

scr_entity_animation_define("fishingIdle", sHoopzFishCast, 0, 1, 0);
scr_entity_animation_define("fishingReel", sHoopzFishCast, 1, 1, 0);
scr_entity_animation_define("fishingCast", sHoopzFishCast, 0, 8, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("fishingCast1", sHoopzFishCast, 8, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("fishingCast2", sHoopzFishCast, 8, 2, ANIMATION_DEFAULT_SPEED);

scr_entity_animation_define("fishingPulling", s_HoopzFishing, 9, 1, 0);
scr_entity_animation_define("fishingLosing", s_HoopzFishing, 8, 1, 0);

scr_entity_animation_define("fishingShowCatch", sHoopzFishShow, 0, 4, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("fishingShowCatchHold", sHoopzFishShow, 3, 1, ANIMATION_DEFAULT_SPEED);
//------------------------------------------
// BBALL DRIBBLING
//------------------------------------------
scr_entity_animation_define("ballHold", sHoopzDribble, 0, 1, 0);
scr_entity_animation_define("ballHoldToDribble", sHoopzDribble, 0, 3, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballDribbleLast", sHoopzDribble, 2, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballDribble", sHoopzDribble, 2, 7, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballRightToLeft", sHoopzDribble, 8, 6, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballRightToLeftLast", sHoopzDribble, 13, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballLeftToRight", sHoopzDribble, 14, 6, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballLeftToRightLast", sHoopzDribble, 19, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballDribbleRight", sHoopzDribble, 20, 6, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballDribbleRightLast", sHoopzDribble, 25, 1, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballCrossLeftToRight", sHoopzDribble, 26, 7, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballCrossLeftToRightLast", sHoopzDribble, 32, 1, 0);
scr_entity_animation_define("ballCrossRightToLeft", sHoopzDribble, 33, 7, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("ballCrossRightToLeftLast", sHoopzDribble, 32, 1, 0);

scr_entity_animation_define("anguishDrop", sHoopzAnguish, 0, 5, ANIMATION_DEFAULT_SPEED * 0.5);
scr_entity_animation_define("anguishKneel", sHoopzAnguish, 4, 1, 0);
scr_entity_animation_define("anguish", sHoopzAnguish, 4, 24, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("anguishLast", sHoopzAnguish, 27, 1, 0);

/// DIAPER HOOPZ
scr_entity_animation_define("diaper_action_NE", s_cts_hoopzDiaper_useNE, 0, 3, spd);
scr_entity_animation_define("diaper_stand_NE", s_cts_hoopz_diaper_stand, 1, 1, 0);
scr_entity_animation_define("diaper_action_N", s_cts_hoopzDiaper_useNE, 0, 3, spd);
scr_entity_animation_define("diaper_stand_N", s_cts_hoopz_diaper_stand, 1, 1, 0);

// DIAPER SURPRISE
scr_entity_animation_define("diaper_surpriseNE", s_cts_hoopzDiaperSurpriseNE, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldNE", s_cts_hoopzDiaperSurpriseNE, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseN", s_cts_hoopzDiaperSurpriseNE, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldN", s_cts_hoopzDiaperSurpriseNE, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseE", s_cts_hoopzDiaperSurpriseNE, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldE", s_cts_hoopzDiaperSurpriseNE, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseSE", s_cts_hoopzDiaperSurpriseNE, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldSE", s_cts_hoopzDiaperSurpriseNE, 5, 1, spd);

scr_entity_animation_define("diaper_surpriseNW", s_cts_hoopzDiaperSurpriseNW, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldNW", s_cts_hoopzDiaperSurpriseNW, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseW", s_cts_hoopzDiaperSurpriseNW, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldW", s_cts_hoopzDiaperSurpriseNW, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseSW", s_cts_hoopzDiaperSurpriseNW, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldSW", s_cts_hoopzDiaperSurpriseNW, 5, 1, spd);
scr_entity_animation_define("diaper_surpriseSW", s_cts_hoopzDiaperSurpriseNW, 0, 5, spd);
scr_entity_animation_define("diaper_surpriseHoldSW", s_cts_hoopzDiaperSurpriseNW, 5, 1, spd);

// DIAPER SHOT //
scr_entity_animation_define("diaper_shot", s_cts_hoopzDiaperShot, 0, 17, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("diaper_gone", s_cts_hoopzDiaperShot, 17, 1, ANIMATION_DEFAULT_SPEED);

// DRAW FIRAGAS //
scr_entity_animation_define("firaga", sHoopzFishShow, 2, 1, ANIMATION_DEFAULT_SPEED);

// Prison USE AT
scr_entity_animation_define("prison_action_E", sHoopzPrisonUseE, 0, 5, spd);
scr_entity_animation_define("prison_stand_E", sHoopzPrison, 0, 1, 0);
scr_entity_animation_define("prison_action_NE", sHoopzPrisonUseE, 0, 5, spd);
scr_entity_animation_define("prison_stand_NE", sHoopzPrison, 0, 1, 0);
scr_entity_animation_define("prison_action_SE", sHoopzPrisonUseE, 0, 5, spd);
scr_entity_animation_define("prison_stand_SE", sHoopzPrison, 0, 1, 0);
scr_entity_animation_define("prison_action_S", sHoopzPrisonUseE, 0, 5, spd);
scr_entity_animation_define("prison_stand_S", sHoopzPrison, 0, 1, 0);

scr_entity_animation_define("prison_action_W", sHoopzPrisonUseW, 0, 5, spd);
scr_entity_animation_define("prison_stand_W", sHoopzPrison, 10, 1, 0);
scr_entity_animation_define("prison_action_SW", sHoopzPrisonUseW, 0, 5, spd);
scr_entity_animation_define("prison_stand_SW", sHoopzPrison, 10, 1, 0);
scr_entity_animation_define("prison_action_NW", sHoopzPrisonUseW, 0, 5, spd);
scr_entity_animation_define("prison_stand_NW", sHoopzPrison, 10, 1, 0);
scr_entity_animation_define("prison_action_N", sHoopzPrisonUseW, 0, 5, spd);
scr_entity_animation_define("prison_stand_N", sHoopzPrison, 10, 1, 0);

// Prison SURPRISE AT
scr_entity_animation_define("prison_surpriseNE", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldNE", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseN", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldN", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseE", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldE", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseSE", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldSE", sHoopzPrisonSurpriseSE, 4, 1, spd);

scr_entity_animation_define("prison_surpriseNW", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldNW", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseW", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldW", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseSW", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldSW", sHoopzPrisonSurpriseSE, 4, 1, spd);
scr_entity_animation_define("prison_surpriseSW", sHoopzPrisonSurpriseSE, 0, 5, spd);
scr_entity_animation_define("prison_surpriseHoldSW", sHoopzPrisonSurpriseSE, 4, 1, spd);

scr_entity_animation_define("prison_sad0", sHoopzPrisonSad, 0, 3, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("prison_sad1", sHoopzPrisonSad, 2, 1, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("prison_sad2", sHoopzPrisonSad, 2, 3, ANIMATION_DEFAULT_SPEED * .66);
scr_entity_animation_define("prison_sad3", sHoopzPrisonSad, 4, 1, ANIMATION_DEFAULT_SPEED * .66);

scr_entity_animation_define("stairs_enter_down", s_cts_hoopzStairsEnterDown, 0, 12, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("stairs_enter_up", s_cts_hoopzStairsEnterUp, 0, 12, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("stairs_exit_down", s_cts_hoopzStairsExitDown, 0, 12, ANIMATION_DEFAULT_SPEED);
scr_entity_animation_define("stairs_exit_up", s_cts_hoopzStairsExitUp, 0, 12, ANIMATION_DEFAULT_SPEED);

scr_entity_animation_define("invisible", s_empty, 0, 1, ANIMATION_DEFAULT_SPEED);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BlueFace("begin");
event_inherited();
BlueFace("end");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>25,25</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inherit form parent //
event_inherited();

/// Create
color = c_white;
value = 0;

// Setup //
init_RadiusMin = 0;
init_Radius = 0;
init_Pow = 0;
init_Interval = 0;
init_Shake = 0;
init_Height = 0;

att_Time = 0;
att_TimeRand = 0;
att_RadiusMinGain = 0;
att_RadiusGain = 0;
att_PowGain = 0;
att_PowRand = 0;
att_IntervalGain = 0;
att_IntervalRand = 0;
att_HeightGain = 0;
att_HeightRand = 0;
att_AccelX = 0;
att_AccelY = 0;
att_AccelZ = 0;

sus_Time = 0;
sus_TimeRand = 0;
sus_RadiusMinGain = 0;
sus_RadiusGain = 0;
sus_PowGain = 0;
sus_PowRand = 0;
sus_IntervalGain = 0;
sus_IntervalRand = 0;
sus_HeightGain = 0;
sus_HeightRand = 0;
sus_AccelX = 0;
sus_AccelY = 0;
sus_AccelZ = 0;

cool_Time = 0;
cool_TimeRand = 0;
cool_RadiusMinGain = 0;
cool_RadiusGain = 0;
cool_PowGain = 0;
cool_PowRand = 0;
cool_IntervalGain = 0;
cool_IntervalRand = 0;
cool_HeightGain = 0;
cool_HeightRand = 0;
cool_AccelX = 0;
cool_AccelY = 0;
cool_AccelZ = 0;

att_Interval = 0;
sus_Interval = 0;
cool_Interval = 0;

initialized = false;

cur_RadiusMin = 0;
cur_Radius = 0;
cur_Pow = 0;
cur_Interval = 0;
cur_Height = 0;
cur_AccelX = 0;
cur_AccelY = 0;
cur_AccelZ = 0;

nextBlast = 0;
nextBlastInt = 0;

followObj = noone;
exp_sound = NULL_STRING;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
// Inherit //
event_inherited();

// Pause //
//if paused() exit;

// Stuff //
var delta = dt();

// Follow an object if such a thing exists //
/*
if(followObj != noone)
{
    if(instance_exists(followObj))
    {
        x = followObj.x;
        y = followObj.y;
        if(object_is_ancestor(followObj,Particle))
        {
            z = followObj.z;
        }
    }
}*/

// Initialize //
if(!initialized)
{
    initialized = true;
    att_Time+= random(att_TimeRand);
    sus_Time+= random(sus_TimeRand);
    cool_Time+= random(cool_TimeRand);
    
    cur_RadiusMin = init_RadiusMin;
    cur_Radius = init_Radius;
    cur_Pow = init_Pow;
    cur_Interval = init_Interval;
    cur_Height = init_Height;
    
    nextBlast = init_Interval + random(att_IntervalRand);
}

nextBlastInt+=delta;

///Attack explosion
if(att_Interval&lt;att_Time)
{
    att_Interval+= delta;
    while (nextBlastInt&gt;=nextBlast)
    {
        nextBlastInt-=nextBlast;
        nextBlast = cur_Interval + random(att_IntervalRand);
        
        rad = cur_RadiusMin+random(cur_Radius-cur_RadiusMin);
        dir = random(360);
        obx = x + lengthdir_x(rad,dir);
        oby = y + lengthdir_y(rad,dir);
        obz = z + random(cur_Height);
        pow = cur_Pow+random(att_PowRand);
        event_user(0); // Make puff
    }
    
    cur_RadiusMin += att_RadiusMinGain*delta;
    cur_Radius += att_RadiusGain*delta;
    cur_Pow += att_PowGain*delta;
    cur_Interval += att_IntervalGain*delta;
    cur_Height += att_HeightGain*delta;
    cur_AccelX += att_AccelX*delta;
    cur_AccelY += att_AccelY*delta;
    cur_AccelZ += att_AccelZ*delta;
}
else if(sus_Interval&lt;sus_Time)
{
    sus_Interval+= delta;
    while (nextBlastInt&gt;=nextBlast)
    {
        nextBlastInt-=nextBlast;
        nextBlast = cur_Interval + random(sus_IntervalRand);
        
        rad = cur_RadiusMin+random(cur_Radius-cur_RadiusMin);
        dir = random(360);
        obx = x + lengthdir_x(rad,dir);
        oby = y + lengthdir_y(rad,dir);
        obz = z + random(cur_Height);
        pow = cur_Pow+random(sus_PowRand);
        event_user(0); // Make puff
    }
    
    cur_RadiusMin += sus_RadiusMinGain*delta;
    cur_Radius += sus_RadiusGain*delta;
    cur_Pow += sus_PowGain*delta;
    cur_Interval += sus_IntervalGain*delta;
    cur_Height += sus_HeightGain*delta;
    cur_AccelX += sus_AccelX*delta;
    cur_AccelY += sus_AccelY*delta;
    cur_AccelZ += sus_AccelZ*delta;
}
else if(cool_Interval&lt;cool_Time)
{
    cool_Interval+= delta;
    while (nextBlastInt&gt;=nextBlast)
    {
        nextBlastInt-=nextBlast;
        nextBlast = cur_Interval + random(cool_IntervalRand);
        
        rad = cur_RadiusMin+random(cur_Radius-cur_RadiusMin);
        dir = random(360);
        obx = x + lengthdir_x(rad,dir);
        oby = y + lengthdir_y(rad,dir);
        obz = z + random(cur_Height);
        pow = cur_Pow+random(cool_PowRand);
        event_user(0); // Make puff
    }
    
    cur_RadiusMin += cool_RadiusMinGain*delta;
    cur_Radius += cool_RadiusGain*delta;
    cur_Pow += cool_PowGain*delta;
    cur_Interval += cool_IntervalGain*delta;
    cur_Height += cool_HeightGain*delta;
    cur_AccelX += cool_AccelX*delta;
    cur_AccelY += cool_AccelY*delta;
    cur_AccelZ += cool_AccelZ*delta;
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make puff
Smoke("puff", obx, oby, obz, pow, color, value);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

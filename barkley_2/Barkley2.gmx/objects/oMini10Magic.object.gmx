<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2600000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
cRed = make_color_rgb(255 - 16, 16, 16);
cYellow = make_color_rgb(255 - 16, 255 - 16, 16);
cBlue = make_color_rgb(16, 16, 255 - 16);

state = 0;
cou = 0;

wandX = (global.miniWidth / 2);
wandY = 0;

handX = (global.miniWidth / 2);
handY = 0;

hatX = (global.miniWidth / 2); 
hatY = (global.miniHeight / 2) + 30;

itemShow = 0;
itemX = hatX;
itemY = hatY;
itemType = choose("sprite", "fruit", "number", "letter");
if (itemType == "sprite")
{
    itemSpr = sMiniMagicItem;
    itemSub = floor(random(3));
    itemNam[0] = "BANANA";
    itemNam[1] = "10 NUERO-SHEKELS";
    itemNam[2] = "GOOD BREW";
    itemName = itemNam[itemSub];
}
else if (itemType == "fruit")
{
    itemSpr = sMiniFruit;
    itemSub = floor(random(7));
    itemNam[0] = "BANANA";
    itemNam[1] = "CRANBERRIES";
    itemNam[2] = "ORANGE";
    itemNam[3] = "LIME";
    itemNam[4] = "GRAPES";
    itemNam[5] = "STRAWBERRY";
    itemNam[6] = "RAZOR";
    itemName = itemNam[itemSub];
}
else if (itemType == "number")
{
    itemString = string(floor(random(101)));
    itemName = "THE NUMBER " + itemString;
}
else if (itemType == "letter")
{
    itemString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    itemString = string_copy(itemString, 1 + floor(random(26)), 1); //string(floor(random(101)));
    itemName = "THE LETTER " + itemString;
}

sel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hat animation
if (MiniKeyPress("cancel")) { Minigame("stop"); instance_destroy(); }

if (state == 0)
{
    if (MiniKeyPress("action"))
    {
        state = 1;
    }
}
else if (state == 1)
{
    cou += 6 * dt();
    if (cou &lt; 25 + 10)
    {
        wandY += ((3 * 60) / 10) * dt();
    }
    else if (cou &lt; 50 + 10 + 10)
    {
        wandY -= ((3 * 60) / 10) * dt();
    }
    else if (cou &lt; 2000)
    {
        handY += ((2 * 60) / 10) * dt();
        if (handY &gt;= hatY) { handY = hatY; cou = 2000; }
    }
    else if (cou &lt; 2030)
    {
        itemShow = 1;
        handY -= ((2 * 60) / 10) * dt();;
        itemY -= ((2 * 60) / 10) * dt();;
    }
    else if (cou &lt; 2060)
    {
        handX += ((3 * 60) / 10) * dt();;
        itemX += ((3 * 60) / 10) * dt();;
    }
    else if (cou &lt; 2090)
    {
        handY += ((2 * 60) / 10) * dt();;
        itemY += ((2 * 60) / 10) * dt();;
    }
    else if (cou &lt; 2150)
    {
        handY -= ((4 * 60) / 10) * dt();;
    }
    else
    {
        state = 2;
    }
}
else if (state == 2)
{
    if (MiniKeyPress("left"))
    {
        sel = !sel;
    }
    if (MiniKeyPress("right"))
    {
        sel = !sel;
    }
    if (MiniKeyPress("action"))
    {
        if (sel == 0) { audio_play_sound_ext("sn_ptonyright", 10, 0); state = 4; }
        else { audio_play_sound_ext("sn_ptonywrong", 10, 0); state = 3; }
    }
}
else
{
    if (MiniKeyPress("action"))
    {
        //room_goto(rMiniSelect);
        instance_destroy();
        instance_create(0, 0, oMini10Select);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw stuff
draw_set_color(c_black); draw_rectangle(global.miniX, global.miniY, global.miniX + (385 * global.miniScale), global.miniY + (241 * global.miniScale), 0);
//hat
ds = global.miniScale;
draw_sprite_ext(sMiniMagicHat, 0, global.miniX + (hatX * ds), global.miniY + (hatY * ds), ds, ds, 0, c_white, 1);

//wand
draw_sprite_ext(sMiniMagicWand, 0, global.miniX + (wandX * ds), global.miniY + (wandY * ds), ds, ds, 0, c_white, 1);

//item
if (itemShow == 1)
{
    if (itemType == "sprite")
    {
        draw_sprite_ext(itemSpr, itemSub, global.miniX + (itemX * ds), global.miniY + (itemY * ds), ds, ds, 0, c_white, 1);
    }
    else if (itemType == "fruit")
    {
        draw_sprite_ext(itemSpr, itemSub, global.miniX + (itemX * ds), global.miniY + ((itemY - 24) * global.miniScale), ds, ds, 0, c_white, 1);
    }
    else if (itemType == "number" || itemType == "letter")
    {
        scr_font(CourierNew24b, c_white, 1, 2);
        draw_text_transformed(global.miniX + (itemX * ds), global.miniY + (itemY * ds), itemString, ds, ds, 0);
        scr_font(CourierNew24b, c_white, 0, 0);
    }
}

//hand
draw_sprite_ext(sMiniMagicHand, 0, global.miniX + (handX * ds), global.miniY + (handY * ds), ds, ds, 0, c_white, 1);

//hat front
draw_sprite_ext(sMiniMagicHat, 1, global.miniX + (hatX * ds), global.miniY + (hatY * ds), ds, ds, 0, c_white, 1);

//Blue border
draw_set_color(cBlue);
draw_rectangle(global.miniX, global.miniY, global.miniX + global.miniWidthS, global.miniY + (17 * global.miniScale), 0);

//TEXT
if (state == 0)
{
    draw_set_color(c_white);
    draw_set_font(CourierNew12);
    draw_set_halign(1);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, "GUESS WHAT IS IN THE HAT", global.miniScale, global.miniScale, 0);
    draw_set_halign(0);
}
else if (state == 2)
{
    draw_set_color(c_white);
    draw_set_font(CourierNew12);
    draw_set_halign(1);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, "DID YOU GUESS " + itemName + "?", global.miniScale, global.miniScale, 0);
    if (sel == 0) draw_set_color(c_red); else draw_set_color(c_white);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2) - (64 * global.miniScale), global.miniY + (16 * global.miniScale), "YES", global.miniScale, global.miniScale, 0);
    if (sel == 1) draw_set_color(c_red); else draw_set_color(c_white);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2) + (64 * global.miniScale), global.miniY + (16 * global.miniScale), "NO", global.miniScale, global.miniScale, 0);
    draw_set_halign(0);
}
else if (state == 3)
{
    draw_set_color(c_white);
    draw_set_font(CourierNew12);
    draw_set_halign(1);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, "BETTER LUCK NEXT TIME", global.miniScale, global.miniScale, 0);
    draw_set_halign(0);
}
else if (state == 4)
{
    draw_set_color(c_white);
    draw_set_font(CourierNew12);
    draw_set_halign(1);
    draw_text_transformed(global.miniX + (global.miniWidthS / 2), global.miniY, "CONGRATULATIONS", global.miniScale, global.miniScale, 0);
    draw_set_halign(0);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

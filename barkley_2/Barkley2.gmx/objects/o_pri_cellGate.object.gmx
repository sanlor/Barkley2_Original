<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_pri_cellGate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>EnvironSemisolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create
event_inherited();
if (Quest("prisonDoors") == 0) event_user(10);
else event_user(11);
//locked = Quest("prisonDoors");
image_index = 0;//Quest("prisonDoors");
open = !locked;
collisionDoor = -1;
timerOpen = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step
if (paused()) exit;
if (locked == 0)
{
    if (open == 0)
    {
        open = 0.001;
        if (collisionDoor != -1)
            scr_collisionSystem_remove_shape_semisolid(collisionDoor);
    }
}
else
{
    if (open == 1)
    {
        open = 0.999;
        collisionDoor = sat_make_shape_fromSprite(sprite_index, x, y);
        scr_collisionSystem_add_shape_semisolid(collisionDoor);
    }
}
open = Goto(open, !locked, dt_sec() * 2);

// If liberated door is already open so exit
if (Quest("prisonLiberated") == 3 &amp;&amp; Quest("prisonDoors") == 1) 
{
    open = !locked;
    exit;
}

// Open after restpauses //
if timerOpen &gt; 0 then
    {
    timerOpen -= dt();
    if timerOpen &lt;= 0 then 
        {
        //locked = 0;
        Quest("prisonDoorOpen", 0);
        Quest("prisonDoors", 1);
        event_user(11);
        open = 0;//!locked;
        }        
    }
else if (timerOpen == 0 &amp;&amp; (Quest("prisonDoorOpen") == 1 || Quest("prisonLiberated") == 3)) timerOpen = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OPEN
if (x &lt; 184)
{
    if (Quest("prisonLiberated") == 3) locked = 0;
    else locked = 1;
}
else locked = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// LOCK
locked = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Doors
// sat_make_shape_rect(cx, cy, cw, ch)
scr_collisionSystem_add_shape_semisolid(sat_make_shape_rect(x + 14, y-4, 28 / 2, 8 / 2));
scr_collisionSystem_add_shape_semisolid(sat_make_shape_rect(x + 76, y-4, 42 / 2, 8 / 2));
if (locked)
{
    collisionDoor = sat_make_shape_fromSprite(sprite_index, x, y);
    scr_collisionSystem_add_shape_semisolid(collisionDoor);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
draw_self();
draw_sprite(sprite_index, 1, x + (open * 29), y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

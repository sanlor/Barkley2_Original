<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Simulated view, HUD, Gun, Item, Zauber
scale = global.qmScale;
roomWidth = global.qmRoomWidth;
roomHeight = global.qmRoomHeight;

doKill = 0;
doQ = 0;
menu_release = 1;

banPressed = 0; //bandolier pressed
//mouse wheel is used for swapping on PC
zauPressed = 0; //zauber swap pressed
itmPressed = 0;

x = 0;//view_xview[0];
y = 0;//view_yview[0];

xs = x;
ys = y;

dest_x = 0;
dest_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View shift
//xs = view_xview[0];
//ys = view_yview[0];
if (instance_exists(o_qmenu_button))
{
    if ((o_qmenu_button.state - 2) = 1) { dest_x = xs; dest_y = ys + (24 * scale); } //was +24 y
    else if ((o_qmenu_button.state - 2) = 0) { dest_x = xs - (24 * scale); dest_y = ys; } //was -24x
    else if ((o_qmenu_button.state - 2) = 2) { dest_x = xs + (24 * scale); dest_y = ys; } //was 24x
    else { dest_x = xs; dest_y = ys; }
}
else //SCROLLING WEAPONS TEST
{  
    dest_x = xs;
    dest_y = ys;
}

//Tween view coods
if ((round(x) != round(dest_x)) or (round(y) != round(dest_y))) 
{
    x = lerp(x, dest_x, 0.8);
    y = lerp(y, dest_y, 0.8);
}

exit;
if (instance_exists(o_qmenu_button))
{
    view_xview[0] = x;
    view_yview[0] = y;
    view_xview[0] = min(max(view_xview[0], 0), room_width - SCREEN_WIDTH);
    view_yview[0] = min(max(view_yview[0], 0), room_height - SCREEN_HEIGHT);
}

//view_xview[0] = min(max(x - SCREEN_WIDTH/2, 0), room_width - SCREEN_WIDTH);
//view_yview[0] = min(max(y - SCREEN_HEIGHT/2, 0), room_height - SCREEN_HEIGHT);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set control type
if (global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE) global.controlType = "pc"; 
else global.controlType = "xbox"; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hotkeys, next / prev item / gun, open menu
//if (global.controlType == "xbox") scr_keys_process();
input_active = !global.event;
if (input_active == 0) exit;
if (instance_exists(o_hoopz) == 0) exit;
if (instance_exists(o_hud) == 0) exit;
if (paused() &amp;&amp; quickmenu() == 0) exit;
if (Quest("hudVisible") == 0) exit;

//HOTKEY CODE
if (global.keyinput_type == KEYINPUT_KEYBOARD_MOUSE)
{
    siz = scr_equipment_guns_bandolier_getSlotsUsed();
    for (i = 0; i &lt; siz; i += 1)
    {
        if (keyboard_check_pressed(scr_gun("hotkey key", i)))
        {
            scr_equipment_guns_bandolier_equip(i);
            scr_player_equip("swap");
        }
    }
}

////////////////////////////////////////////////CONTROLLER CONTROLS
if (global.toggleSwap == 0)
{
    if (scr_button("y"))
    {
        if (instance_exists(o_qmenu_button) == 0) quickmenu("create"); //instance_create(0, 0, o_qmenu_button);
        doKill = 1;
    }
    else if (doKill == 1)
    {
        doKill = 0;
        if (instance_exists(o_qmenu_button)) 
        {
            Destroy(o_qmenu_button);
            Destroy(o_qmenu);
            Destroy(o_qmenu_item);
        }
    }
}
else
{
    if (scr_button("y"))
    {
        if (menu_release == 1)
        {
            if (instance_exists(o_qmenu_button) == 0) 
            {
                quickmenu("create"); 
            }
            else 
            { 
                if instance_exists(o_qmenu_button) 
                {
                    Destroy(o_qmenu_button);
                    Destroy(o_qmenu);
                    Destroy(o_qmenu_item);
                }
            }
        }
        menu_release = 0;
    }
    else menu_release = 1;
}

////////////////////////////////////////////////PC CONTROLS
if (global.controlType == "pc")
{
    if (scr_input_check_pressed(KEYID_QUICKMENU, PLAYER1) || doQ == 1)
    {
        if (instance_exists(o_qmenu_button)) 
        {
            Destroy(o_qmenu_button);
            Destroy(o_qmenu);
            Destroy(o_qmenu_item);
        }
        else quickmenu("create");
    }
}
doQ = 0; //Used in o_qmenu_button
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

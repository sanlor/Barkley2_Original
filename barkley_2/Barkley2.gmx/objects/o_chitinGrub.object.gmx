<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bull_chitin_Grub</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>EnemyCombatActor</parentName>
  <maskName>mask_disk_16by16</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////you get all the default variables from EnemyCombatActor
event_inherited();

ds_list_add(target_list, o_enemygroup_cybergremlins);
ds_list_add(target_list, o_enemygroup_alienMenace);
ds_list_add(target_list, o_enemygroup_catfish);
ds_list_add(target_list, o_enemygroup_duergars);
ds_list_add(target_list, o_enemy_junkbot);
ds_list_add(target_list, o_enemy_crabbold);
ds_list_add(target_list, o_enemy_explosiveRat);
ds_list_add(target_list, o_enemy_sewerBeast_large);
ds_list_add(target_list, o_enemy_sewerBeast_young);
ds_list_add(target_list, o_enemy_weresnail_gunner);
ds_list_add(target_list, o_enemy_bugflower_mimic);
ds_list_add(target_list, o_enemy_werecroc);
ds_list_add(target_list, o_enemy_oozeMan);
ds_list_add(target_list, o_enemy_vineMonster);
ds_list_add(target_list, o_enemy_tengu_normal);
ds_list_add(target_list, o_enemy_tengu_crossbow);

scr_entity_setShadowCircle(6);
combatActor_setRenderSurfSize(32);

// Enemy stats
scr_enemyDB_statsGet(enemyBuild);

// Enemy configurations
scr_entity_setZHitbox(0, 24);
anim = 0;
animSpd = 0.2;
animStrike = 0;

deathSound = "brainbaby_death";
damageSound = "brainbaby_hurt";

// Movement
scr_path_setMovementType(scr_path_movementType_standard_offset);
scr_path_setWalldist(12+random(10));

var movement = scr_AI_movement_init(scr_AI_movementType_standard);
movement[? "dirOffsetMax"] = 40;
movement[? "animWalkSpd"] = 0.16;

// Passive and active states
var ark, conf, guard;
guard = scr_AI_addPassiveState(scr_AI_passive_guard);
guard[? "sndAlertSound"] = "brainmenace_scream";
conf = scr_AI_addActiveState(scr_AI_active_approach);
conf[? "walkScript"] = movement;

// Create and configure AI switch
var attack, action;
conf = scr_AI_setSwitch(scr_AI_switch_standard);

// Jump attack
attack = scr_AI_switch_standard("new_attack", conf);
action = scr_AI_addAction(scr_AI_action_jumpattack);
attack[? "action"] = action; 

AI_util_action_setDamage(action, 1, .5, .5, 0, 5, 40, STAGGER_HARDNESS_SOFT);
action[? "beforeTime"] = 2;
action[? "duringTimeBase"] = 2;
action[? "duringTimePerPixel"] = 0.03;
action[? "afterTime"] = 2;
action[? "jumpDistMax"] = 50;
action[? "jumpHeightBase"] = 10;
action[? "jumpHeightPerPixel"] = 0.1;
action[? "attackName"] = "jump";

action[? "soundReady"] = NULL;
action[? "soundJump"] = "hoopzweap_chitin_jump";
action[? "soundLand"] = NULL;

attack[? "distMax"] = 80;
attack[? "cooldownTime"] = 4; 
attack[? "cooldownTimeRnd"] = 6;
attack[? "doRetreat"] = true;

ticksBeforeDeath = 0;

//Initiate Animation Entities
scr_entity_animation_new("default");
_default_offset=0;
scale = 1;
alarm[0] = 1; ////reset stats based on pow
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Animations
scr_entity_animation_define("idle", s_bull_chitin_Grub, 0, 1, 0);
scr_entity_animation_define("stagger", s_bull_chitin_Grub, 0, 4, 0.6);
scr_entity_animation_define_ext("walk", s_bull_chitin_Grub, 0, 4, 0.32, 0.2, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set stats based on inherited power

scr_stats_rollBaseStats(0, 1+floor(0.15*parentPower), 1, 2+(0.5*parentPower), 3+(0.25*parentPower), 1);
scr_stats_genEffectiveStats();
scr_stats_resetCurrentStats();

scale = max(0.1,parentPower/35);

scr_entity_setShadowCircle(6*scale);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(ticksBeforeDeath&lt;10){ticksBeforeDeath+=dt();}
else
{
    ticksBeforeDeath = 0;
    scr_stats_setCurrentStat(id, STAT_CURRENT_HP, scr_stats_getCurrentStat(id, STAT_CURRENT_HP)-1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_obj = instance_create(x-4+random(8),y-4+random(8),o_FX);
_obj.sprite_index = s_AlienBlood_small;
_obj.image_speed = 0.25;
_obj.image_angle = choose(0,90,180,270);
audio_play_sound_at_xy("hoopzweap_chitin_die",false,0,x,y);

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/*
// Get quadrant enemy is facing towards
var quadrant = ((faceDir+360) mod 360) div 90;

// Set animation shifts
if (quadrant == 2 or quadrant == 3) {
    // Facing downwards
    scr_entity_animation_setShift("idle", 0);
    scr_entity_animation_setShift("walk", 0);
    scr_entity_animation_setShift("stagger", 0);
}
else {
    // Facing upwards
    scr_entity_animation_setShift("idle", 4);
    scr_entity_animation_setShift("walk", 4);
    scr_entity_animation_setShift("stagger", 0);
}
*/

image_angle = faceDir;


var image;
if(a_attackName == "stagger")
{
    image = scr_entity_animation_getImage("stagger");
}
else
{
    if(a_walking)
    {
        image = scr_entity_animation_getImage("walk");
    }
    else
    {
        image = scr_entity_animation_getImage("idle");
    }
}

draw_sprite_ext(sprite_index,floor(image),dx,dy,scale,scale,image_angle,c_white,1);

combatActor_draw_post();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>14,18</point>
    <point>14,14</point>
  </PhysicsShapePoints>
</object>

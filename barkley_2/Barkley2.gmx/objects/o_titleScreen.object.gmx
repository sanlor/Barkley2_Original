<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_barkley2_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fade_phase = 0;
fade = 0;
alpha_sine = 0;
//Music("queue", "mus_gbl_aristocrat");
snd_volume = 1;

cursorX = 0;
cursorY = 0;

starCou = 0;
var i;
for (i = 0; i &lt; SCREEN_HEIGHT * 1; i++)
{
    instance_create(random(SCREEN_WIDTH), i, o_logo_barkley2_star);
}

menuindex = "fadein";

selectSound = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(menuindex)
{
    case "main":
    
        if (fade_phase == 2 &amp;&amp; fade &lt;= -1)
        {
            // == Go to first room! ==
            paused(false);
            if (scr_savedata_get("player.respawn.do") == true) {
                // Respawn logic
                instance_create(0, 0, o_hoopz);
                with (o_hoopz) { scr_player_respawn(); }
            }
            else {
                // Teleport player to destination
                room_goto(room_target);
            }
        }
    
        
        if (scr_input_check_pressed(KEYID_ACTION, PLAYER1) ||
            scr_input_check_pressed(KEYID_CONFIRM, PLAYER1) ||
           (scr_input_getInputType() == KEYINPUT_GAMEPAD and scr_input_check_pressed(KEYID_PAUSE, PLAYER1)))
        {
            menuindex = "modeselect";
            mode = 0;
        }
    
        break;
    
    case "modeselect":
    
        if scr_input_check_pressed(KEYID_UP, PLAYER1) || scr_input_check_pressed(KEYID_QUICKMENU_UP, PLAYER1) {
            mode -= 1;
            if mode&lt;0 mode=2;
        }
        
        if scr_input_check_pressed(KEYID_DOWN, PLAYER1) || scr_input_check_pressed(KEYID_QUICKMENU_DOWN, PLAYER1) {
            mode += 1;
            if mode&gt;2 mode=0;
        }
    
        if  (scr_input_check_pressed(KEYID_ACTION, PLAYER1) ||
             scr_input_check_pressed(KEYID_CONFIRM, PLAYER1) ||
            (scr_input_getInputType() == KEYINPUT_GAMEPAD and scr_input_check_pressed(KEYID_PAUSE, PLAYER1)))
        {
            
            
            if (mode == 0) {
                // New game
                menuindex = "modefade";
                fade = 1;
            }
            
            if (mode == 1) {
                // Load game if savedata exists
                if (scr_savedata_exists()) {
                    menuindex = "modefade";
                    fade = 1;
                }
            }
            
            if (mode == 2) {
                // Exit
                menuindex = "modefade";
                fade = 1;
            }
                        
        }
        break;
    
    case "modefade":
        // No user input
        
        // Play sound
        selectSound -= dt();
        if (selectSound &lt;= 0) {
            snd = audio_play_sound_ext("sn_cursor_select01", 100, false);
            audio_sound_gain_ext(snd, snd_volume, 0);
            snd_volume *= .6;
            selectSound += 3.5;
        }
        
        audio_bgm_gain_atmospheric((fade + 1) / 2);
        
        if (fade &lt;= -1)
        {
            audio_set_bgm_instant("mus_blankTEMP");
            if (mode == 0) Game("new");
            if (mode == 1) Game("load");
            if (mode == 2) event_user(1); // Combat
        }
        break;

}

starCou += dt() / 2;
while (starCou &gt; 0) {
    instance_create(random(SCREEN_WIDTH), SCREEN_HEIGHT, o_logo_barkley2_star);
    starCou -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Combat mode
// Reset save data
scr_savedata_reset();
scr_player_newPlayerIdentity(); // generate new savegame
                
// Reset pause and music
audio_bgm_stop();
audio_bgm_gain_atmospheric(1);
paused(false);
                
// Start intro cutscene
//Quest("sceneBrandingStart", 1);
var room_target;
with(o_world) { room_target = scr_map_initialise_load_room(r_sw1_descent01, 448, 504); } //32,32 before
room_goto(room_target);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// New game - THIS IS IN DEBUG TOO
scr_savedata_delete();
scr_savedata_reset();
scr_player_newPlayerIdentity();
Quest("sceneBrandingStart", 1);
Quest("gameStart", 1);
paused(0);
Teleport(r_fct_eggRooms01, 0, 0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fade_phase &gt; 2)
{
    exit;
}

// Logo
draw_sprite(sprite_index, 0, x, y)

switch (menuindex) {
    case "main":
        // Flash-text
        alpha_sine += ((.05 * 30) / 10) * dt();
        var a = max(0, min(1, sin(alpha_sine) * 0.8 + 0.5));

        draw_set_alpha(a);
        scr_center_font();
        draw_set_font(global.fn_1);
        draw_text(x, y + 74, "Press START to continue the SaGa");
        draw_set_alpha(1);
        break;
        
    case "modeselect":
        scr_center_font();
        draw_set_font(global.fn_1);
        draw_text(x, y + 54, "Press START to continue the SaGa");
        
        if (mode == 0) draw_text(x, y + 74, "&gt;&gt; BEGIN &lt;&lt;");
        else draw_text(x, y + 74, "BEGIN");
        
        if (!scr_savedata_exists()) {
            draw_set_colour(c_gray);
        }
        if (mode == 1) draw_text(x, y + 94, "&gt;&gt; CONTINUE &lt;&lt;");
        else draw_text(x, y + 94, "CONTINUE");
        draw_set_colour(c_white);
        
        if (mode == 2) draw_text(x, y + 114, "&gt;&gt; COMBAT &lt;&lt;"); // Was Exit
        else draw_text(x, y + 114, "COMBAT");
        
        break;
    
    case "modefade":
        if ((current_time mod 150) &lt; 75)
        {
            scr_center_font();
            draw_set_font(global.fn_1)
            if (mode == 0) draw_text(x, y + 74, "BEGIN");
            if (mode == 1) draw_text(x, y + 94, "CONTINUE");
            if (mode == 2) draw_text(x, y + 114, "COMBAT"); 
        }
        break;
}

if (fade_phase == 2)
{
    if ((current_time mod 150) &lt; 75)
    {
        draw_set_alpha(1);
        scr_center_font();
        draw_set_font(global.fn_1);
        draw_text(x, y + yoffset, flashtext);
    }
}

// Fullscreen fade
if (fade_phase == 0)
{
    draw_set_color(c_black);
    draw_set_alpha(1-fade);
    draw_rectangle(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, false);
    fade += .024 * dt();
    if (fade &gt;= 1)
    {
        fade_phase = 1;
        alpha_sine = pi*1.5;
        menuindex = "main";
    }
    draw_set_color(c_white);
    draw_set_alpha(1);
}
else if (fade_phase == 2 or menuindex == "modefade")
{
    draw_set_color(c_black);
    draw_set_alpha(1-fade);
    draw_rectangle(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, false);
    fade -= .06 * dt();
    draw_set_color(c_white);
    draw_set_alpha(1);
}


// Reset draw config
draw_set_alpha(1);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>150,24</point>
    <point>150,150</point>
  </PhysicsShapePoints>
</object>
